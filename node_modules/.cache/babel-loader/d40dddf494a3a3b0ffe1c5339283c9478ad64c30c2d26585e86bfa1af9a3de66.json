{"ast":null,"code":"import _get from \"/home/gabriel_teles/ProjetosGit/jornadadev/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/gabriel_teles/ProjetosGit/jornadadev/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _construct from \"/home/gabriel_teles/ProjetosGit/jornadadev/node_modules/@babel/runtime/helpers/esm/construct.js\";\nimport _slicedToArray from \"/home/gabriel_teles/ProjetosGit/jornadadev/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/home/gabriel_teles/ProjetosGit/jornadadev/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _wrapNativeSuper from \"/home/gabriel_teles/ProjetosGit/jornadadev/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport _regeneratorRuntime from \"/home/gabriel_teles/ProjetosGit/jornadadev/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/gabriel_teles/ProjetosGit/jornadadev/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _inherits from \"/home/gabriel_teles/ProjetosGit/jornadadev/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/gabriel_teles/ProjetosGit/jornadadev/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _toConsumableArray from \"/home/gabriel_teles/ProjetosGit/jornadadev/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/home/gabriel_teles/ProjetosGit/jornadadev/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/gabriel_teles/ProjetosGit/jornadadev/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { _registerComponent, registerVersion, _getProvider, getApp, _removeServiceInstance, SDK_VERSION } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { FirebaseError, getDefaultEmulatorHostnameAndPort, createMockUserToken, getModularInstance, deepEqual } from '@firebase/util';\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nvar d = /*#__PURE__*/function () {\n  function d(t) {\n    _classCallCheck(this, d);\n    this.uid = t;\n  }\n  _createClass(d, [{\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */\n  }, {\n    key: \"toKey\",\n    value: function toKey() {\n      return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t.uid === this.uid;\n    }\n  }]);\n  return d;\n}();\n/** A user with a null UID. */\nd.UNAUTHENTICATED = new d(null),\n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), d.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar w = \"9.19.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar m = new Logger(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */\nfunction p(t) {\n  m.setLogLevel(t);\n}\nfunction y(t) {\n  if (m.logLevel <= LogLevel.DEBUG) {\n    for (var _len = arguments.length, e = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      e[_key - 1] = arguments[_key];\n    }\n    var n = e.map(v);\n    m.debug.apply(m, [\"Firestore (\".concat(w, \"): \").concat(t)].concat(_toConsumableArray(n)));\n  }\n}\nfunction g(t) {\n  if (m.logLevel <= LogLevel.ERROR) {\n    for (var _len2 = arguments.length, e = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      e[_key2 - 1] = arguments[_key2];\n    }\n    var n = e.map(v);\n    m.error.apply(m, [\"Firestore (\".concat(w, \"): \").concat(t)].concat(_toConsumableArray(n)));\n  }\n}\n\n/**\n * @internal\n */\nfunction _(t) {\n  if (m.logLevel <= LogLevel.WARN) {\n    for (var _len3 = arguments.length, e = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      e[_key3 - 1] = arguments[_key3];\n    }\n    var n = e.map(v);\n    m.warn.apply(m, [\"Firestore (\".concat(w, \"): \").concat(t)].concat(_toConsumableArray(n)));\n  }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */\nfunction v(t) {\n  if (\"string\" == typeof t) return t;\n  try {\n    return e = t, JSON.stringify(e);\n  } catch (e) {\n    // Converting to JSON failed, just log the object directly\n    return t;\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  /** Formats an object as a JSON string, suitable for logging. */\n  var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */\nfunction b() {\n  var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Unexpected state\";\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  var e = \"FIRESTORE (\".concat(w, \") INTERNAL ASSERTION FAILED: \") + t;\n  // NOTE: We don't use FirestoreError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n  throw g(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */\nfunction E(t, e) {\n  t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */\nfunction A(t,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar I = \"ok\",\n  T = \"cancelled\",\n  _R = \"unknown\",\n  P = \"invalid-argument\",\n  V = \"deadline-exceeded\",\n  $ = \"not-found\",\n  D = \"already-exists\",\n  N = \"permission-denied\",\n  F = \"unauthenticated\",\n  x = \"resource-exhausted\",\n  S = \"failed-precondition\",\n  q = \"aborted\",\n  O = \"out-of-range\",\n  k = \"unimplemented\",\n  C = \"internal\",\n  M = \"unavailable\",\n  L = \"data-loss\";\n\n/** An error returned by a Firestore operation. */\nvar U = /*#__PURE__*/function (_FirebaseError) {\n  _inherits(U, _FirebaseError);\n  var _super = _createSuper(U);\n  /** @hideconstructor */\n  function U(\n  /**\n   * The backend error code associated with this error.\n   */\n  t,\n  /**\n   * A custom error description.\n   */\n  e) {\n    var _this;\n    _classCallCheck(this, U);\n    _this = _super.call(this, t, e), _this.code = t, _this.message = e,\n    // HACK: We write a toString property directly because Error is not a real\n    // class and so inheritance does not work correctly. We could alternatively\n    // do the same \"back-door inheritance\" trick that FirebaseError does.\n    _this.toString = function () {\n      return \"\".concat(_this.name, \": [code=\").concat(_this.code, \"]: \").concat(_this.message);\n    };\n    return _this;\n  }\n  return _createClass(U);\n}(FirebaseError);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar j = /*#__PURE__*/_createClass(function j() {\n  var _this2 = this;\n  _classCallCheck(this, j);\n  this.promise = new Promise(function (t, e) {\n    _this2.resolve = t, _this2.reject = e;\n  });\n});\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar B = /*#__PURE__*/_createClass(function B(t, e) {\n  _classCallCheck(this, B);\n  this.user = e, this.type = \"OAuth\", this.headers = new Map(), this.headers.set(\"Authorization\", \"Bearer \".concat(t));\n});\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */\nvar z = /*#__PURE__*/function () {\n  function z() {\n    _classCallCheck(this, z);\n  }\n  _createClass(z, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return Promise.resolve(null);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, e) {\n      // Fire with initial user.\n      t.enqueueRetryable(function () {\n        return e(d.UNAUTHENTICATED);\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }]);\n  return z;\n}();\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */\nvar Q = /*#__PURE__*/function () {\n  function Q(t) {\n    _classCallCheck(this, Q);\n    this.token = t,\n    /**\n     * Stores the listener registered with setChangeListener()\n     * This isn't actually necessary since the UID never changes, but we use this\n     * to verify the listen contract is adhered to in tests.\n     */\n    this.changeListener = null;\n  }\n  _createClass(Q, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return Promise.resolve(this.token);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, e) {\n      var _this3 = this;\n      this.changeListener = e,\n      // Fire with initial user.\n      t.enqueueRetryable(function () {\n        return e(_this3.token.user);\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {\n      this.changeListener = null;\n    }\n  }]);\n  return Q;\n}();\n/** Credential provider for the Lite SDK. */\nvar W = /*#__PURE__*/function () {\n  function W(t) {\n    var _this4 = this;\n    _classCallCheck(this, W);\n    this.auth = null, t.onInit(function (t) {\n      _this4.auth = t;\n    });\n  }\n  _createClass(W, [{\n    key: \"getToken\",\n    value: function getToken() {\n      var _this5 = this;\n      return this.auth ? this.auth.getToken().then(function (t) {\n        return t ? (E(\"string\" == typeof t.accessToken), new B(t.accessToken, new d(_this5.auth.getUid()))) : null;\n      }) : Promise.resolve(null);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, e) {}\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }]);\n  return W;\n}();\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */\nvar G = /*#__PURE__*/function () {\n  function G(t, e, n) {\n    _classCallCheck(this, G);\n    this.t = t, this.i = e, this.o = n, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, this.u = new Map();\n  }\n  /**\n   * Gets an authorization token, using a provided factory function, or return\n   * null.\n   */\n  _createClass(G, [{\n    key: \"h\",\n    value: function h() {\n      return this.o ? this.o() : null;\n    }\n  }, {\n    key: \"headers\",\n    get: function get() {\n      this.u.set(\"X-Goog-AuthUser\", this.t);\n      // Use array notation to prevent minification\n      var t = this.h();\n      return t && this.u.set(\"Authorization\", t), this.i && this.u.set(\"X-Goog-Iam-Authorization-Token\", this.i), this.u;\n    }\n  }]);\n  return G;\n}();\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */\nvar K = /*#__PURE__*/function () {\n  function K(t, e, n) {\n    _classCallCheck(this, K);\n    this.t = t, this.i = e, this.o = n;\n  }\n  _createClass(K, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return Promise.resolve(new G(this.t, this.i, this.o));\n    }\n  }, {\n    key: \"start\",\n    value: function start(t, e) {\n      // Fire with initial uid.\n      t.enqueueRetryable(function () {\n        return e(d.FIRST_PARTY);\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }]);\n  return K;\n}();\nvar Y = /*#__PURE__*/_createClass(function Y(t) {\n  _classCallCheck(this, Y);\n  this.value = t, this.type = \"AppCheck\", this.headers = new Map(), t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n});\n/** AppCheck token provider for the Lite SDK. */\nvar H = /*#__PURE__*/function () {\n  function H(t) {\n    var _this6 = this;\n    _classCallCheck(this, H);\n    this.l = t, this.appCheck = null, t.onInit(function (t) {\n      _this6.appCheck = t;\n    });\n  }\n  _createClass(H, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return this.appCheck ? this.appCheck.getToken().then(function (t) {\n        return t ? (E(\"string\" == typeof t.token), new Y(t.token)) : null;\n      }) : Promise.resolve(null);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, e) {}\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }]);\n  return H;\n}();\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Z = /*#__PURE__*/_createClass(\n/**\n * Constructs a DatabaseInfo using the provided host, databaseId and\n * persistenceKey.\n *\n * @param databaseId - The database to use.\n * @param appId - The Firebase App Id.\n * @param persistenceKey - A unique identifier for this Firestore's local\n * storage (used in conjunction with the databaseId).\n * @param host - The Firestore backend host to connect to.\n * @param ssl - Whether to use SSL when connecting.\n * @param forceLongPolling - Whether to use the forceLongPolling option\n * when using WebChannel as the network transport.\n * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n * option when using WebChannel as the network transport.\n * @param useFetchStreams Whether to use the Fetch API instead of\n * XMLHTTPRequest\n */\nfunction Z(t, e, n, r, s, i, o, u) {\n  _classCallCheck(this, Z);\n  this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n});\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nvar J = /*#__PURE__*/function () {\n  function J(t, e) {\n    _classCallCheck(this, J);\n    this.projectId = t, this.database = e || \"(default)\";\n  }\n  _createClass(J, [{\n    key: \"isDefaultDatabase\",\n    get: function get() {\n      return \"(default)\" === this.database;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof J && t.projectId === this.projectId && t.database === this.database;\n    }\n  }], [{\n    key: \"empty\",\n    value: function empty() {\n      return new J(\"\", \"\");\n    }\n  }]);\n  return J;\n}();\n/**\n * Path represents an ordered sequence of string segments.\n */\nvar X = /*#__PURE__*/function () {\n  function X(t, e, n) {\n    _classCallCheck(this, X);\n    void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), this.segments = t, this.offset = e, this.len = n;\n  }\n  _createClass(X, [{\n    key: \"length\",\n    get: function get() {\n      return this.len;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return 0 === X.comparator(this, t);\n    }\n  }, {\n    key: \"child\",\n    value: function child(t) {\n      var e = this.segments.slice(this.offset, this.limit());\n      return t instanceof X ? t.forEach(function (t) {\n        e.push(t);\n      }) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */\n  }, {\n    key: \"limit\",\n    value: function limit() {\n      return this.offset + this.length;\n    }\n  }, {\n    key: \"popFirst\",\n    value: function popFirst(t) {\n      return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n  }, {\n    key: \"popLast\",\n    value: function popLast() {\n      return this.construct(this.segments, this.offset, this.length - 1);\n    }\n  }, {\n    key: \"firstSegment\",\n    value: function firstSegment() {\n      return this.segments[this.offset];\n    }\n  }, {\n    key: \"lastSegment\",\n    value: function lastSegment() {\n      return this.get(this.length - 1);\n    }\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      return this.segments[this.offset + t];\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return 0 === this.length;\n    }\n  }, {\n    key: \"isPrefixOf\",\n    value: function isPrefixOf(t) {\n      if (t.length < this.length) return !1;\n      for (var e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n      return !0;\n    }\n  }, {\n    key: \"isImmediateParentOf\",\n    value: function isImmediateParentOf(t) {\n      if (this.length + 1 !== t.length) return !1;\n      for (var e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n      return !0;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(t) {\n      for (var e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return this.segments.slice(this.offset, this.limit());\n    }\n  }], [{\n    key: \"comparator\",\n    value: function comparator(t, e) {\n      var n = Math.min(t.length, e.length);\n      for (var r = 0; r < n; r++) {\n        var _n2 = t.get(r),\n          s = e.get(r);\n        if (_n2 < s) return -1;\n        if (_n2 > s) return 1;\n      }\n      return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n  }]);\n  return X;\n}();\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */\nvar tt = /*#__PURE__*/function (_X) {\n  _inherits(tt, _X);\n  var _super2 = _createSuper(tt);\n  function tt() {\n    _classCallCheck(this, tt);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(tt, [{\n    key: \"construct\",\n    value: function construct(t, e, n) {\n      return new tt(t, e, n);\n    }\n  }, {\n    key: \"canonicalString\",\n    value: function canonicalString() {\n      // NOTE: The client is ignorant of any path segments containing escape\n      // sequences (e.g. __id123__) and just passes them through raw (they exist\n      // for legacy reasons and should not be used frequently).\n      return this.toArray().join(\"/\");\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */\n  }], [{\n    key: \"fromString\",\n    value: function fromString() {\n      // NOTE: The client is ignorant of any path segments containing escape\n      // sequences (e.g. __id123__) and just passes them through raw (they exist\n      // for legacy reasons and should not be used frequently).\n      var e = [];\n      for (var _len4 = arguments.length, t = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        t[_key4] = arguments[_key4];\n      }\n      for (var _i = 0, _t2 = t; _i < _t2.length; _i++) {\n        var n = _t2[_i];\n        if (n.indexOf(\"//\") >= 0) throw new U(P, \"Invalid segment (\".concat(n, \"). Paths must not contain // in them.\"));\n        // Strip leading and traling slashed.\n        e.push.apply(e, _toConsumableArray(n.split(\"/\").filter(function (t) {\n          return t.length > 0;\n        })));\n      }\n      return new tt(e);\n    }\n  }, {\n    key: \"emptyPath\",\n    value: function emptyPath() {\n      return new tt([]);\n    }\n  }]);\n  return tt;\n}(X);\nvar et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */\nvar nt = /*#__PURE__*/function (_X2) {\n  _inherits(nt, _X2);\n  var _super3 = _createSuper(nt);\n  function nt() {\n    _classCallCheck(this, nt);\n    return _super3.apply(this, arguments);\n  }\n  _createClass(nt, [{\n    key: \"construct\",\n    value: function construct(t, e, n) {\n      return new nt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */\n  }, {\n    key: \"canonicalString\",\n    value: function canonicalString() {\n      return this.toArray().map(function (t) {\n        return t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t;\n      }).join(\".\");\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */\n  }, {\n    key: \"isKeyField\",\n    value: function isKeyField() {\n      return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */\n  }], [{\n    key: \"isValidIdentifier\",\n    value: function isValidIdentifier(t) {\n      return et.test(t);\n    }\n  }, {\n    key: \"keyField\",\n    value: function keyField() {\n      return new nt([\"__name__\"]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */\n  }, {\n    key: \"fromServerFormat\",\n    value: function fromServerFormat(t) {\n      var e = [];\n      var n = \"\",\n        r = 0;\n      var s = function s() {\n        if (0 === n.length) throw new U(P, \"Invalid field path (\".concat(t, \"). Paths must not be empty, begin with '.', end with '.', or contain '..'\"));\n        e.push(n), n = \"\";\n      };\n      var i = !1;\n      for (; r < t.length;) {\n        var _e2 = t[r];\n        if (\"\\\\\" === _e2) {\n          if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n          var _e3 = t[r + 1];\n          if (\"\\\\\" !== _e3 && \".\" !== _e3 && \"`\" !== _e3) throw new U(P, \"Path has invalid escape sequence: \" + t);\n          n += _e3, r += 2;\n        } else \"`\" === _e2 ? (i = !i, r++) : \".\" !== _e2 || i ? (n += _e2, r++) : (s(), r++);\n      }\n      if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n      return new nt(e);\n    }\n  }, {\n    key: \"emptyPath\",\n    value: function emptyPath() {\n      return new nt([]);\n    }\n  }]);\n  return nt;\n}(X);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */\nvar rt = /*#__PURE__*/function () {\n  function rt(t) {\n    _classCallCheck(this, rt);\n    this.path = t;\n  }\n  _createClass(rt, [{\n    key: \"collectionGroup\",\n    get: function get() {\n      return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */\n  }, {\n    key: \"hasCollectionId\",\n    value: function hasCollectionId(t) {\n      return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */\n  }, {\n    key: \"getCollectionGroup\",\n    value: function getCollectionGroup() {\n      return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */\n  }, {\n    key: \"getCollectionPath\",\n    value: function getCollectionPath() {\n      return this.path.popLast();\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return null !== t && 0 === tt.comparator(this.path, t.path);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.path.toString();\n    }\n  }], [{\n    key: \"fromPath\",\n    value: function fromPath(t) {\n      return new rt(tt.fromString(t));\n    }\n  }, {\n    key: \"fromName\",\n    value: function fromName(t) {\n      return new rt(tt.fromString(t).popFirst(5));\n    }\n  }, {\n    key: \"empty\",\n    value: function empty() {\n      return new rt(tt.emptyPath());\n    }\n  }, {\n    key: \"comparator\",\n    value: function comparator(t, e) {\n      return tt.comparator(t.path, e.path);\n    }\n  }, {\n    key: \"isDocumentKey\",\n    value: function isDocumentKey(t) {\n      return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */\n  }, {\n    key: \"fromSegments\",\n    value: function fromSegments(t) {\n      return new rt(new tt(t.slice()));\n    }\n  }]);\n  return rt;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction st(t, e, n) {\n  if (!n) throw new U(P, \"Function \".concat(t, \"() cannot be called with an empty \").concat(e, \".\"));\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n  if (!rt.isDocumentKey(t)) throw new U(P, \"Invalid document reference. Document references must have an even number of segments, but \".concat(t, \" has \").concat(t.length, \".\"));\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */\nfunction ot(t) {\n  if (rt.isDocumentKey(t)) throw new U(P, \"Invalid collection reference. Collection references must have an odd number of segments, but \".concat(t, \" has \").concat(t.length, \".\"));\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n  if (void 0 === t) return \"undefined\";\n  if (null === t) return \"null\";\n  if (\"string\" == typeof t) return t.length > 20 && (t = \"\".concat(t.substring(0, 20), \"...\")), JSON.stringify(t);\n  if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n  if (\"object\" == typeof t) {\n    if (t instanceof Array) return \"an array\";\n    {\n      var e = /** try to get the constructor name for an object. */\n      function (t) {\n        if (t.constructor) return t.constructor.name;\n        return null;\n      }\n      /**\n      * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n      * underlying instance. Throws if  `obj` is not an instance of `T`.\n      *\n      * This cast is used in the Lite and Full SDK to verify instance types for\n      * arguments passed to the public API.\n      * @internal\n      */(t);\n      return e ? \"a custom \".concat(e, \" object\") : \"an object\";\n    }\n  }\n  return \"function\" == typeof t ? \"a function\" : b();\n}\nfunction ct(t,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  if (\"_delegate\" in t && (\n  // Unwrap Compat types\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  t = t._delegate), !(t instanceof e)) {\n    if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n    {\n      var n = ut(t);\n      throw new U(P, \"Expected type '\".concat(e.name, \"', but it was: \").concat(n));\n    }\n  }\n  return t;\n}\nfunction at(t, e) {\n  if (e <= 0) throw new U(P, \"Function \".concat(t, \"() requires a positive number, but it was: \").concat(e, \".\"));\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The value returned from the most recent invocation of\n * `generateUniqueDebugId()`, or null if it has never been invoked.\n */\nvar ht = null;\n\n/**\n * Generates and returns an initial value for `lastUniqueDebugId`.\n *\n * The returned value is randomly selected from a range of integers that are\n * represented as 8 hexadecimal digits. This means that (within reason) any\n * numbers generated by incrementing the returned number by 1 will also be\n * represented by 8 hexadecimal digits. This leads to all \"IDs\" having the same\n * length when converted to a hexadecimal string, making reading logs containing\n * these IDs easier to follow. And since the return value is randomly selected\n * it will help to differentiate between logs from different executions.\n */\n/**\n * Generates and returns a unique ID as a hexadecimal string.\n *\n * The returned ID is intended to be used in debug logging messages to help\n * correlate log messages that may be spatially separated in the logs, but\n * logically related. For example, a network connection could include the same\n * \"debug ID\" string in all of its log messages to help trace a specific\n * connection over time.\n *\n * @return the 10-character generated ID (e.g. \"0xa1b2c3d4\").\n */\nfunction lt() {\n  return null === ht ? ht = 268435456 + Math.round(2147483648 * Math.random()) : ht++, \"0x\" + ht.toString(16);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */\nfunction ft(t) {\n  return null == t;\n}\n\n/** Returns whether the value represents -0. */\nfunction dt(t) {\n  // Detect if the value is -0.0. Based on polyfill from\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n  return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar wt = {\n  BatchGetDocuments: \"batchGet\",\n  Commit: \"commit\",\n  RunQuery: \"runQuery\",\n  RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar mt, pt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction yt(t) {\n  if (void 0 === t) return g(\"RPC_ERROR\", \"HTTP error has no status\"), _R;\n  // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n  // status codes but the mapping is not bijective. In each case of ambiguity\n  // this function chooses a primary error.\n\n  // [1]\n  // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n  switch (t) {\n    case 200:\n      // OK\n      return I;\n    case 400:\n      // Bad Request\n      return S;\n\n    // Other possibilities based on the forward mapping\n    // return Code.INVALID_ARGUMENT;\n    // return Code.OUT_OF_RANGE;\n    case 401:\n      // Unauthorized\n      return F;\n    case 403:\n      // Forbidden\n      return N;\n    case 404:\n      // Not Found\n      return $;\n    case 409:\n      // Conflict\n      return q;\n\n    // Other possibilities:\n    // return Code.ALREADY_EXISTS;\n    case 416:\n      // Range Not Satisfiable\n      return O;\n    case 429:\n      // Too Many Requests\n      return x;\n    case 499:\n      // Client Closed Request\n      return T;\n    case 500:\n      // Internal Server Error\n      return _R;\n\n    // Other possibilities:\n    // return Code.INTERNAL;\n    // return Code.DATA_LOSS;\n    case 501:\n      // Unimplemented\n      return k;\n    case 503:\n      // Service Unavailable\n      return M;\n    case 504:\n      // Gateway Timeout\n      return V;\n    default:\n      return t >= 200 && t < 300 ? I : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : _R;\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */\n(pt = mt || (mt = {}))[pt.OK = 0] = \"OK\", pt[pt.CANCELLED = 1] = \"CANCELLED\", pt[pt.UNKNOWN = 2] = \"UNKNOWN\", pt[pt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", pt[pt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", pt[pt.NOT_FOUND = 5] = \"NOT_FOUND\", pt[pt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", pt[pt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", pt[pt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", pt[pt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", pt[pt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", pt[pt.ABORTED = 10] = \"ABORTED\", pt[pt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", pt[pt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", pt[pt.INTERNAL = 13] = \"INTERNAL\", pt[pt.UNAVAILABLE = 14] = \"UNAVAILABLE\", pt[pt.DATA_LOSS = 15] = \"DATA_LOSS\";\nvar gt = /*#__PURE__*/function (_ref) {\n  _inherits(gt, _ref);\n  var _super4 = _createSuper(gt);\n  /**\n   * @param databaseInfo - The connection info.\n   * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n   */\n  function gt(t, e) {\n    var _this7;\n    _classCallCheck(this, gt);\n    _this7 = _super4.call(this, t), _this7.P = e;\n    return _this7;\n  }\n  _createClass(gt, [{\n    key: \"V\",\n    value: function V(t, e) {\n      throw new Error(\"Not supported by FetchConnection\");\n    }\n  }, {\n    key: \"T\",\n    value: function () {\n      var _T = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(t, e, n, r) {\n        var s, i, o, _e4, _t3, _e5;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              i = JSON.stringify(r);\n              _context.prev = 1;\n              _context.next = 4;\n              return this.P(e, {\n                method: \"POST\",\n                headers: n,\n                body: i\n              });\n            case 4:\n              o = _context.sent;\n              _context.next = 11;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              _e4 = _context.t0;\n              throw new U(yt(_e4.status), \"Request failed with error: \" + _e4.statusText);\n            case 11:\n              if (o.ok) {\n                _context.next = 18;\n                break;\n              }\n              _context.next = 14;\n              return o.json();\n            case 14:\n              _t3 = _context.sent;\n              Array.isArray(_t3) && (_t3 = _t3[0]);\n              _e5 = null === (s = null == _t3 ? void 0 : _t3.error) || void 0 === s ? void 0 : s.message;\n              throw new U(yt(o.status), \"Request failed with error: \".concat(null != _e5 ? _e5 : o.statusText));\n            case 18:\n              return _context.abrupt(\"return\", o.json());\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[1, 7]]);\n      }));\n      function T(_x, _x2, _x3, _x4) {\n        return _T.apply(this, arguments);\n      }\n      return T;\n    }()\n  }]);\n  return gt;\n}(\n/*#__PURE__*/\n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nfunction () {\n  function _class(t) {\n    _classCallCheck(this, _class);\n    this.databaseInfo = t, this.databaseId = t.databaseId;\n    var e = t.ssl ? \"https\" : \"http\";\n    this.m = e + \"://\" + t.host, this.p = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n  }\n  _createClass(_class, [{\n    key: \"g\",\n    get: function get() {\n      // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n      // where to run the query, and expect the `request` to NOT specify the \"path\".\n      return !1;\n    }\n  }, {\n    key: \"v\",\n    value: function v(t, e, n, r, s) {\n      var i = lt(),\n        o = this.A(t, e);\n      y(\"RestConnection\", \"Sending RPC '\".concat(t, \"' \").concat(i, \":\"), o, n);\n      var u = {};\n      return this.I(u, r, s), this.T(t, o, u, n).then(function (e) {\n        return y(\"RestConnection\", \"Received RPC '\".concat(t, \"' \").concat(i, \": \"), e), e;\n      }, function (e) {\n        throw _(\"RestConnection\", \"RPC '\".concat(t, \"' \").concat(i, \" failed with error: \"), e, \"url: \", o, \"request:\", n), e;\n      });\n    }\n  }, {\n    key: \"R\",\n    value: function R(t, e, n, r, s, i) {\n      // The REST API automatically aggregates all of the streamed results, so we\n      // can just use the normal invoke() method.\n      return this.v(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */\n  }, {\n    key: \"I\",\n    value: function I(t, e, n) {\n      t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w,\n      // Content-Type: text/plain will avoid preflight requests which might\n      // mess with CORS and redirects by proxies. If we add custom headers\n      // we will need to change this code to potentially use the $httpOverwrite\n      // parameter supported by ESF to avoid triggering preflight requests.\n      t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), e && e.headers.forEach(function (e, n) {\n        return t[n] = e;\n      }), n && n.headers.forEach(function (e, n) {\n        return t[n] = e;\n      });\n    }\n  }, {\n    key: \"A\",\n    value: function A(t, e) {\n      var n = wt[t];\n      return \"\".concat(this.m, \"/v1/\").concat(e, \":\").concat(n);\n    }\n  }]);\n  return _class;\n}());\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _t = /^[_a-zA-Z][_a-zA-Z0-9]*(?:\\.[_a-zA-Z][_a-zA-Z0-9]*)*$/;\n\n/**\n * An alias for aggregation results.\n * @internal\n */\nvar vt = /*#__PURE__*/function () {\n  /**\n   * @internal\n   * @param alias Un-escaped alias representation\n   */\n  function vt(t) {\n    _classCallCheck(this, vt);\n    this.alias = t;\n  }\n  /**\n   * Returns true if the string could be used as an alias.\n   */\n  _createClass(vt, [{\n    key: \"canonicalString\",\n    value:\n    /**\n     * Return an escaped and quoted string representation of the alias.\n     */\n    function canonicalString() {\n      var t = this.alias.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\");\n      return vt.$(t) || (t = \"`\" + t + \"`\"), t;\n    }\n  }], [{\n    key: \"$\",\n    value: function $(t) {\n      return _t.test(t);\n    }\n  }]);\n  return vt;\n}();\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Concrete implementation of the Aggregate type.\n */\nvar bt = /*#__PURE__*/_createClass(function bt(t, e, n) {\n  _classCallCheck(this, bt);\n  this.alias = t, this.D = e, this.fieldPath = n;\n});\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction Et(t) {\n  // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n  var e =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto),\n    n = new Uint8Array(t);\n  if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n);else\n    // Falls back to Math.random\n    for (var _e6 = 0; _e6 < t; _e6++) n[_e6] = Math.floor(256 * Math.random());\n  return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar At = /*#__PURE__*/function () {\n  function At() {\n    _classCallCheck(this, At);\n  }\n  _createClass(At, null, [{\n    key: \"N\",\n    value: function N() {\n      // Alphanumeric characters\n      var t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",\n        e = Math.floor(256 / t.length) * t.length;\n      // The largest byte value that is a multiple of `char.length`.\n      var n = \"\";\n      for (; n.length < 20;) {\n        var r = Et(40);\n        for (var s = 0; s < r.length; ++s)\n        // Only accept values that are [0, maxMultiple), this ensures they can\n        // be evenly mapped to indices of `chars` via a modulo operation.\n        n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n      }\n      return n;\n    }\n  }]);\n  return At;\n}();\nfunction It(t, e) {\n  return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */\nfunction Tt(t, e, n) {\n  return t.length === e.length && t.every(function (t, r) {\n    return n(t, e[r]);\n  });\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction Rt(t) {\n  var e = 0;\n  for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n  return e;\n}\nfunction Pt(t, e) {\n  for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An error encountered while decoding base64 string.\n */\nvar Vt = /*#__PURE__*/function (_Error) {\n  _inherits(Vt, _Error);\n  var _super5 = _createSuper(Vt);\n  function Vt() {\n    var _this8;\n    _classCallCheck(this, Vt);\n    _this8 = _super5.apply(this, arguments), _this8.name = \"Base64DecodeError\";\n    return _this8;\n  }\n  return _createClass(Vt);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nvar $t = /*#__PURE__*/function (_Symbol$iterator) {\n  function $t(t) {\n    _classCallCheck(this, $t);\n    this.binaryString = t;\n  }\n  _createClass($t, [{\n    key: _Symbol$iterator,\n    value: function value() {\n      var _this9 = this;\n      var t = 0;\n      return {\n        next: function next() {\n          return t < _this9.binaryString.length ? {\n            value: _this9.binaryString.charCodeAt(t++),\n            done: !1\n          } : {\n            value: void 0,\n            done: !0\n          };\n        }\n      };\n    }\n  }, {\n    key: \"toBase64\",\n    value: function toBase64() {\n      return t = this.binaryString, btoa(t);\n      var t;\n    }\n  }, {\n    key: \"toUint8Array\",\n    value: function toUint8Array() {\n      return function (t) {\n        var e = new Uint8Array(t.length);\n        for (var n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n        return e;\n      }\n      /**\n      * @license\n      * Copyright 2020 Google LLC\n      *\n      * Licensed under the Apache License, Version 2.0 (the \"License\");\n      * you may not use this file except in compliance with the License.\n      * You may obtain a copy of the License at\n      *\n      *   http://www.apache.org/licenses/LICENSE-2.0\n      *\n      * Unless required by applicable law or agreed to in writing, software\n      * distributed under the License is distributed on an \"AS IS\" BASIS,\n      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      * See the License for the specific language governing permissions and\n      * limitations under the License.\n      */\n      // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n      (this.binaryString);\n    }\n  }, {\n    key: \"approximateByteSize\",\n    value: function approximateByteSize() {\n      return 2 * this.binaryString.length;\n    }\n  }, {\n    key: \"compareTo\",\n    value: function compareTo(t) {\n      return It(this.binaryString, t.binaryString);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.binaryString === t.binaryString;\n    }\n  }], [{\n    key: \"fromBase64String\",\n    value: function fromBase64String(t) {\n      var e = function (t) {\n        try {\n          return atob(t);\n        } catch (t) {\n          // Check that `DOMException` is defined before using it to avoid\n          // \"ReferenceError: Property 'DOMException' doesn't exist\" in react-native.\n          // (https://github.com/firebase/firebase-js-sdk/issues/7115)\n          throw \"undefined\" != typeof DOMException && t instanceof DOMException ? new Vt(\"Invalid base64 string: \" + t) : t;\n        }\n      }\n      /** Converts a binary string to a Base64 encoded string. */(t);\n      return new $t(e);\n    }\n  }, {\n    key: \"fromUint8Array\",\n    value: function fromUint8Array(t) {\n      // TODO(indexing); Remove the copy of the byte string here as this method\n      // is frequently called during indexing.\n      var e =\n      /**\n      * Helper function to convert an Uint8array to a binary string.\n      */\n      function (t) {\n        var e = \"\";\n        for (var n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n        return e;\n      }\n      /**\n      * Helper function to convert a binary string to an Uint8Array.\n      */(t);\n      return new $t(e);\n    }\n  }]);\n  return $t;\n}(Symbol.iterator);\n$t.EMPTY_BYTE_STRING = new $t(\"\");\nvar Dt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */\nfunction Nt(t) {\n  // The json interface (for the browser) will return an iso timestamp string,\n  // while the proto js library (for node) will return a\n  // google.protobuf.Timestamp instance.\n  if (E(!!t), \"string\" == typeof t) {\n    // The date string can have higher precision (nanos) than the Date class\n    // (millis), so we do some custom parsing here.\n    // Parse the nanos right out of the string.\n    var e = 0;\n    var n = Dt.exec(t);\n    if (E(!!n), n[1]) {\n      // Pad the fraction out to 9 digits (nanos).\n      var _t4 = n[1];\n      _t4 = (_t4 + \"000000000\").substr(0, 9), e = Number(_t4);\n    }\n    // Parse the date to get the seconds.\n    var r = new Date(t);\n    return {\n      seconds: Math.floor(r.getTime() / 1e3),\n      nanos: e\n    };\n  }\n  return {\n    seconds: Ft(t.seconds),\n    nanos: Ft(t.nanos)\n  };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */\nfunction Ft(t) {\n  // TODO(bjornick): Handle int64 greater than 53 bits.\n  return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */\nfunction xt(t) {\n  return \"string\" == typeof t ? $t.fromBase64String(t) : $t.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nvar St = /*#__PURE__*/function () {\n  /**\n   * Creates a new timestamp.\n   *\n   * @param seconds - The number of seconds of UTC time since Unix epoch\n   *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n   *     9999-12-31T23:59:59Z inclusive.\n   * @param nanoseconds - The non-negative fractions of a second at nanosecond\n   *     resolution. Negative second values with fractions must still have\n   *     non-negative nanoseconds values that count forward in time. Must be\n   *     from 0 to 999,999,999 inclusive.\n   */\n  function St(\n  /**\n   * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n   */\n  t,\n  /**\n   * The fractions of a second at nanosecond resolution.*\n   */\n  e) {\n    _classCallCheck(this, St);\n    if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n    if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n    if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    // This will break in the year 10,000.\n    if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n  }\n  /**\n   * Creates a new timestamp with the current date, with millisecond precision.\n   *\n   * @returns a new timestamp representing the current date.\n   */\n  _createClass(St, [{\n    key: \"toDate\",\n    value:\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */\n    function toDate() {\n      return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */\n  }, {\n    key: \"toMillis\",\n    value: function toMillis() {\n      return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n  }, {\n    key: \"_compareTo\",\n    value: function _compareTo(t) {\n      return this.seconds === t.seconds ? It(this.nanoseconds, t.nanoseconds) : It(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        seconds: this.seconds,\n        nanoseconds: this.nanoseconds\n      };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      // This method returns a string of the form <seconds>.<nanoseconds> where\n      // <seconds> is translated to have a non-negative value and both <seconds>\n      // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n      // Strings with this format then have a lexiographical ordering that matches\n      // the expected ordering. The <seconds> translation is done to avoid having\n      // a leading negative sign (i.e. a leading '-' character) in its string\n      // representation, which would affect its lexiographical ordering.\n      var t = this.seconds - -62135596800;\n      // Note: Up to 12 decimal digits are required to represent all valid\n      // 'seconds' values.\n      return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n  }], [{\n    key: \"now\",\n    value: function now() {\n      return St.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */\n  }, {\n    key: \"fromDate\",\n    value: function fromDate(t) {\n      return St.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */\n  }, {\n    key: \"fromMillis\",\n    value: function fromMillis(t) {\n      var e = Math.floor(t / 1e3),\n        n = Math.floor(1e6 * (t - 1e3 * e));\n      return new St(e, n);\n    }\n  }]);\n  return St;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */\nfunction qt(t) {\n  var e, n;\n  return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */\nfunction Ot(t) {\n  var e = t.mapValue.fields.__previous_value__;\n  return qt(e) ? Ot(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */\nfunction kt(t) {\n  var e = Nt(t.mapValue.fields.__local_write_time__.timestampValue);\n  return new St(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Ct = {\n  fields: {\n    __type__: {\n      stringValue: \"__max__\"\n    }\n  }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction Mt(t) {\n  return \"nullValue\" in t ? 0 /* TypeOrder.NullValue */ : \"booleanValue\" in t ? 1 /* TypeOrder.BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* TypeOrder.NumberValue */ : \"timestampValue\" in t ? 3 /* TypeOrder.TimestampValue */ : \"stringValue\" in t ? 5 /* TypeOrder.StringValue */ : \"bytesValue\" in t ? 6 /* TypeOrder.BlobValue */ : \"referenceValue\" in t ? 7 /* TypeOrder.RefValue */ : \"geoPointValue\" in t ? 8 /* TypeOrder.GeoPointValue */ : \"arrayValue\" in t ? 9 /* TypeOrder.ArrayValue */ : \"mapValue\" in t ? qt(t) ? 4 /* TypeOrder.ServerTimestampValue */ : /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n  function (t) {\n    return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n  }\n  /**\n  * @license\n  * Copyright 2022 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  /**\n  * Represents a bound of a query.\n  *\n  * The bound is specified with the given components representing a position and\n  * whether it's just before or just after the position (relative to whatever the\n  * query order is).\n  *\n  * The position represents a logical index position for a query. It's a prefix\n  * of values for the (potentially implicit) order by clauses of a query.\n  *\n  * Bound provides a function to determine whether a document comes before or\n  * after a bound. This is influenced by whether the position is just before or\n  * just after the provided values.\n  */(t) ? 9007199254740991 /* TypeOrder.MaxValue */ : 10 /* TypeOrder.ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */\nfunction Lt(t, e) {\n  if (t === e) return !0;\n  var n = Mt(t);\n  if (n !== Mt(e)) return !1;\n  switch (n) {\n    case 0 /* TypeOrder.NullValue */:\n    case 9007199254740991 /* TypeOrder.MaxValue */:\n      return !0;\n    case 1 /* TypeOrder.BooleanValue */:\n      return t.booleanValue === e.booleanValue;\n    case 4 /* TypeOrder.ServerTimestampValue */:\n      return kt(t).isEqual(kt(e));\n    case 3 /* TypeOrder.TimestampValue */:\n      return function (t, e) {\n        if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length)\n          // Use string equality for ISO 8601 timestamps\n          return t.timestampValue === e.timestampValue;\n        var n = Nt(t.timestampValue),\n          r = Nt(e.timestampValue);\n        return n.seconds === r.seconds && n.nanos === r.nanos;\n      }(t, e);\n    case 5 /* TypeOrder.StringValue */:\n      return t.stringValue === e.stringValue;\n    case 6 /* TypeOrder.BlobValue */:\n      return function (t, e) {\n        return xt(t.bytesValue).isEqual(xt(e.bytesValue));\n      }(t, e);\n    case 7 /* TypeOrder.RefValue */:\n      return t.referenceValue === e.referenceValue;\n    case 8 /* TypeOrder.GeoPointValue */:\n      return function (t, e) {\n        return Ft(t.geoPointValue.latitude) === Ft(e.geoPointValue.latitude) && Ft(t.geoPointValue.longitude) === Ft(e.geoPointValue.longitude);\n      }(t, e);\n    case 2 /* TypeOrder.NumberValue */:\n      return function (t, e) {\n        if (\"integerValue\" in t && \"integerValue\" in e) return Ft(t.integerValue) === Ft(e.integerValue);\n        if (\"doubleValue\" in t && \"doubleValue\" in e) {\n          var _n3 = Ft(t.doubleValue),\n            r = Ft(e.doubleValue);\n          return _n3 === r ? dt(_n3) === dt(r) : isNaN(_n3) && isNaN(r);\n        }\n        return !1;\n      }(t, e);\n    case 9 /* TypeOrder.ArrayValue */:\n      return Tt(t.arrayValue.values || [], e.arrayValue.values || [], Lt);\n    case 10 /* TypeOrder.ObjectValue */:\n      return function (t, e) {\n        var n = t.mapValue.fields || {},\n          r = e.mapValue.fields || {};\n        if (Rt(n) !== Rt(r)) return !1;\n        for (var _t5 in n) if (n.hasOwnProperty(_t5) && (void 0 === r[_t5] || !Lt(n[_t5], r[_t5]))) return !1;\n        return !0;\n      }\n      /** Returns true if the ArrayValue contains the specified element. */(t, e);\n    default:\n      return b();\n  }\n}\nfunction Ut(t, e) {\n  return void 0 !== (t.values || []).find(function (t) {\n    return Lt(t, e);\n  });\n}\nfunction jt(t, e) {\n  if (t === e) return 0;\n  var n = Mt(t),\n    r = Mt(e);\n  if (n !== r) return It(n, r);\n  switch (n) {\n    case 0 /* TypeOrder.NullValue */:\n    case 9007199254740991 /* TypeOrder.MaxValue */:\n      return 0;\n    case 1 /* TypeOrder.BooleanValue */:\n      return It(t.booleanValue, e.booleanValue);\n    case 2 /* TypeOrder.NumberValue */:\n      return function (t, e) {\n        var n = Ft(t.integerValue || t.doubleValue),\n          r = Ft(e.integerValue || e.doubleValue);\n        return n < r ? -1 : n > r ? 1 : n === r ? 0 :\n        // one or both are NaN.\n        isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n      }(t, e);\n    case 3 /* TypeOrder.TimestampValue */:\n      return Bt(t.timestampValue, e.timestampValue);\n    case 4 /* TypeOrder.ServerTimestampValue */:\n      return Bt(kt(t), kt(e));\n    case 5 /* TypeOrder.StringValue */:\n      return It(t.stringValue, e.stringValue);\n    case 6 /* TypeOrder.BlobValue */:\n      return function (t, e) {\n        var n = xt(t),\n          r = xt(e);\n        return n.compareTo(r);\n      }(t.bytesValue, e.bytesValue);\n    case 7 /* TypeOrder.RefValue */:\n      return function (t, e) {\n        var n = t.split(\"/\"),\n          r = e.split(\"/\");\n        for (var _t6 = 0; _t6 < n.length && _t6 < r.length; _t6++) {\n          var _e7 = It(n[_t6], r[_t6]);\n          if (0 !== _e7) return _e7;\n        }\n        return It(n.length, r.length);\n      }(t.referenceValue, e.referenceValue);\n    case 8 /* TypeOrder.GeoPointValue */:\n      return function (t, e) {\n        var n = It(Ft(t.latitude), Ft(e.latitude));\n        if (0 !== n) return n;\n        return It(Ft(t.longitude), Ft(e.longitude));\n      }(t.geoPointValue, e.geoPointValue);\n    case 9 /* TypeOrder.ArrayValue */:\n      return function (t, e) {\n        var n = t.values || [],\n          r = e.values || [];\n        for (var _t7 = 0; _t7 < n.length && _t7 < r.length; ++_t7) {\n          var _e8 = jt(n[_t7], r[_t7]);\n          if (_e8) return _e8;\n        }\n        return It(n.length, r.length);\n      }(t.arrayValue, e.arrayValue);\n    case 10 /* TypeOrder.ObjectValue */:\n      return function (t, e) {\n        if (t === Ct && e === Ct) return 0;\n        if (t === Ct) return 1;\n        if (e === Ct) return -1;\n        var n = t.fields || {},\n          r = Object.keys(n),\n          s = e.fields || {},\n          i = Object.keys(s);\n        // Even though MapValues are likely sorted correctly based on their insertion\n        // order (e.g. when received from the backend), local modifications can bring\n        // elements out of order. We need to re-sort the elements to ensure that\n        // canonical IDs are independent of insertion order.\n        r.sort(), i.sort();\n        for (var _t8 = 0; _t8 < r.length && _t8 < i.length; ++_t8) {\n          var _e9 = It(r[_t8], i[_t8]);\n          if (0 !== _e9) return _e9;\n          var o = jt(n[r[_t8]], s[i[_t8]]);\n          if (0 !== o) return o;\n        }\n        return It(r.length, i.length);\n      }\n      /** Returns a reference value for the provided database and key. */(t.mapValue, e.mapValue);\n    default:\n      throw b();\n  }\n}\nfunction Bt(t, e) {\n  if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return It(t, e);\n  var n = Nt(t),\n    r = Nt(e),\n    s = It(n.seconds, r.seconds);\n  return 0 !== s ? s : It(n.nanos, r.nanos);\n}\nfunction zt(t, e) {\n  return {\n    referenceValue: \"projects/\".concat(t.projectId, \"/databases/\").concat(t.database, \"/documents/\").concat(e.path.canonicalString())\n  };\n}\n\n/** Returns true if `value` is an ArrayValue. */\nfunction Qt(t) {\n  return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */\nfunction Wt(t) {\n  return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */\nfunction Gt(t) {\n  return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */\nfunction Kt(t) {\n  return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */\nfunction Yt(t) {\n  if (t.geoPointValue) return {\n    geoPointValue: Object.assign({}, t.geoPointValue)\n  };\n  if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n    timestampValue: Object.assign({}, t.timestampValue)\n  };\n  if (t.mapValue) {\n    var e = {\n      mapValue: {\n        fields: {}\n      }\n    };\n    return Pt(t.mapValue.fields, function (t, n) {\n      return e.mapValue.fields[t] = Yt(n);\n    }), e;\n  }\n  if (t.arrayValue) {\n    var _e10 = {\n      arrayValue: {\n        values: []\n      }\n    };\n    for (var n = 0; n < (t.arrayValue.values || []).length; ++n) _e10.arrayValue.values[n] = Yt(t.arrayValue.values[n]);\n    return _e10;\n  }\n  return Object.assign({}, t);\n}\nvar Ht = /*#__PURE__*/_createClass(function Ht(t, e) {\n  _classCallCheck(this, Ht);\n  this.position = t, this.inclusive = e;\n});\nfunction Zt(t, e) {\n  if (null === t) return null === e;\n  if (null === e) return !1;\n  if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n  for (var n = 0; n < t.position.length; n++) {\n    if (!Lt(t.position[n], e.position[n])) return !1;\n  }\n  return !0;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Jt = /*#__PURE__*/_createClass(function Jt() {\n  _classCallCheck(this, Jt);\n});\nvar Xt = /*#__PURE__*/function (_Jt) {\n  _inherits(Xt, _Jt);\n  var _super6 = _createSuper(Xt);\n  function Xt(t, e, n) {\n    var _this10;\n    _classCallCheck(this, Xt);\n    _this10 = _super6.call(this), _this10.field = t, _this10.op = e, _this10.value = n;\n    return _this10;\n  }\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n  _createClass(Xt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = t.data.field(this.field);\n      // Types do not have to match in NOT_EQUAL filters.\n      return \"!=\" /* Operator.NOT_EQUAL */ === this.op ? null !== e && this.matchesComparison(jt(e, this.value)) : null !== e && Mt(this.value) === Mt(e) && this.matchesComparison(jt(e, this.value));\n      // Only compare types with matching backend order (such as double and int).\n    }\n  }, {\n    key: \"matchesComparison\",\n    value: function matchesComparison(t) {\n      switch (this.op) {\n        case \"<\" /* Operator.LESS_THAN */:\n          return t < 0;\n        case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */:\n          return t <= 0;\n        case \"==\" /* Operator.EQUAL */:\n          return 0 === t;\n        case \"!=\" /* Operator.NOT_EQUAL */:\n          return 0 !== t;\n        case \">\" /* Operator.GREATER_THAN */:\n          return t > 0;\n        case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */:\n          return t >= 0;\n        default:\n          return b();\n      }\n    }\n  }, {\n    key: \"isInequality\",\n    value: function isInequality() {\n      return [\"<\" /* Operator.LESS_THAN */, \"<=\" /* Operator.LESS_THAN_OR_EQUAL */, \">\" /* Operator.GREATER_THAN */, \">=\" /* Operator.GREATER_THAN_OR_EQUAL */, \"!=\" /* Operator.NOT_EQUAL */, \"not-in\" /* Operator.NOT_IN */].indexOf(this.op) >= 0;\n    }\n  }, {\n    key: \"getFlattenedFilters\",\n    value: function getFlattenedFilters() {\n      return [this];\n    }\n  }, {\n    key: \"getFilters\",\n    value: function getFilters() {\n      return [this];\n    }\n  }, {\n    key: \"getFirstInequalityField\",\n    value: function getFirstInequalityField() {\n      return this.isInequality() ? this.field : null;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(t, e, n) {\n      return t.isKeyField() ? \"in\" /* Operator.IN */ === e || \"not-in\" /* Operator.NOT_IN */ === e ? this.createKeyFieldInFilter(t, e, n) : new ne(t, e, n) : \"array-contains\" /* Operator.ARRAY_CONTAINS */ === e ? new oe(t, n) : \"in\" /* Operator.IN */ === e ? new ue(t, n) : \"not-in\" /* Operator.NOT_IN */ === e ? new ce(t, n) : \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === e ? new ae(t, n) : new Xt(t, e, n);\n    }\n  }, {\n    key: \"createKeyFieldInFilter\",\n    value: function createKeyFieldInFilter(t, e, n) {\n      return \"in\" /* Operator.IN */ === e ? new re(t, n) : new se(t, n);\n    }\n  }]);\n  return Xt;\n}(Jt);\nvar te = /*#__PURE__*/function (_Jt2) {\n  _inherits(te, _Jt2);\n  var _super7 = _createSuper(te);\n  function te(t, e) {\n    var _this11;\n    _classCallCheck(this, te);\n    _this11 = _super7.call(this), _this11.filters = t, _this11.op = e, _this11.F = null;\n    return _this11;\n  }\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n  _createClass(te, [{\n    key: \"matches\",\n    value: function matches(t) {\n      return \"and\" /* CompositeOperator.AND */ === this.op ? void 0 === this.filters.find(function (e) {\n        return !e.matches(t);\n      }) : void 0 !== this.filters.find(function (e) {\n        return e.matches(t);\n      });\n    }\n  }, {\n    key: \"getFlattenedFilters\",\n    value: function getFlattenedFilters() {\n      return null !== this.F || (this.F = this.filters.reduce(function (t, e) {\n        return t.concat(e.getFlattenedFilters());\n      }, [])), this.F;\n    }\n    // Returns a mutable copy of `this.filters`\n  }, {\n    key: \"getFilters\",\n    value: function getFilters() {\n      return Object.assign([], this.filters);\n    }\n  }, {\n    key: \"getFirstInequalityField\",\n    value: function getFirstInequalityField() {\n      var t = this.S(function (t) {\n        return t.isInequality();\n      });\n      return null !== t ? t.field : null;\n    }\n    // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n    // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n    // predicate.\n  }, {\n    key: \"S\",\n    value: function S(t) {\n      var _iterator = _createForOfIteratorHelper(this.getFlattenedFilters()),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var e = _step.value;\n          if (t(e)) return e;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return null;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(t, e) {\n      return new te(t, e);\n    }\n  }]);\n  return te;\n}(Jt);\nfunction ee(t, e) {\n  return t instanceof Xt ? function (t, e) {\n    return e instanceof Xt && t.op === e.op && t.field.isEqual(e.field) && Lt(t.value, e.value);\n  }(t, e) : t instanceof te ? function (t, e) {\n    if (e instanceof te && t.op === e.op && t.filters.length === e.filters.length) {\n      return t.filters.reduce(function (t, n, r) {\n        return t && ee(n, e.filters[r]);\n      }, !0);\n    }\n    return !1;\n  }\n  /** Filter that matches on key fields (i.e. '__name__'). */(t, e) : void b();\n}\nvar ne = /*#__PURE__*/function (_Xt) {\n  _inherits(ne, _Xt);\n  var _super8 = _createSuper(ne);\n  function ne(t, e, n) {\n    var _this12;\n    _classCallCheck(this, ne);\n    _this12 = _super8.call(this, t, e, n), _this12.key = rt.fromName(n.referenceValue);\n    return _this12;\n  }\n  _createClass(ne, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = rt.comparator(t.key, this.key);\n      return this.matchesComparison(e);\n    }\n  }]);\n  return ne;\n}(Xt);\n/** Filter that matches on key fields within an array. */\nvar re = /*#__PURE__*/function (_Xt2) {\n  _inherits(re, _Xt2);\n  var _super9 = _createSuper(re);\n  function re(t, e) {\n    var _this13;\n    _classCallCheck(this, re);\n    _this13 = _super9.call(this, t, \"in\" /* Operator.IN */, e), _this13.keys = ie(\"in\" /* Operator.IN */, e);\n    return _this13;\n  }\n  _createClass(re, [{\n    key: \"matches\",\n    value: function matches(t) {\n      return this.keys.some(function (e) {\n        return e.isEqual(t.key);\n      });\n    }\n  }]);\n  return re;\n}(Xt);\n/** Filter that matches on key fields not present within an array. */\nvar se = /*#__PURE__*/function (_Xt3) {\n  _inherits(se, _Xt3);\n  var _super10 = _createSuper(se);\n  function se(t, e) {\n    var _this14;\n    _classCallCheck(this, se);\n    _this14 = _super10.call(this, t, \"not-in\" /* Operator.NOT_IN */, e), _this14.keys = ie(\"not-in\" /* Operator.NOT_IN */, e);\n    return _this14;\n  }\n  _createClass(se, [{\n    key: \"matches\",\n    value: function matches(t) {\n      return !this.keys.some(function (e) {\n        return e.isEqual(t.key);\n      });\n    }\n  }]);\n  return se;\n}(Xt);\nfunction ie(t, e) {\n  var n;\n  return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map(function (t) {\n    return rt.fromName(t.referenceValue);\n  });\n}\n\n/** A Filter that implements the array-contains operator. */\nvar oe = /*#__PURE__*/function (_Xt4) {\n  _inherits(oe, _Xt4);\n  var _super11 = _createSuper(oe);\n  function oe(t, e) {\n    _classCallCheck(this, oe);\n    return _super11.call(this, t, \"array-contains\" /* Operator.ARRAY_CONTAINS */, e);\n  }\n  _createClass(oe, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = t.data.field(this.field);\n      return Qt(e) && Ut(e.arrayValue, this.value);\n    }\n  }]);\n  return oe;\n}(Xt);\n/** A Filter that implements the IN operator. */\nvar ue = /*#__PURE__*/function (_Xt5) {\n  _inherits(ue, _Xt5);\n  var _super12 = _createSuper(ue);\n  function ue(t, e) {\n    _classCallCheck(this, ue);\n    return _super12.call(this, t, \"in\" /* Operator.IN */, e);\n  }\n  _createClass(ue, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = t.data.field(this.field);\n      return null !== e && Ut(this.value.arrayValue, e);\n    }\n  }]);\n  return ue;\n}(Xt);\n/** A Filter that implements the not-in operator. */\nvar ce = /*#__PURE__*/function (_Xt6) {\n  _inherits(ce, _Xt6);\n  var _super13 = _createSuper(ce);\n  function ce(t, e) {\n    _classCallCheck(this, ce);\n    return _super13.call(this, t, \"not-in\" /* Operator.NOT_IN */, e);\n  }\n  _createClass(ce, [{\n    key: \"matches\",\n    value: function matches(t) {\n      if (Ut(this.value.arrayValue, {\n        nullValue: \"NULL_VALUE\"\n      })) return !1;\n      var e = t.data.field(this.field);\n      return null !== e && !Ut(this.value.arrayValue, e);\n    }\n  }]);\n  return ce;\n}(Xt);\n/** A Filter that implements the array-contains-any operator. */\nvar ae = /*#__PURE__*/function (_Xt7) {\n  _inherits(ae, _Xt7);\n  var _super14 = _createSuper(ae);\n  function ae(t, e) {\n    _classCallCheck(this, ae);\n    return _super14.call(this, t, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */, e);\n  }\n  _createClass(ae, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var _this15 = this;\n      var e = t.data.field(this.field);\n      return !(!Qt(e) || !e.arrayValue.values) && e.arrayValue.values.some(function (t) {\n        return Ut(_this15.value.arrayValue, t);\n      });\n    }\n  }]);\n  return ae;\n}(Xt);\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */\nvar he = /*#__PURE__*/_createClass(function he(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n  _classCallCheck(this, he);\n  this.field = t, this.dir = e;\n});\nfunction le(t, e) {\n  return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */\nvar fe = /*#__PURE__*/function () {\n  function fe(t) {\n    _classCallCheck(this, fe);\n    this.timestamp = t;\n  }\n  _createClass(fe, [{\n    key: \"compareTo\",\n    value: function compareTo(t) {\n      return this.timestamp._compareTo(t.timestamp);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */\n  }, {\n    key: \"toMicroseconds\",\n    value: function toMicroseconds() {\n      // Convert to microseconds.\n      return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n  }, {\n    key: \"toTimestamp\",\n    value: function toTimestamp() {\n      return this.timestamp;\n    }\n  }], [{\n    key: \"fromTimestamp\",\n    value: function fromTimestamp(t) {\n      return new fe(t);\n    }\n  }, {\n    key: \"min\",\n    value: function min() {\n      return new fe(new St(0, 0));\n    }\n  }, {\n    key: \"max\",\n    value: function max() {\n      return new fe(new St(253402300799, 999999999));\n    }\n  }]);\n  return fe;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nvar de = /*#__PURE__*/function () {\n  function de(t, e) {\n    _classCallCheck(this, de);\n    this.comparator = t, this.root = e || me.EMPTY;\n  }\n  // Returns a copy of the map, with the specified key/value added or replaced.\n  _createClass(de, [{\n    key: \"insert\",\n    value: function insert(t, e) {\n      return new de(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, me.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n  }, {\n    key: \"remove\",\n    value: function remove(t) {\n      return new de(this.comparator, this.root.remove(t, this.comparator).copy(null, null, me.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      var e = this.root;\n      for (; !e.isEmpty();) {\n        var n = this.comparator(t, e.key);\n        if (0 === n) return e.value;\n        n < 0 ? e = e.left : n > 0 && (e = e.right);\n      }\n      return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n  }, {\n    key: \"indexOf\",\n    value: function indexOf(t) {\n      // Number of nodes that were pruned when descending right\n      var e = 0,\n        n = this.root;\n      for (; !n.isEmpty();) {\n        var r = this.comparator(t, n.key);\n        if (0 === r) return e + n.left.size;\n        r < 0 ? n = n.left : (\n        // Count all nodes left of the node plus the node itself\n        e += n.left.size + 1, n = n.right);\n      }\n      // Node not found\n      return -1;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.root.size;\n    }\n    // Returns the minimum key in the map.\n  }, {\n    key: \"minKey\",\n    value: function minKey() {\n      return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n  }, {\n    key: \"maxKey\",\n    value: function maxKey() {\n      return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n  }, {\n    key: \"inorderTraversal\",\n    value: function inorderTraversal(t) {\n      return this.root.inorderTraversal(t);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(t) {\n      this.inorderTraversal(function (e, n) {\n        return t(e, n), !1;\n      });\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var t = [];\n      return this.inorderTraversal(function (e, n) {\n        return t.push(\"\".concat(e, \":\").concat(n)), !1;\n      }), \"{\".concat(t.join(\", \"), \"}\");\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n  }, {\n    key: \"reverseTraversal\",\n    value: function reverseTraversal(t) {\n      return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n  }, {\n    key: \"getIterator\",\n    value: function getIterator() {\n      return new we(this.root, null, this.comparator, !1);\n    }\n  }, {\n    key: \"getIteratorFrom\",\n    value: function getIteratorFrom(t) {\n      return new we(this.root, t, this.comparator, !1);\n    }\n  }, {\n    key: \"getReverseIterator\",\n    value: function getReverseIterator() {\n      return new we(this.root, null, this.comparator, !0);\n    }\n  }, {\n    key: \"getReverseIteratorFrom\",\n    value: function getReverseIteratorFrom(t) {\n      return new we(this.root, t, this.comparator, !0);\n    }\n  }]);\n  return de;\n}(); // end SortedMap\n// An iterator over an LLRBNode.\nvar we = /*#__PURE__*/function () {\n  function we(t, e, n, r) {\n    _classCallCheck(this, we);\n    this.isReverse = r, this.nodeStack = [];\n    var s = 1;\n    for (; !t.isEmpty();) if (s = e ? n(t.key, e) : 1,\n    // flip the comparison if we're going in reverse\n    e && r && (s *= -1), s < 0)\n      // This node is less than our start key. ignore it\n      t = this.isReverse ? t.left : t.right;else {\n      if (0 === s) {\n        // This node is exactly equal to our start key. Push it on the stack,\n        // but stop iterating;\n        this.nodeStack.push(t);\n        break;\n      }\n      // This node is greater than our start key, add it to the stack and move\n      // to the next one\n      this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n    }\n  }\n  _createClass(we, [{\n    key: \"getNext\",\n    value: function getNext() {\n      var t = this.nodeStack.pop();\n      var e = {\n        key: t.key,\n        value: t.value\n      };\n      if (this.isReverse) for (t = t.left; !t.isEmpty();) this.nodeStack.push(t), t = t.right;else for (t = t.right; !t.isEmpty();) this.nodeStack.push(t), t = t.left;\n      return e;\n    }\n  }, {\n    key: \"hasNext\",\n    value: function hasNext() {\n      return this.nodeStack.length > 0;\n    }\n  }, {\n    key: \"peek\",\n    value: function peek() {\n      if (0 === this.nodeStack.length) return null;\n      var t = this.nodeStack[this.nodeStack.length - 1];\n      return {\n        key: t.key,\n        value: t.value\n      };\n    }\n  }]);\n  return we;\n}(); // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nvar me = /*#__PURE__*/function () {\n  function me(t, e, n, r, s) {\n    _classCallCheck(this, me);\n    this.key = t, this.value = e, this.color = null != n ? n : me.RED, this.left = null != r ? r : me.EMPTY, this.right = null != s ? s : me.EMPTY, this.size = this.left.size + 1 + this.right.size;\n  }\n  // Returns a copy of the current node, optionally replacing pieces of it.\n  _createClass(me, [{\n    key: \"copy\",\n    value: function copy(t, e, n, r, s) {\n      return new me(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n  }, {\n    key: \"inorderTraversal\",\n    value: function inorderTraversal(t) {\n      return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n  }, {\n    key: \"reverseTraversal\",\n    value: function reverseTraversal(t) {\n      return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n  }, {\n    key: \"min\",\n    value: function min() {\n      return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n  }, {\n    key: \"minKey\",\n    value: function minKey() {\n      return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n  }, {\n    key: \"maxKey\",\n    value: function maxKey() {\n      return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n  }, {\n    key: \"insert\",\n    value: function insert(t, e, n) {\n      var r = this;\n      var s = n(t, r.key);\n      return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), r.fixUp();\n    }\n  }, {\n    key: \"removeMin\",\n    value: function removeMin() {\n      if (this.left.isEmpty()) return me.EMPTY;\n      var t = this;\n      return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n  }, {\n    key: \"remove\",\n    value: function remove(t, e) {\n      var n,\n        r = this;\n      if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), r = r.copy(null, null, null, r.left.remove(t, e), null);else {\n        if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), 0 === e(t, r.key)) {\n          if (r.right.isEmpty()) return me.EMPTY;\n          n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n        }\n        r = r.copy(null, null, null, null, r.right.remove(t, e));\n      }\n      return r.fixUp();\n    }\n  }, {\n    key: \"isRed\",\n    value: function isRed() {\n      return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n  }, {\n    key: \"fixUp\",\n    value: function fixUp() {\n      var t = this;\n      return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n  }, {\n    key: \"moveRedLeft\",\n    value: function moveRedLeft() {\n      var t = this.colorFlip();\n      return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n  }, {\n    key: \"moveRedRight\",\n    value: function moveRedRight() {\n      var t = this.colorFlip();\n      return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n  }, {\n    key: \"rotateLeft\",\n    value: function rotateLeft() {\n      var t = this.copy(null, null, me.RED, null, this.right.left);\n      return this.right.copy(null, null, this.color, t, null);\n    }\n  }, {\n    key: \"rotateRight\",\n    value: function rotateRight() {\n      var t = this.copy(null, null, me.RED, this.left.right, null);\n      return this.left.copy(null, null, this.color, null, t);\n    }\n  }, {\n    key: \"colorFlip\",\n    value: function colorFlip() {\n      var t = this.left.copy(null, null, !this.left.color, null, null),\n        e = this.right.copy(null, null, !this.right.color, null, null);\n      return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n  }, {\n    key: \"checkMaxDepth\",\n    value: function checkMaxDepth() {\n      var t = this.check();\n      return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n  }, {\n    key: \"check\",\n    value: function check() {\n      if (this.isRed() && this.left.isRed()) throw b();\n      if (this.right.isRed()) throw b();\n      var t = this.left.check();\n      if (t !== this.right.check()) throw b();\n      return t + (this.isRed() ? 0 : 1);\n    }\n  }]);\n  return me;\n}(); // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nme.EMPTY = null, me.RED = !0, me.BLACK = !1;\n\n// end LLRBEmptyNode\nme.EMPTY = new (\n/*#__PURE__*/\n// Represents an empty node (a leaf node in the Red-Black Tree).\nfunction () {\n  function _class2() {\n    _classCallCheck(this, _class2);\n    this.size = 0;\n  }\n  _createClass(_class2, [{\n    key: \"key\",\n    get: function get() {\n      throw b();\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      throw b();\n    }\n  }, {\n    key: \"color\",\n    get: function get() {\n      throw b();\n    }\n  }, {\n    key: \"left\",\n    get: function get() {\n      throw b();\n    }\n  }, {\n    key: \"right\",\n    get: function get() {\n      throw b();\n    }\n    // Returns a copy of the current node.\n  }, {\n    key: \"copy\",\n    value: function copy(t, e, n, r, s) {\n      return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n  }, {\n    key: \"insert\",\n    value: function insert(t, e, n) {\n      return new me(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n  }, {\n    key: \"remove\",\n    value: function remove(t, e) {\n      return this;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return !0;\n    }\n  }, {\n    key: \"inorderTraversal\",\n    value: function inorderTraversal(t) {\n      return !1;\n    }\n  }, {\n    key: \"reverseTraversal\",\n    value: function reverseTraversal(t) {\n      return !1;\n    }\n  }, {\n    key: \"minKey\",\n    value: function minKey() {\n      return null;\n    }\n  }, {\n    key: \"maxKey\",\n    value: function maxKey() {\n      return null;\n    }\n  }, {\n    key: \"isRed\",\n    value: function isRed() {\n      return !1;\n    }\n    // For testing.\n  }, {\n    key: \"checkMaxDepth\",\n    value: function checkMaxDepth() {\n      return !0;\n    }\n  }, {\n    key: \"check\",\n    value: function check() {\n      return 0;\n    }\n  }]);\n  return _class2;\n}())();\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nvar pe = /*#__PURE__*/function () {\n  function pe(t) {\n    _classCallCheck(this, pe);\n    this.comparator = t, this.data = new de(this.comparator);\n  }\n  _createClass(pe, [{\n    key: \"has\",\n    value: function has(t) {\n      return null !== this.data.get(t);\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.data.minKey();\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      return this.data.maxKey();\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.data.size;\n    }\n  }, {\n    key: \"indexOf\",\n    value: function indexOf(t) {\n      return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */\n  }, {\n    key: \"forEach\",\n    value: function forEach(t) {\n      this.data.inorderTraversal(function (e, n) {\n        return t(e), !1;\n      });\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */\n  }, {\n    key: \"forEachInRange\",\n    value: function forEachInRange(t, e) {\n      var n = this.data.getIteratorFrom(t[0]);\n      for (; n.hasNext();) {\n        var r = n.getNext();\n        if (this.comparator(r.key, t[1]) >= 0) return;\n        e(r.key);\n      }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */\n  }, {\n    key: \"forEachWhile\",\n    value: function forEachWhile(t, e) {\n      var n;\n      for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext();) {\n        if (!t(n.getNext().key)) return;\n      }\n    }\n    /** Finds the least element greater than or equal to `elem`. */\n  }, {\n    key: \"firstAfterOrEqual\",\n    value: function firstAfterOrEqual(t) {\n      var e = this.data.getIteratorFrom(t);\n      return e.hasNext() ? e.getNext().key : null;\n    }\n  }, {\n    key: \"getIterator\",\n    value: function getIterator() {\n      return new ye(this.data.getIterator());\n    }\n  }, {\n    key: \"getIteratorFrom\",\n    value: function getIteratorFrom(t) {\n      return new ye(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */\n  }, {\n    key: \"add\",\n    value: function add(t) {\n      return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.data.isEmpty();\n    }\n  }, {\n    key: \"unionWith\",\n    value: function unionWith(t) {\n      var e = this;\n      // Make sure `result` always refers to the larger one of the two sets.\n      return e.size < t.size && (e = t, t = this), t.forEach(function (t) {\n        e = e.add(t);\n      }), e;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      if (!(t instanceof pe)) return !1;\n      if (this.size !== t.size) return !1;\n      var e = this.data.getIterator(),\n        n = t.data.getIterator();\n      for (; e.hasNext();) {\n        var _t9 = e.getNext().key,\n          r = n.getNext().key;\n        if (0 !== this.comparator(_t9, r)) return !1;\n      }\n      return !0;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var t = [];\n      return this.forEach(function (e) {\n        t.push(e);\n      }), t;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var t = [];\n      return this.forEach(function (e) {\n        return t.push(e);\n      }), \"SortedSet(\" + t.toString() + \")\";\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(t) {\n      var e = new pe(this.comparator);\n      return e.data = t, e;\n    }\n  }]);\n  return pe;\n}();\nvar ye = /*#__PURE__*/function () {\n  function ye(t) {\n    _classCallCheck(this, ye);\n    this.iter = t;\n  }\n  _createClass(ye, [{\n    key: \"getNext\",\n    value: function getNext() {\n      return this.iter.getNext().key;\n    }\n  }, {\n    key: \"hasNext\",\n    value: function hasNext() {\n      return this.iter.hasNext();\n    }\n  }]);\n  return ye;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\nvar ge = /*#__PURE__*/function () {\n  function ge(t) {\n    _classCallCheck(this, ge);\n    this.fields = t,\n    // TODO(dimond): validation of FieldMask\n    // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n    t.sort(nt.comparator);\n  }\n  _createClass(ge, [{\n    key: \"unionWith\",\n    value:\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */\n    function unionWith(t) {\n      var e = new pe(nt.comparator);\n      var _iterator2 = _createForOfIteratorHelper(this.fields),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _t10 = _step2.value;\n          e = e.add(_t10);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      var _iterator3 = _createForOfIteratorHelper(t),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var n = _step3.value;\n          e = e.add(n);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return new ge(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */\n  }, {\n    key: \"covers\",\n    value: function covers(t) {\n      var _iterator4 = _createForOfIteratorHelper(this.fields),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var e = _step4.value;\n          if (e.isPrefixOf(t)) return !0;\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return !1;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return Tt(this.fields, t.fields, function (t, e) {\n        return t.isEqual(e);\n      });\n    }\n  }], [{\n    key: \"empty\",\n    value: function empty() {\n      return new ge([]);\n    }\n  }]);\n  return ge;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */\nvar _e = /*#__PURE__*/function () {\n  function _e(t) {\n    _classCallCheck(this, _e);\n    this.value = t;\n  }\n  _createClass(_e, [{\n    key: \"field\",\n    value:\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */\n    function field(t) {\n      if (t.isEmpty()) return this.value;\n      {\n        var e = this.value;\n        for (var n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], !Kt(e)) return null;\n        return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n      }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */\n  }, {\n    key: \"set\",\n    value: function set(t, e) {\n      this.getFieldsMap(t.popLast())[t.lastSegment()] = Yt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */\n  }, {\n    key: \"setAll\",\n    value: function setAll(t) {\n      var _this16 = this;\n      var e = nt.emptyPath(),\n        n = {},\n        r = [];\n      t.forEach(function (t, s) {\n        if (!e.isImmediateParentOf(s)) {\n          // Insert the accumulated changes at this parent location\n          var _t11 = _this16.getFieldsMap(e);\n          _this16.applyChanges(_t11, n, r), n = {}, r = [], e = s.popLast();\n        }\n        t ? n[s.lastSegment()] = Yt(t) : r.push(s.lastSegment());\n      });\n      var s = this.getFieldsMap(e);\n      this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      var e = this.field(t.popLast());\n      Kt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return Lt(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */\n  }, {\n    key: \"getFieldsMap\",\n    value: function getFieldsMap(t) {\n      var e = this.value;\n      e.mapValue.fields || (e.mapValue = {\n        fields: {}\n      });\n      for (var n = 0; n < t.length; ++n) {\n        var r = e.mapValue.fields[t.get(n)];\n        Kt(r) && r.mapValue.fields || (r = {\n          mapValue: {\n            fields: {}\n          }\n        }, e.mapValue.fields[t.get(n)] = r), e = r;\n      }\n      return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */\n  }, {\n    key: \"applyChanges\",\n    value: function applyChanges(t, e, n) {\n      Pt(e, function (e, n) {\n        return t[e] = n;\n      });\n      var _iterator5 = _createForOfIteratorHelper(n),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _e11 = _step5.value;\n          delete t[_e11];\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new _e(Yt(this.value));\n    }\n  }], [{\n    key: \"empty\",\n    value: function empty() {\n      return new _e({\n        mapValue: {}\n      });\n    }\n  }]);\n  return _e;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */\nvar ve = /*#__PURE__*/function () {\n  function ve(t, e, n, r, s, i, o) {\n    _classCallCheck(this, ve);\n    this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.createTime = s, this.data = i, this.documentState = o;\n  }\n  /**\n   * Creates a document with no known version or data, but which can serve as\n   * base document for mutations.\n   */\n  _createClass(ve, [{\n    key: \"convertToFoundDocument\",\n    value:\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */\n    function convertToFoundDocument(t, e) {\n      // If a document is switching state from being an invalid or deleted\n      // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n      // update from Watch or due to applying a local set mutation on top\n      // of a deleted document, our best guess about its createTime would be the\n      // version at which the document transitioned to a FOUND_DOCUMENT.\n      return !this.createTime.isEqual(fe.min()) || 2 /* DocumentType.NO_DOCUMENT */ !== this.documentType && 0 /* DocumentType.INVALID */ !== this.documentType || (this.createTime = t), this.version = t, this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */, this.data = e, this.documentState = 0 /* DocumentState.SYNCED */, this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */\n  }, {\n    key: \"convertToNoDocument\",\n    value: function convertToNoDocument(t) {\n      return this.version = t, this.documentType = 2 /* DocumentType.NO_DOCUMENT */, this.data = _e.empty(), this.documentState = 0 /* DocumentState.SYNCED */, this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */\n  }, {\n    key: \"convertToUnknownDocument\",\n    value: function convertToUnknownDocument(t) {\n      return this.version = t, this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */, this.data = _e.empty(), this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */, this;\n    }\n  }, {\n    key: \"setHasCommittedMutations\",\n    value: function setHasCommittedMutations() {\n      return this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */, this;\n    }\n  }, {\n    key: \"setHasLocalMutations\",\n    value: function setHasLocalMutations() {\n      return this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */, this.version = fe.min(), this;\n    }\n  }, {\n    key: \"setReadTime\",\n    value: function setReadTime(t) {\n      return this.readTime = t, this;\n    }\n  }, {\n    key: \"hasLocalMutations\",\n    get: function get() {\n      return 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n  }, {\n    key: \"hasCommittedMutations\",\n    get: function get() {\n      return 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n  }, {\n    key: \"hasPendingWrites\",\n    get: function get() {\n      return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n  }, {\n    key: \"isValidDocument\",\n    value: function isValidDocument() {\n      return 0 /* DocumentType.INVALID */ !== this.documentType;\n    }\n  }, {\n    key: \"isFoundDocument\",\n    value: function isFoundDocument() {\n      return 1 /* DocumentType.FOUND_DOCUMENT */ === this.documentType;\n    }\n  }, {\n    key: \"isNoDocument\",\n    value: function isNoDocument() {\n      return 2 /* DocumentType.NO_DOCUMENT */ === this.documentType;\n    }\n  }, {\n    key: \"isUnknownDocument\",\n    value: function isUnknownDocument() {\n      return 3 /* DocumentType.UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof ve && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n  }, {\n    key: \"mutableCopy\",\n    value: function mutableCopy() {\n      return new ve(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Document(\".concat(this.key, \", \").concat(this.version, \", \").concat(JSON.stringify(this.data.value), \", {createTime: \").concat(this.createTime, \"}), {documentType: \").concat(this.documentType, \"}), {documentState: \").concat(this.documentState, \"})\");\n    }\n  }], [{\n    key: \"newInvalidDocument\",\n    value: function newInvalidDocument(t) {\n      return new ve(t, 0 /* DocumentType.INVALID */, /* version */fe.min(), /* readTime */fe.min(), /* createTime */fe.min(), _e.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */\n  }, {\n    key: \"newFoundDocument\",\n    value: function newFoundDocument(t, e, n, r) {\n      return new ve(t, 1 /* DocumentType.FOUND_DOCUMENT */, /* version */e, /* readTime */fe.min(), /* createTime */n, r, 0 /* DocumentState.SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */\n  }, {\n    key: \"newNoDocument\",\n    value: function newNoDocument(t, e) {\n      return new ve(t, 2 /* DocumentType.NO_DOCUMENT */, /* version */e, /* readTime */fe.min(), /* createTime */fe.min(), _e.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */\n  }, {\n    key: \"newUnknownDocument\",\n    value: function newUnknownDocument(t, e) {\n      return new ve(t, 3 /* DocumentType.UNKNOWN_DOCUMENT */, /* version */e, /* readTime */fe.min(), /* createTime */fe.min(), _e.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);\n    }\n  }]);\n  return ve;\n}();\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nvar be = /*#__PURE__*/_createClass(function be(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  _classCallCheck(this, be);\n  this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, this.startAt = i, this.endAt = o, this.q = null;\n});\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */\nfunction Ee(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  return new be(t, e, n, r, s, i, o);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nvar Ae = /*#__PURE__*/_createClass(\n/**\n * Initializes a Query with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n */\nfunction Ae(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"F\";\n  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  var u = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n  _classCallCheck(this, Ae);\n  this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.O = null,\n  // The corresponding `Target` of this `Query` instance.\n  this.k = null, this.startAt, this.endAt;\n});\n/** Creates a new Query for a query that matches all documents at `path` */\nfunction Ie(t) {\n  return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\nfunction Te(t) {\n  var _iterator6 = _createForOfIteratorHelper(t.filters),\n    _step6;\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var e = _step6.value;\n      var _t12 = e.getFirstInequalityField();\n      if (null !== _t12) return _t12;\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n  return null;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction Re(t) {\n  return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */\nfunction Pe(t) {\n  var e = A(t);\n  if (null === e.O) {\n    e.O = [];\n    var _t13 = Te(e),\n      n = Ie(e);\n    if (null !== _t13 && null === n)\n      // In order to implicitly add key ordering, we must also add the\n      // inequality filter field for it to be a valid query.\n      // Note that the default inequality field and key ordering is ascending.\n      _t13.isKeyField() || e.O.push(new he(_t13)), e.O.push(new he(nt.keyField(), \"asc\" /* Direction.ASCENDING */));else {\n      var _t14 = !1;\n      var _iterator7 = _createForOfIteratorHelper(e.explicitOrderBy),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var _n4 = _step7.value;\n          e.O.push(_n4), _n4.field.isKeyField() && (_t14 = !0);\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n      if (!_t14) {\n        // The order of the implicit key ordering always matches the last\n        // explicit order by\n        var _t15 = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* Direction.ASCENDING */;\n        e.O.push(new he(nt.keyField(), _t15));\n      }\n    }\n  }\n  return e.O;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */\nfunction Ve(t) {\n  var e = A(t);\n  if (!e.k) if (\"F\" /* LimitType.First */ === e.limitType) e.k = Ee(e.path, e.collectionGroup, Pe(e), e.filters, e.limit, e.startAt, e.endAt);else {\n    // Flip the orderBy directions since we want the last results\n    var _t16 = [];\n    var _iterator8 = _createForOfIteratorHelper(Pe(e)),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var _n5 = _step8.value;\n        var _e12 = \"desc\" /* Direction.DESCENDING */ === _n5.dir ? \"asc\" /* Direction.ASCENDING */ : \"desc\" /* Direction.DESCENDING */;\n        _t16.push(new he(_n5.field, _e12));\n      }\n      // We need to swap the cursors to match the now-flipped query ordering.\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n    var n = e.endAt ? new Ht(e.endAt.position, e.endAt.inclusive) : null,\n      r = e.startAt ? new Ht(e.startAt.position, e.startAt.inclusive) : null;\n    // Now return as a LimitType.First query.\n    e.k = Ee(e.path, e.collectionGroup, _t16, e.filters, e.limit, n, r);\n  }\n  return e.k;\n}\nfunction $e(t, e) {\n  e.getFirstInequalityField(), Te(t);\n  var n = t.filters.concat([e]);\n  return new Ae(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\nfunction De(t, e) {\n  return function (t, e) {\n    if (t.limit !== e.limit) return !1;\n    if (t.orderBy.length !== e.orderBy.length) return !1;\n    for (var n = 0; n < t.orderBy.length; n++) if (!le(t.orderBy[n], e.orderBy[n])) return !1;\n    if (t.filters.length !== e.filters.length) return !1;\n    for (var _n6 = 0; _n6 < t.filters.length; _n6++) if (!ee(t.filters[_n6], e.filters[_n6])) return !1;\n    return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!Zt(t.startAt, e.startAt) && Zt(t.endAt, e.endAt);\n  }(Ve(t), Ve(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction Ne(t, e) {\n  return function (t) {\n    return \"number\" == typeof t && Number.isInteger(t) && !dt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n  }(e) ?\n  /**\n  * Returns an IntegerValue for `value`.\n  */\n  function (t) {\n    return {\n      integerValue: \"\" + t\n    };\n  }(e) : function (t, e) {\n    if (t.useProto3Json) {\n      if (isNaN(e)) return {\n        doubleValue: \"NaN\"\n      };\n      if (e === 1 / 0) return {\n        doubleValue: \"Infinity\"\n      };\n      if (e === -1 / 0) return {\n        doubleValue: \"-Infinity\"\n      };\n    }\n    return {\n      doubleValue: dt(e) ? \"-0\" : e\n    };\n  }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */\nvar Fe = /*#__PURE__*/_createClass(function Fe() {\n  _classCallCheck(this, Fe);\n  // Make sure that the structural type of `TransformOperation` is unique.\n  // See https://github.com/microsoft/TypeScript/issues/5451\n  this._ = void 0;\n});\n/** Transforms a value into a server-generated timestamp. */\nvar xe = /*#__PURE__*/function (_Fe) {\n  _inherits(xe, _Fe);\n  var _super15 = _createSuper(xe);\n  function xe() {\n    _classCallCheck(this, xe);\n    return _super15.apply(this, arguments);\n  }\n  return _createClass(xe);\n}(Fe);\n/** Transforms an array value via a union operation. */\nvar Se = /*#__PURE__*/function (_Fe2) {\n  _inherits(Se, _Fe2);\n  var _super16 = _createSuper(Se);\n  function Se(t) {\n    var _this17;\n    _classCallCheck(this, Se);\n    _this17 = _super16.call(this), _this17.elements = t;\n    return _this17;\n  }\n  return _createClass(Se);\n}(Fe);\n/** Transforms an array value via a remove operation. */\nvar qe = /*#__PURE__*/function (_Fe3) {\n  _inherits(qe, _Fe3);\n  var _super17 = _createSuper(qe);\n  function qe(t) {\n    var _this18;\n    _classCallCheck(this, qe);\n    _this18 = _super17.call(this), _this18.elements = t;\n    return _this18;\n  }\n  return _createClass(qe);\n}(Fe);\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */\nvar Oe = /*#__PURE__*/function (_Fe4) {\n  _inherits(Oe, _Fe4);\n  var _super18 = _createSuper(Oe);\n  function Oe(t, e) {\n    var _this19;\n    _classCallCheck(this, Oe);\n    _this19 = _super18.call(this), _this19.serializer = t, _this19.C = e;\n    return _this19;\n  }\n  return _createClass(Oe);\n}(Fe);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */\nvar ke = /*#__PURE__*/_createClass(function ke(t, e) {\n  _classCallCheck(this, ke);\n  this.field = t, this.transform = e;\n});\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */\nvar Ce = /*#__PURE__*/function () {\n  function Ce(t, e) {\n    _classCallCheck(this, Ce);\n    this.updateTime = t, this.exists = e;\n  }\n  /** Creates a new empty Precondition. */\n  _createClass(Ce, [{\n    key: \"isNone\",\n    get: /** Returns whether this Precondition is empty. */function get() {\n      return void 0 === this.updateTime && void 0 === this.exists;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n  }], [{\n    key: \"none\",\n    value: function none() {\n      return new Ce();\n    }\n    /** Creates a new Precondition with an exists flag. */\n  }, {\n    key: \"exists\",\n    value: function exists(t) {\n      return new Ce(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */\n  }, {\n    key: \"updateTime\",\n    value: function updateTime(t) {\n      return new Ce(t);\n    }\n  }]);\n  return Ce;\n}();\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */\nvar Me = /*#__PURE__*/_createClass(function Me() {\n  _classCallCheck(this, Me);\n});\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */\nvar Le = /*#__PURE__*/function (_Me) {\n  _inherits(Le, _Me);\n  var _super19 = _createSuper(Le);\n  function Le(t, e, n) {\n    var _this20;\n    var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    _classCallCheck(this, Le);\n    _this20 = _super19.call(this), _this20.key = t, _this20.value = e, _this20.precondition = n, _this20.fieldTransforms = r, _this20.type = 0 /* MutationType.Set */;\n    return _this20;\n  }\n  _createClass(Le, [{\n    key: \"getFieldMask\",\n    value: function getFieldMask() {\n      return null;\n    }\n  }]);\n  return Le;\n}(Me);\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */\nvar Ue = /*#__PURE__*/function (_Me2) {\n  _inherits(Ue, _Me2);\n  var _super20 = _createSuper(Ue);\n  function Ue(t, e, n, r) {\n    var _this21;\n    var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n    _classCallCheck(this, Ue);\n    _this21 = _super20.call(this), _this21.key = t, _this21.data = e, _this21.fieldMask = n, _this21.precondition = r, _this21.fieldTransforms = s, _this21.type = 1 /* MutationType.Patch */;\n    return _this21;\n  }\n  _createClass(Ue, [{\n    key: \"getFieldMask\",\n    value: function getFieldMask() {\n      return this.fieldMask;\n    }\n  }]);\n  return Ue;\n}(Me);\n/** A mutation that deletes the document at the given key. */\nvar je = /*#__PURE__*/function (_Me3) {\n  _inherits(je, _Me3);\n  var _super21 = _createSuper(je);\n  function je(t, e) {\n    var _this22;\n    _classCallCheck(this, je);\n    _this22 = _super21.call(this), _this22.key = t, _this22.precondition = e, _this22.type = 2 /* MutationType.Delete */, _this22.fieldTransforms = [];\n    return _this22;\n  }\n  _createClass(je, [{\n    key: \"getFieldMask\",\n    value: function getFieldMask() {\n      return null;\n    }\n  }]);\n  return je;\n}(Me);\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */\nvar Be = /*#__PURE__*/function (_Me4) {\n  _inherits(Be, _Me4);\n  var _super22 = _createSuper(Be);\n  function Be(t, e) {\n    var _this23;\n    _classCallCheck(this, Be);\n    _this23 = _super22.call(this), _this23.key = t, _this23.precondition = e, _this23.type = 3 /* MutationType.Verify */, _this23.fieldTransforms = [];\n    return _this23;\n  }\n  _createClass(Be, [{\n    key: \"getFieldMask\",\n    value: function getFieldMask() {\n      return null;\n    }\n  }]);\n  return Be;\n}(Me);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ze = function () {\n    var t = {\n      asc: \"ASCENDING\",\n      desc: \"DESCENDING\"\n    };\n    return t;\n  }(),\n  Qe = function () {\n    var t = {\n      \"<\": \"LESS_THAN\",\n      \"<=\": \"LESS_THAN_OR_EQUAL\",\n      \">\": \"GREATER_THAN\",\n      \">=\": \"GREATER_THAN_OR_EQUAL\",\n      \"==\": \"EQUAL\",\n      \"!=\": \"NOT_EQUAL\",\n      \"array-contains\": \"ARRAY_CONTAINS\",\n      in: \"IN\",\n      \"not-in\": \"NOT_IN\",\n      \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n  }(),\n  We = function () {\n    var t = {\n      and: \"AND\",\n      or: \"OR\"\n    };\n    return t;\n  }();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nvar Ge = /*#__PURE__*/_createClass(function Ge(t, e) {\n  _classCallCheck(this, Ge);\n  this.databaseId = t, this.useProto3Json = e;\n});\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction Ke(t, e) {\n  if (t.useProto3Json) {\n    return \"\".concat(new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\"), \".\").concat((\"000000000\" + e.nanoseconds).slice(-9), \"Z\");\n  }\n  return {\n    seconds: \"\" + e.seconds,\n    nanos: e.nanoseconds\n  };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Ye(t, e) {\n  return t.useProto3Json ? e.toBase64() : e.toUint8Array();\n}\nfunction He(t, e) {\n  return Ke(t, e.toTimestamp());\n}\nfunction Ze(t) {\n  return E(!!t), fe.fromTimestamp(function (t) {\n    var e = Nt(t);\n    return new St(e.seconds, e.nanos);\n  }(t));\n}\nfunction Je(t, e) {\n  return function (t) {\n    return new tt([\"projects\", t.projectId, \"databases\", t.database]);\n  }(t).child(\"documents\").child(e).canonicalString();\n}\nfunction Xe(t, e) {\n  return Je(t.databaseId, e.path);\n}\nfunction tn(t, e) {\n  var n = function (t) {\n    var e = tt.fromString(t);\n    return E(wn(e)), e;\n  }(e);\n  if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n  if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n  return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n  var r;\n  /** Creates a Document proto from key and fields (but no create/update time) */\n}\n\nfunction en(t, e) {\n  return Je(t.databaseId, e);\n}\nfunction nn(t) {\n  return new tt([\"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database]).canonicalString();\n}\nfunction rn(t, e, n) {\n  return {\n    name: Xe(t, e),\n    fields: n.value.mapValue.fields\n  };\n}\nfunction sn(t, e) {\n  return \"found\" in e ? function (t, e) {\n    E(!!e.found), e.found.name, e.found.updateTime;\n    var n = tn(t, e.found.name),\n      r = Ze(e.found.updateTime),\n      s = e.found.createTime ? Ze(e.found.createTime) : fe.min(),\n      i = new _e({\n        mapValue: {\n          fields: e.found.fields\n        }\n      });\n    return ve.newFoundDocument(n, r, s, i);\n  }(t, e) : \"missing\" in e ? function (t, e) {\n    E(!!e.missing), E(!!e.readTime);\n    var n = tn(t, e.missing),\n      r = Ze(e.readTime);\n    return ve.newNoDocument(n, r);\n  }(t, e) : b();\n}\nfunction on(t, e) {\n  var n;\n  if (e instanceof Le) n = {\n    update: rn(t, e.key, e.value)\n  };else if (e instanceof je) n = {\n    delete: Xe(t, e.key)\n  };else if (e instanceof Ue) n = {\n    update: rn(t, e.key, e.data),\n    updateMask: dn(e.fieldMask)\n  };else {\n    if (!(e instanceof Be)) return b();\n    n = {\n      verify: Xe(t, e.key)\n    };\n  }\n  return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map(function (t) {\n    return function (t, e) {\n      var n = e.transform;\n      if (n instanceof xe) return {\n        fieldPath: e.field.canonicalString(),\n        setToServerValue: \"REQUEST_TIME\"\n      };\n      if (n instanceof Se) return {\n        fieldPath: e.field.canonicalString(),\n        appendMissingElements: {\n          values: n.elements\n        }\n      };\n      if (n instanceof qe) return {\n        fieldPath: e.field.canonicalString(),\n        removeAllFromArray: {\n          values: n.elements\n        }\n      };\n      if (n instanceof Oe) return {\n        fieldPath: e.field.canonicalString(),\n        increment: n.C\n      };\n      throw b();\n    }(0, t);\n  })), e.precondition.isNone || (n.currentDocument = function (t, e) {\n    return void 0 !== e.updateTime ? {\n      updateTime: He(t, e.updateTime)\n    } : void 0 !== e.exists ? {\n      exists: e.exists\n    } : b();\n  }(t, e.precondition)), n;\n}\nfunction un(t, e) {\n  // Dissect the path into parent, collectionId, and optional key filter.\n  var n = {\n      structuredQuery: {}\n    },\n    r = e.path;\n  null !== e.collectionGroup ? (n.parent = en(t, r), n.structuredQuery.from = [{\n    collectionId: e.collectionGroup,\n    allDescendants: !0\n  }]) : (n.parent = en(t, r.popLast()), n.structuredQuery.from = [{\n    collectionId: r.lastSegment()\n  }]);\n  var s = function (t) {\n    if (0 === t.length) return;\n    return fn(te.create(t, \"and\" /* CompositeOperator.AND */));\n  }(e.filters);\n  s && (n.structuredQuery.where = s);\n  var i = function (t) {\n    if (0 === t.length) return;\n    return t.map(function (t) {\n      return (\n        // visible for testing\n        function (t) {\n          return {\n            field: ln(t.field),\n            direction: cn(t.dir)\n          };\n        }\n        // visible for testing\n        (t)\n      );\n    });\n  }(e.orderBy);\n  i && (n.structuredQuery.orderBy = i);\n  var o = function (t, e) {\n    return t.useProto3Json || ft(e) ? e : {\n      value: e\n    };\n  }(t, e.limit);\n  var u;\n  return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n    before: (u = e.startAt).inclusive,\n    values: u.position\n  }), e.endAt && (n.structuredQuery.endAt = function (t) {\n    return {\n      before: !t.inclusive,\n      values: t.position\n    };\n  }\n  // visible for testing\n  (e.endAt)), n;\n}\nfunction cn(t) {\n  return ze[t];\n}\n\n// visible for testing\nfunction an(t) {\n  return Qe[t];\n}\nfunction hn(t) {\n  return We[t];\n}\nfunction ln(t) {\n  return {\n    fieldPath: t.canonicalString()\n  };\n}\nfunction fn(t) {\n  return t instanceof Xt ? function (t) {\n    if (\"==\" /* Operator.EQUAL */ === t.op) {\n      if (Gt(t.value)) return {\n        unaryFilter: {\n          field: ln(t.field),\n          op: \"IS_NAN\"\n        }\n      };\n      if (Wt(t.value)) return {\n        unaryFilter: {\n          field: ln(t.field),\n          op: \"IS_NULL\"\n        }\n      };\n    } else if (\"!=\" /* Operator.NOT_EQUAL */ === t.op) {\n      if (Gt(t.value)) return {\n        unaryFilter: {\n          field: ln(t.field),\n          op: \"IS_NOT_NAN\"\n        }\n      };\n      if (Wt(t.value)) return {\n        unaryFilter: {\n          field: ln(t.field),\n          op: \"IS_NOT_NULL\"\n        }\n      };\n    }\n    return {\n      fieldFilter: {\n        field: ln(t.field),\n        op: an(t.op),\n        value: t.value\n      }\n    };\n  }(t) : t instanceof te ? function (t) {\n    var e = t.getFilters().map(function (t) {\n      return fn(t);\n    });\n    if (1 === e.length) return e[0];\n    return {\n      compositeFilter: {\n        op: hn(t.op),\n        filters: e\n      }\n    };\n  }(t) : b();\n}\nfunction dn(t) {\n  var e = [];\n  return t.fields.forEach(function (t) {\n    return e.push(t.canonicalString());\n  }), {\n    fieldPaths: e\n  };\n}\nfunction wn(t) {\n  // Resource names have at least 4 components (project ID, database ID)\n  return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction mn(t) {\n  return new Ge(t, /* useProto3Json= */!0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nvar pn = /*#__PURE__*/function () {\n  function pn(\n  /**\n   * The AsyncQueue to run backoff operations on.\n   */\n  t,\n  /**\n   * The ID to use when scheduling backoff operations on the AsyncQueue.\n   */\n  e) {\n    var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1e3;\n    var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1.5;\n    var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 6e4;\n    _classCallCheck(this, pn);\n    this.M = t, this.timerId = e, this.L = n, this.U = r, this.j = s, this.B = 0, this.W = null, /** The last backoff attempt, as epoch milliseconds. */\n    this.G = Date.now(), this.reset();\n  }\n  /**\n   * Resets the backoff delay.\n   *\n   * The very next backoffAndWait() will have no delay. If it is called again\n   * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n   * subsequent ones will increase according to the backoffFactor.\n   */\n  _createClass(pn, [{\n    key: \"reset\",\n    value: function reset() {\n      this.B = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */\n  }, {\n    key: \"K\",\n    value: function K() {\n      this.B = this.j;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */\n  }, {\n    key: \"Y\",\n    value: function Y(t) {\n      var _this24 = this;\n      // Cancel any pending backoff operation.\n      this.cancel();\n      // First schedule using the current base (which may be 0 and should be\n      // honored as such).\n      var e = Math.floor(this.B + this.H()),\n        n = Math.max(0, Date.now() - this.G),\n        r = Math.max(0, e - n);\n      // Guard against lastAttemptTime being in the future due to a clock change.\n      r > 0 && y(\"ExponentialBackoff\", \"Backing off for \".concat(r, \" ms (base delay: \").concat(this.B, \" ms, delay with jitter: \").concat(e, \" ms, last attempt: \").concat(n, \" ms ago)\")), this.W = this.M.enqueueAfterDelay(this.timerId, r, function () {\n        return _this24.G = Date.now(), t();\n      }),\n      // Apply backoff factor to determine next delay and ensure it is within\n      // bounds.\n      this.B *= this.U, this.B < this.L && (this.B = this.L), this.B > this.j && (this.B = this.j);\n    }\n  }, {\n    key: \"Z\",\n    value: function Z() {\n      null !== this.W && (this.W.skipDelay(), this.W = null);\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      null !== this.W && (this.W.cancel(), this.W = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */\n  }, {\n    key: \"H\",\n    value: function H() {\n      return (Math.random() - .5) * this.B;\n    }\n  }]);\n  return pn;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nvar yn = /*#__PURE__*/function (_ref2) {\n  _inherits(yn, _ref2);\n  var _super23 = _createSuper(yn);\n  function yn(t, e, n, r) {\n    var _this25;\n    _classCallCheck(this, yn);\n    _this25 = _super23.call(this), _this25.authCredentials = t, _this25.appCheckCredentials = e, _this25.connection = n, _this25.serializer = r, _this25.J = !1;\n    return _this25;\n  }\n  _createClass(yn, [{\n    key: \"X\",\n    value: function X() {\n      if (this.J) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */\n  }, {\n    key: \"v\",\n    value: function v(t, e, n) {\n      var _this26 = this;\n      return this.X(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n          r = _ref4[0],\n          s = _ref4[1];\n        return _this26.connection.v(t, e, n, r, s);\n      }).catch(function (t) {\n        throw \"FirebaseError\" === t.name ? (t.code === F && (_this26.authCredentials.invalidateToken(), _this26.appCheckCredentials.invalidateToken()), t) : new U(_R, t.toString());\n      });\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */\n  }, {\n    key: \"R\",\n    value: function R(t, e, n, r) {\n      var _this27 = this;\n      return this.X(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n          s = _ref6[0],\n          i = _ref6[1];\n        return _this27.connection.R(t, e, n, s, i, r);\n      }).catch(function (t) {\n        throw \"FirebaseError\" === t.name ? (t.code === F && (_this27.authCredentials.invalidateToken(), _this27.appCheckCredentials.invalidateToken()), t) : new U(_R, t.toString());\n      });\n    }\n  }, {\n    key: \"terminate\",\n    value: function terminate() {\n      this.J = !0;\n    }\n  }]);\n  return yn;\n}( /*#__PURE__*/function () {\n  function _class3() {\n    _classCallCheck(this, _class3);\n  }\n  return _createClass(_class3);\n}()); // TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nfunction gn(_x5, _x6) {\n  return _gn.apply(this, arguments);\n}\nfunction _gn() {\n  _gn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(t, e) {\n    var n, r, s;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          n = A(t), r = nn(n.serializer) + \"/documents\", s = {\n            writes: e.map(function (t) {\n              return on(n.serializer, t);\n            })\n          };\n          _context7.next = 3;\n          return n.v(\"Commit\", r, s);\n        case 3:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }));\n  return _gn.apply(this, arguments);\n}\nfunction _n(_x7, _x8) {\n  return _n7.apply(this, arguments);\n}\nfunction _n7() {\n  _n7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(t, e) {\n    var n, r, s, i, o, u;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          n = A(t);\n          r = nn(n.serializer) + \"/documents\";\n          s = {\n            documents: e.map(function (t) {\n              return Xe(n.serializer, t);\n            })\n          };\n          _context8.next = 5;\n          return n.R(\"BatchGetDocuments\", r, s, e.length);\n        case 5:\n          i = _context8.sent;\n          o = new Map();\n          i.forEach(function (t) {\n            var e = sn(n.serializer, t);\n            o.set(e.key.toString(), e);\n          });\n          u = [];\n          return _context8.abrupt(\"return\", (e.forEach(function (t) {\n            var e = o.get(t.toString());\n            E(!!e), u.push(e);\n          }), u));\n        case 10:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8);\n  }));\n  return _n7.apply(this, arguments);\n}\nfunction vn(_x9, _x10) {\n  return _vn.apply(this, arguments);\n}\nfunction _vn() {\n  _vn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(t, e) {\n    var n, r;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          n = A(t), r = un(n.serializer, Ve(e));\n          _context9.next = 3;\n          return n.R(\"RunQuery\", r.parent, {\n            structuredQuery: r.structuredQuery\n          });\n        case 3:\n          return _context9.abrupt(\"return\", _context9.sent.filter(function (t) {\n            return !!t.document;\n          }).map(function (t) {\n            return function (t, e, n) {\n              var r = tn(t, e.name),\n                s = Ze(e.updateTime),\n                i = e.createTime ? Ze(e.createTime) : fe.min(),\n                o = new _e({\n                  mapValue: {\n                    fields: e.fields\n                  }\n                }),\n                u = ve.newFoundDocument(r, s, i, o);\n              return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n            }(n.serializer, t.document, void 0);\n          }));\n        case 4:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9);\n  }));\n  return _vn.apply(this, arguments);\n}\nfunction bn(_x11, _x12, _x13) {\n  return _bn.apply(this, arguments);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction _bn() {\n  _bn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(t, e, n) {\n    var r, s, i, o, u, c;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          r = A(t), s = function (t, e, n) {\n            var r = un(t, e),\n              s = [];\n            return n.forEach(function (t) {\n              \"count\" === t.D ? s.push({\n                alias: t.alias.canonicalString(),\n                count: {}\n              }) : \"avg\" === t.D ? s.push({\n                alias: t.alias.canonicalString(),\n                avg: {\n                  field: ln(t.fieldPath)\n                }\n              }) : \"sum\" === t.D && s.push({\n                alias: t.alias.canonicalString(),\n                sum: {\n                  field: ln(t.fieldPath)\n                }\n              });\n            }), {\n              structuredAggregationQuery: {\n                aggregations: s,\n                structuredQuery: r.structuredQuery\n              },\n              parent: r.parent\n            };\n          }(r.serializer, Ve(e), n), i = s.parent;\n          r.connection.g || delete s.parent;\n          _context10.next = 4;\n          return r.R(\"RunAggregationQuery\", i, s, /*expectedResponseCount=*/1);\n        case 4:\n          o = _context10.sent.filter(function (t) {\n            return !!t.result;\n          });\n          return _context10.abrupt(\"return\", (E(1 === o.length), (u = o[0]).result, u.result.aggregateFields, new _e({\n            mapValue: {\n              fields: null === (c = u.result) || void 0 === c ? void 0 : c.aggregateFields\n            }\n          })));\n        case 6:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10);\n  }));\n  return _bn.apply(this, arguments);\n}\nvar En = new Map();\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction An(t) {\n  if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n  if (!En.has(t)) {\n    y(\"ComponentProvider\", \"Initializing Datastore\");\n    var i = function (t) {\n        return new gt(t, fetch.bind(null));\n      }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), new Z(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))),\n      o = mn(t._databaseId),\n      u = function (t, e, n, r) {\n        return new yn(t, e, n, r);\n      }(t._authCredentials, t._appCheckCredentials, i, o);\n    En.set(t, u);\n  }\n  var e, n, r, s;\n  /**\n  * @license\n  * Copyright 2018 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  return En.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nvar In = /*#__PURE__*/function () {\n  function In(t) {\n    _classCallCheck(this, In);\n    var e;\n    if (void 0 === t.host) {\n      if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n      this.host = \"firestore.googleapis.com\", this.ssl = true;\n    } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n    if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, this.cache = t.localCache, void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040;else {\n      if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n      this.cacheSizeBytes = t.cacheSizeBytes;\n    }\n    this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, this.useFetchStreams = !!t.useFetchStreams, function (t, e, n, r) {\n      if (!0 === e && !0 === r) throw new U(P, \"\".concat(t, \" and \").concat(n, \" cannot be used together.\"));\n    }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n  }\n  _createClass(In, [{\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n  }]);\n  return In;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */\nvar Tn = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function Tn(t, e, n, r) {\n    _classCallCheck(this, Tn);\n    this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, this._app = r,\n    /**\n     * Whether it's a Firestore or Firestore Lite instance.\n     */\n    this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new In({}), this._settingsFrozen = !1;\n  }\n  /**\n   * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n   * instance.\n   */\n  _createClass(Tn, [{\n    key: \"app\",\n    get: function get() {\n      if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n      return this._app;\n    }\n  }, {\n    key: \"_initialized\",\n    get: function get() {\n      return this._settingsFrozen;\n    }\n  }, {\n    key: \"_terminated\",\n    get: function get() {\n      return void 0 !== this._terminateTask;\n    }\n  }, {\n    key: \"_setSettings\",\n    value: function _setSettings(t) {\n      if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n      this._settings = new In(t), void 0 !== t.credentials && (this._authCredentials = function (t) {\n        if (!t) return new z();\n        switch (t.type) {\n          case \"firstParty\":\n            return new K(t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n          case \"provider\":\n            return t.client;\n          default:\n            throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n        }\n      }(t.credentials));\n    }\n  }, {\n    key: \"_getSettings\",\n    value: function _getSettings() {\n      return this._settings;\n    }\n  }, {\n    key: \"_freezeSettings\",\n    value: function _freezeSettings() {\n      return this._settingsFrozen = !0, this._settings;\n    }\n  }, {\n    key: \"_delete\",\n    value: function _delete() {\n      return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        app: this._app,\n        databaseId: this._databaseId,\n        settings: this._settings\n      };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */\n  }, {\n    key: \"_terminate\",\n    value: function _terminate() {\n      return function (t) {\n        var e = En.get(t);\n        e && (y(\"ComponentProvider\", \"Removing Datastore\"), En.delete(t), e.terminate());\n      }(this), Promise.resolve();\n    }\n  }]);\n  return Tn;\n}();\nfunction Rn(t, e, n) {\n  n || (n = \"(default)\");\n  var r = _getProvider(t, \"firestore/lite\");\n  if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n  return r.initialize({\n    options: e,\n    instanceIdentifier: n\n  });\n}\nfunction Pn(e, n) {\n  var r = \"object\" == typeof e ? e : getApp(),\n    s = \"string\" == typeof e ? e : n || \"(default)\",\n    i = _getProvider(r, \"firestore/lite\").getImmediate({\n      identifier: s\n    });\n  if (!i._initialized) {\n    var t = getDefaultEmulatorHostnameAndPort(\"firestore\");\n    t && Vn.apply(void 0, [i].concat(_toConsumableArray(t)));\n  }\n  return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */\nfunction Vn(t, e, n) {\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var s;\n  var i = (t = ct(t, Tn))._getSettings();\n  if (\"firestore.googleapis.com\" !== i.host && i.host !== e && _(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), t._setSettings(Object.assign(Object.assign({}, i), {\n    host: \"\".concat(e, \":\").concat(n),\n    ssl: !1\n  })), r.mockUserToken) {\n    var _e13, _n8;\n    if (\"string\" == typeof r.mockUserToken) _e13 = r.mockUserToken, _n8 = d.MOCK_USER;else {\n      // Let createMockUserToken validate first (catches common mistakes like\n      // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n      _e13 = createMockUserToken(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n      var _i2 = r.mockUserToken.sub || r.mockUserToken.user_id;\n      if (!_i2) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n      _n8 = new d(_i2);\n    }\n    t._authCredentials = new Q(new B(_e13, _n8));\n  }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */\nfunction $n(t) {\n  return t = ct(t, Tn), _removeServiceInstance(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar Dn = /*#__PURE__*/_createClass(\n/**\n * Create a new AggregateField<T>\n * @param _aggregateType Specifies the type of aggregation operation to perform.\n * @param _internalFieldPath Optionally specifies the field that is aggregated.\n * @internal\n */\nfunction Dn() {\n  var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"count\";\n  var e = arguments.length > 1 ? arguments[1] : undefined;\n  _classCallCheck(this, Dn);\n  this._aggregateType = t, this._internalFieldPath = e, /** A type string to uniquely identify instances of this class. */\n  this.type = \"AggregateField\";\n});\n/**\n * The results of executing an aggregation query.\n */\nvar Nn = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function Nn(t, e, n) {\n    _classCallCheck(this, Nn);\n    this._userDataWriter = e, this._data = n, /** A type string to uniquely identify instances of this class. */\n    this.type = \"AggregateQuerySnapshot\", this.query = t;\n  }\n  /**\n   * Returns the results of the aggregations performed over the underlying\n   * query.\n   *\n   * The keys of the returned object will be the same as those of the\n   * `AggregateSpec` object specified to the aggregation method, and the values\n   * will be the corresponding aggregation result.\n   *\n   * @returns The results of the aggregations performed over the underlying\n   * query.\n   */\n  _createClass(Nn, [{\n    key: \"data\",\n    value: function data() {\n      return this._userDataWriter.convertValue(this._data.value);\n    }\n  }]);\n  return Nn;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\nvar Fn = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function Fn(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    _classCallCheck(this, Fn);\n    this.converter = e, this._key = n, /** The type of this Firestore reference. */\n    this.type = \"document\", this.firestore = t;\n  }\n  _createClass(Fn, [{\n    key: \"_path\",\n    get: function get() {\n      return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return new Sn(this.firestore, this.converter, this._key.path.popLast());\n    }\n  }, {\n    key: \"withConverter\",\n    value: function withConverter(t) {\n      return new Fn(this.firestore, t, this._key);\n    }\n  }]);\n  return Fn;\n}();\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */\nvar xn = /*#__PURE__*/function () {\n  // This is the lite version of the Query class in the main SDK.\n  /** @hideconstructor protected */\n  function xn(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    _classCallCheck(this, xn);\n    this.converter = e, this._query = n, /** The type of this Firestore reference. */\n    this.type = \"query\", this.firestore = t;\n  }\n  _createClass(xn, [{\n    key: \"withConverter\",\n    value: function withConverter(t) {\n      return new xn(this.firestore, t, this._query);\n    }\n  }]);\n  return xn;\n}();\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link (query:1)}).\n */\nvar Sn = /*#__PURE__*/function (_xn) {\n  _inherits(Sn, _xn);\n  var _super24 = _createSuper(Sn);\n  /** @hideconstructor */\n  function Sn(t, e, n) {\n    var _this28;\n    _classCallCheck(this, Sn);\n    _this28 = _super24.call(this, t, e, new Ae(n)), _this28._path = n, /** The type of this Firestore reference. */\n    _this28.type = \"collection\";\n    return _this28;\n  }\n  /** The collection's identifier. */\n  _createClass(Sn, [{\n    key: \"id\",\n    get: function get() {\n      return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */\n  }, {\n    key: \"parent\",\n    get: function get() {\n      var t = this._path.popLast();\n      return t.isEmpty() ? null : new Fn(this.firestore, /* converter= */null, new rt(t));\n    }\n  }, {\n    key: \"withConverter\",\n    value: function withConverter(t) {\n      return new Sn(this.firestore, t, this._path);\n    }\n  }]);\n  return Sn;\n}(xn);\nfunction qn(t, e) {\n  for (var _len5 = arguments.length, n = new Array(_len5 > 2 ? _len5 - 2 : 0), _key5 = 2; _key5 < _len5; _key5++) {\n    n[_key5 - 2] = arguments[_key5];\n  }\n  if (t = getModularInstance(t), st(\"collection\", \"path\", e), t instanceof Tn) {\n    var r = tt.fromString.apply(tt, [e].concat(n));\n    return ot(r), new Sn(t, /* converter= */null, r);\n  }\n  {\n    if (!(t instanceof Fn || t instanceof Sn)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n    var _r2 = t._path.child(tt.fromString.apply(tt, [e].concat(n)));\n    return ot(_r2), new Sn(t.firestore, /* converter= */null, _r2);\n  }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */\nfunction On(t, e) {\n  if (t = ct(t, Tn), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, \"Invalid collection ID '\".concat(e, \"' passed to function collectionGroup(). Collection IDs must not contain '/'.\"));\n  return new xn(t, /* converter= */null, function (t) {\n    return new Ae(tt.emptyPath(), t);\n  }(e));\n}\nfunction kn(t, e) {\n  for (var _len6 = arguments.length, n = new Array(_len6 > 2 ? _len6 - 2 : 0), _key6 = 2; _key6 < _len6; _key6++) {\n    n[_key6 - 2] = arguments[_key6];\n  }\n  if (t = getModularInstance(t),\n  // We allow omission of 'pathString' but explicitly prohibit passing in both\n  // 'undefined' and 'null'.\n  1 === arguments.length && (e = At.N()), st(\"doc\", \"path\", e), t instanceof Tn) {\n    var r = tt.fromString.apply(tt, [e].concat(n));\n    return it(r), new Fn(t, /* converter= */null, new rt(r));\n  }\n  {\n    if (!(t instanceof Fn || t instanceof Sn)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n    var _r3 = t._path.child(tt.fromString.apply(tt, [e].concat(n)));\n    return it(_r3), new Fn(t.firestore, t instanceof Sn ? t.converter : null, new rt(_r3));\n  }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\nfunction Cn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), (t instanceof Fn || t instanceof Sn) && (e instanceof Fn || e instanceof Sn) && t.firestore === e.firestore && t.path === e.path && t.converter === e.converter;\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\nfunction Mn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof xn && e instanceof xn && t.firestore === e.firestore && De(t._query, e._query) && t.converter === e.converter;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */\nvar Ln = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function Ln(t) {\n    _classCallCheck(this, Ln);\n    this._byteString = t;\n  }\n  /**\n   * Creates a new `Bytes` object from the given Base64 string, converting it to\n   * bytes.\n   *\n   * @param base64 - The Base64 string used to create the `Bytes` object.\n   */\n  _createClass(Ln, [{\n    key: \"toBase64\",\n    value:\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */\n    function toBase64() {\n      return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */\n  }, {\n    key: \"toUint8Array\",\n    value: function toUint8Array() {\n      return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this._byteString.isEqual(t._byteString);\n    }\n  }], [{\n    key: \"fromBase64String\",\n    value: function fromBase64String(t) {\n      try {\n        return new Ln($t.fromBase64String(t));\n      } catch (t) {\n        throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n      }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */\n  }, {\n    key: \"fromUint8Array\",\n    value: function fromUint8Array(t) {\n      return new Ln($t.fromUint8Array(t));\n    }\n  }]);\n  return Ln;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */\nvar Un = /*#__PURE__*/function () {\n  /**\n   * Creates a `FieldPath` from the provided field names. If more than one field\n   * name is provided, the path will point to a nested field in a document.\n   *\n   * @param fieldNames - A list of field names.\n   */\n  function Un() {\n    _classCallCheck(this, Un);\n    for (var _len7 = arguments.length, t = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      t[_key7] = arguments[_key7];\n    }\n    for (var e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n    this._internalPath = new nt(t);\n  }\n  /**\n   * Returns true if this `FieldPath` is equal to the provided one.\n   *\n   * @param other - The `FieldPath` to compare against.\n   * @returns true if this `FieldPath` is equal to the provided one.\n   */\n  _createClass(Un, [{\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this._internalPath.isEqual(t._internalPath);\n    }\n  }]);\n  return Un;\n}();\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */\nfunction jn() {\n  return new Un(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */\nvar Bn = /*#__PURE__*/_createClass(\n/**\n * @param _methodName - The public API endpoint that returns this class.\n * @hideconstructor\n */\nfunction Bn(t) {\n  _classCallCheck(this, Bn);\n  this._methodName = t;\n});\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */\nvar zn = /*#__PURE__*/function () {\n  /**\n   * Creates a new immutable `GeoPoint` object with the provided latitude and\n   * longitude values.\n   * @param latitude - The latitude as number between -90 and 90.\n   * @param longitude - The longitude as number between -180 and 180.\n   */\n  function zn(t, e) {\n    _classCallCheck(this, zn);\n    if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n    if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n    this._lat = t, this._long = e;\n  }\n  /**\n   * The latitude of this `GeoPoint` instance.\n   */\n  _createClass(zn, [{\n    key: \"latitude\",\n    get: function get() {\n      return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */\n  }, {\n    key: \"longitude\",\n    get: function get() {\n      return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        latitude: this._lat,\n        longitude: this._long\n      };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */\n  }, {\n    key: \"_compareTo\",\n    value: function _compareTo(t) {\n      return It(this._lat, t._lat) || It(this._long, t._long);\n    }\n  }]);\n  return zn;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Qn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */\nvar Wn = /*#__PURE__*/function () {\n  function Wn(t, e, n) {\n    _classCallCheck(this, Wn);\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n  _createClass(Wn, [{\n    key: \"toMutation\",\n    value: function toMutation(t, e) {\n      return null !== this.fieldMask ? new Ue(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Le(t, this.data, e, this.fieldTransforms);\n    }\n  }]);\n  return Wn;\n}();\n/** The result of parsing \"update\" data (i.e. for an updateData call). */\nvar Gn = /*#__PURE__*/function () {\n  function Gn(t,\n  // The fieldMask does not include document transforms.\n  e, n) {\n    _classCallCheck(this, Gn);\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n  _createClass(Gn, [{\n    key: \"toMutation\",\n    value: function toMutation(t, e) {\n      return new Ue(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n  }]);\n  return Gn;\n}();\nfunction Kn(t) {\n  switch (t) {\n    case 0 /* UserDataSource.Set */:\n    // fall through\n    case 2 /* UserDataSource.MergeSet */:\n    // fall through\n    case 1 /* UserDataSource.Update */:\n      return !0;\n    case 3 /* UserDataSource.Argument */:\n    case 4 /* UserDataSource.ArrayArgument */:\n      return !1;\n    default:\n      throw b();\n  }\n}\n\n/** A \"context\" object passed around while parsing user data. */\nvar Yn = /*#__PURE__*/function () {\n  /**\n   * Initializes a ParseContext with the given source and path.\n   *\n   * @param settings - The settings for the parser.\n   * @param databaseId - The database ID of the Firestore instance.\n   * @param serializer - The serializer to use to generate the Value proto.\n   * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n   * rather than throw.\n   * @param fieldTransforms - A mutable list of field transforms encountered\n   * while parsing the data.\n   * @param fieldMask - A mutable list of field paths encountered while parsing\n   * the data.\n   *\n   * TODO(b/34871131): We don't support array paths right now, so path can be\n   * null to indicate the context represents any location within an array (in\n   * which case certain features will not work and errors will be somewhat\n   * compromised).\n   */\n  function Yn(t, e, n, r, s, i) {\n    _classCallCheck(this, Yn);\n    this.settings = t, this.databaseId = e, this.serializer = n, this.ignoreUndefinedProperties = r,\n    // Minor hack: If fieldTransforms is undefined, we assume this is an\n    // external call and we need to validate the entire path.\n    void 0 === s && this.tt(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n  }\n  _createClass(Yn, [{\n    key: \"path\",\n    get: function get() {\n      return this.settings.path;\n    }\n  }, {\n    key: \"et\",\n    get: function get() {\n      return this.settings.et;\n    }\n    /** Returns a new context with the specified settings overwritten. */\n  }, {\n    key: \"nt\",\n    value: function nt(t) {\n      return new Yn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.serializer, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n  }, {\n    key: \"rt\",\n    value: function rt(t) {\n      var e;\n      var n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n        r = this.nt({\n          path: n,\n          st: !1\n        });\n      return r.it(t), r;\n    }\n  }, {\n    key: \"ot\",\n    value: function ot(t) {\n      var e;\n      var n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n        r = this.nt({\n          path: n,\n          st: !1\n        });\n      return r.tt(), r;\n    }\n  }, {\n    key: \"ut\",\n    value: function ut(t) {\n      // TODO(b/34871131): We don't support array paths right now; so make path\n      // undefined.\n      return this.nt({\n        path: void 0,\n        st: !0\n      });\n    }\n  }, {\n    key: \"ct\",\n    value: function ct(t) {\n      return mr(t, this.settings.methodName, this.settings.at || !1, this.path, this.settings.ht);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */\n  }, {\n    key: \"contains\",\n    value: function contains(t) {\n      return void 0 !== this.fieldMask.find(function (e) {\n        return t.isPrefixOf(e);\n      }) || void 0 !== this.fieldTransforms.find(function (e) {\n        return t.isPrefixOf(e.field);\n      });\n    }\n  }, {\n    key: \"tt\",\n    value: function tt() {\n      // TODO(b/34871131): Remove null check once we have proper paths for fields\n      // within arrays.\n      if (this.path) for (var t = 0; t < this.path.length; t++) this.it(this.path.get(t));\n    }\n  }, {\n    key: \"it\",\n    value: function it(t) {\n      if (0 === t.length) throw this.ct(\"Document fields must not be empty\");\n      if (Kn(this.et) && Qn.test(t)) throw this.ct('Document fields cannot begin and end with \"__\"');\n    }\n  }]);\n  return Yn;\n}();\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */\nvar Hn = /*#__PURE__*/function () {\n  function Hn(t, e, n) {\n    _classCallCheck(this, Hn);\n    this.databaseId = t, this.ignoreUndefinedProperties = e, this.serializer = n || mn(t);\n  }\n  /** Creates a new top-level parse context. */\n  _createClass(Hn, [{\n    key: \"lt\",\n    value: function lt(t, e, n) {\n      var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n      return new Yn({\n        et: t,\n        methodName: e,\n        ht: n,\n        path: nt.emptyPath(),\n        st: !1,\n        at: r\n      }, this.databaseId, this.serializer, this.ignoreUndefinedProperties);\n    }\n  }]);\n  return Hn;\n}();\nfunction Zn(t) {\n  var e = t._freezeSettings(),\n    n = mn(t._databaseId);\n  return new Hn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */\nfunction Jn(t, e, n, r, s) {\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var o = t.lt(i.merge || i.mergeFields ? 2 /* UserDataSource.MergeSet */ : 0 /* UserDataSource.Set */, e, n, s);\n  lr(\"Data must be an object, but it was:\", o, r);\n  var u = ar(r, o);\n  var c, a;\n  if (i.merge) c = new ge(o.fieldMask), a = o.fieldTransforms;else if (i.mergeFields) {\n    var _t17 = [];\n    var _iterator9 = _createForOfIteratorHelper(i.mergeFields),\n      _step9;\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var _r4 = _step9.value;\n        var _s2 = fr(e, _r4, n);\n        if (!o.contains(_s2)) throw new U(P, \"Field '\".concat(_s2, \"' is specified in your field mask but missing from your input data.\"));\n        pr(_t17, _s2) || _t17.push(_s2);\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n    c = new ge(_t17), a = o.fieldTransforms.filter(function (t) {\n      return c.covers(t.field);\n    });\n  } else c = null, a = o.fieldTransforms;\n  return new Wn(new _e(u), c, a);\n}\nvar Xn = /*#__PURE__*/function (_Bn) {\n  _inherits(Xn, _Bn);\n  var _super25 = _createSuper(Xn);\n  function Xn() {\n    _classCallCheck(this, Xn);\n    return _super25.apply(this, arguments);\n  }\n  _createClass(Xn, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      if (2 /* UserDataSource.MergeSet */ !== t.et) throw 1 /* UserDataSource.Update */ === t.et ? t.ct(\"\".concat(this._methodName, \"() can only appear at the top level of your update data\")) : t.ct(\"\".concat(this._methodName, \"() cannot be used with set() unless you pass {merge:true}\"));\n      // No transform to add for a delete, but we need to add it to our\n      // fieldMask so it gets deleted.\n      return t.fieldMask.push(t.path), null;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof Xn;\n    }\n  }]);\n  return Xn;\n}(Bn);\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */\nfunction tr(t, e, n) {\n  return new Yn({\n    et: 3 /* UserDataSource.Argument */,\n    ht: e.settings.ht,\n    methodName: t._methodName,\n    st: n\n  }, e.databaseId, e.serializer, e.ignoreUndefinedProperties);\n}\nvar er = /*#__PURE__*/function (_Bn2) {\n  _inherits(er, _Bn2);\n  var _super26 = _createSuper(er);\n  function er() {\n    _classCallCheck(this, er);\n    return _super26.apply(this, arguments);\n  }\n  _createClass(er, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      return new ke(t.path, new xe());\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof er;\n    }\n  }]);\n  return er;\n}(Bn);\nvar nr = /*#__PURE__*/function (_Bn3) {\n  _inherits(nr, _Bn3);\n  var _super27 = _createSuper(nr);\n  function nr(t, e) {\n    var _this29;\n    _classCallCheck(this, nr);\n    _this29 = _super27.call(this, t), _this29.ft = e;\n    return _this29;\n  }\n  _createClass(nr, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      var e = tr(this, t, /*array=*/!0),\n        n = this.ft.map(function (t) {\n          return cr(t, e);\n        }),\n        r = new Se(n);\n      return new ke(t.path, r);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      // TODO(mrschmidt): Implement isEquals\n      return this === t;\n    }\n  }]);\n  return nr;\n}(Bn);\nvar rr = /*#__PURE__*/function (_Bn4) {\n  _inherits(rr, _Bn4);\n  var _super28 = _createSuper(rr);\n  function rr(t, e) {\n    var _this30;\n    _classCallCheck(this, rr);\n    _this30 = _super28.call(this, t), _this30.ft = e;\n    return _this30;\n  }\n  _createClass(rr, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      var e = tr(this, t, /*array=*/!0),\n        n = this.ft.map(function (t) {\n          return cr(t, e);\n        }),\n        r = new qe(n);\n      return new ke(t.path, r);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      // TODO(mrschmidt): Implement isEquals\n      return this === t;\n    }\n  }]);\n  return rr;\n}(Bn);\nvar sr = /*#__PURE__*/function (_Bn5) {\n  _inherits(sr, _Bn5);\n  var _super29 = _createSuper(sr);\n  function sr(t, e) {\n    var _this31;\n    _classCallCheck(this, sr);\n    _this31 = _super29.call(this, t), _this31.dt = e;\n    return _this31;\n  }\n  _createClass(sr, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      var e = new Oe(t.serializer, Ne(t.serializer, this.dt));\n      return new ke(t.path, e);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      // TODO(mrschmidt): Implement isEquals\n      return this === t;\n    }\n  }]);\n  return sr;\n}(Bn);\n/** Parse update data from an update() call. */\nfunction ir(t, e, n, r) {\n  var s = t.lt(1 /* UserDataSource.Update */, e, n);\n  lr(\"Data must be an object, but it was:\", s, r);\n  var i = [],\n    o = _e.empty();\n  Pt(r, function (t, r) {\n    var u = wr(e, t, n);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    r = getModularInstance(r);\n    var c = s.ot(u);\n    if (r instanceof Xn)\n      // Add it to the field mask, but don't add anything to updateData.\n      i.push(u);else {\n      var _t18 = cr(r, c);\n      null != _t18 && (i.push(u), o.set(u, _t18));\n    }\n  });\n  var u = new ge(i);\n  return new Gn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */\nfunction or(t, e, n, r, s, i) {\n  var o = t.lt(1 /* UserDataSource.Update */, e, n),\n    u = [fr(e, r, n)],\n    c = [s];\n  if (i.length % 2 != 0) throw new U(P, \"Function \".concat(e, \"() needs to be called with an even number of arguments that alternate between field names and values.\"));\n  for (var _t19 = 0; _t19 < i.length; _t19 += 2) u.push(fr(e, i[_t19])), c.push(i[_t19 + 1]);\n  var a = [],\n    h = _e.empty();\n  // We iterate in reverse order to pick the last value for a field if the\n  // user specified the field multiple times.\n  for (var _t20 = u.length - 1; _t20 >= 0; --_t20) if (!pr(a, u[_t20])) {\n    var _e14 = u[_t20];\n    var _n9 = c[_t20];\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    _n9 = getModularInstance(_n9);\n    var _r5 = o.ot(_e14);\n    if (_n9 instanceof Xn)\n      // Add it to the field mask, but don't add anything to updateData.\n      a.push(_e14);else {\n      var _t21 = cr(_n9, _r5);\n      null != _t21 && (a.push(_e14), h.set(_e14, _t21));\n    }\n  }\n  var f = new ge(a);\n  return new Gn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */\nfunction ur(t, e, n) {\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n  return cr(n, t.lt(r ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */, e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */\nfunction cr(t, e) {\n  if (hr(\n  // Unwrap the API type from the Compat SDK. This will return the API type\n  // from firestore-exp.\n  t = getModularInstance(t))) return lr(\"Unsupported field value:\", e, t), ar(t, e);\n  if (t instanceof Bn)\n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n    * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n    * context.fieldTransforms.\n    */\n    return function (t, e) {\n      // Sentinels are only supported with writes, and not within arrays.\n      if (!Kn(e.et)) throw e.ct(\"\".concat(t._methodName, \"() can only be used with update() and set()\"));\n      if (!e.path) throw e.ct(\"\".concat(t._methodName, \"() is not currently supported inside arrays\"));\n      var n = t._toFieldTransform(e);\n      n && e.fieldTransforms.push(n);\n    }\n    /**\n    * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n    *\n    * @returns The parsed value\n    */(t, e), null;\n  if (void 0 === t && e.ignoreUndefinedProperties)\n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n  if (\n  // If context.path is null we are inside an array and we don't support\n  // field mask paths more granular than the top-level array.\n  e.path && e.fieldMask.push(e.path), t instanceof Array) {\n    // TODO(b/34871131): Include the path containing the array in the error\n    // message.\n    // In the case of IN queries, the parsed data is an array (representing\n    // the set of values to be included for the IN query) that may directly\n    // contain additional arrays (each representing an individual field\n    // value), so we disable this validation.\n    if (e.settings.st && 4 /* UserDataSource.ArrayArgument */ !== e.et) throw e.ct(\"Nested arrays are not supported\");\n    return function (t, e) {\n      var n = [];\n      var r = 0;\n      var _iterator10 = _createForOfIteratorHelper(t),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var s = _step10.value;\n          var _t22 = cr(s, e.ut(r));\n          null == _t22 && (\n          // Just include nulls in the array for fields being replaced with a\n          // sentinel.\n          _t22 = {\n            nullValue: \"NULL_VALUE\"\n          }), n.push(_t22), r++;\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n      return {\n        arrayValue: {\n          values: n\n        }\n      };\n    }(t, e);\n  }\n  return function (t, e) {\n    if (null === (t = getModularInstance(t))) return {\n      nullValue: \"NULL_VALUE\"\n    };\n    if (\"number\" == typeof t) return Ne(e.serializer, t);\n    if (\"boolean\" == typeof t) return {\n      booleanValue: t\n    };\n    if (\"string\" == typeof t) return {\n      stringValue: t\n    };\n    if (t instanceof Date) {\n      var n = St.fromDate(t);\n      return {\n        timestampValue: Ke(e.serializer, n)\n      };\n    }\n    if (t instanceof St) {\n      // Firestore backend truncates precision down to microseconds. To ensure\n      // offline mode works the same with regards to truncation, perform the\n      // truncation immediately without waiting for the backend to do that.\n      var _n10 = new St(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n      return {\n        timestampValue: Ke(e.serializer, _n10)\n      };\n    }\n    if (t instanceof zn) return {\n      geoPointValue: {\n        latitude: t.latitude,\n        longitude: t.longitude\n      }\n    };\n    if (t instanceof Ln) return {\n      bytesValue: Ye(e.serializer, t._byteString)\n    };\n    if (t instanceof Fn) {\n      var _n11 = e.databaseId,\n        r = t.firestore._databaseId;\n      if (!r.isEqual(_n11)) throw e.ct(\"Document reference is for database \".concat(r.projectId, \"/\").concat(r.database, \" but should be for database \").concat(_n11.projectId, \"/\").concat(_n11.database));\n      return {\n        referenceValue: Je(t.firestore._databaseId || e.databaseId, t._key.path)\n      };\n    }\n    throw e.ct(\"Unsupported field value: \".concat(ut(t)));\n  }\n  /**\n  * Checks whether an object looks like a JSON object that should be converted\n  * into a struct. Normal class/prototype instances are considered to look like\n  * JSON objects since they should be converted to a struct value. Arrays, Dates,\n  * GeoPoints, etc. are not considered to look like JSON objects since they map\n  * to specific FieldValue types other than ObjectValue.\n  */(t, e);\n}\nfunction ar(t, e) {\n  var n = {};\n  return !function (t) {\n    for (var _e15 in t) if (Object.prototype.hasOwnProperty.call(t, _e15)) return !1;\n    return !0;\n  }(t) ? Pt(t, function (t, r) {\n    var s = cr(r, e.rt(t));\n    null != s && (n[t] = s);\n  }) :\n  // If we encounter an empty object, we explicitly add it to the update\n  // mask to ensure that the server creates a map entry.\n  e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n    mapValue: {\n      fields: n\n    }\n  };\n}\nfunction hr(t) {\n  return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof St || t instanceof zn || t instanceof Ln || t instanceof Fn || t instanceof Bn);\n}\nfunction lr(t, e, n) {\n  if (!hr(n) || !function (t) {\n    return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n  }(n)) {\n    var r = ut(n);\n    throw \"an object\" === r ? e.ct(t + \" a custom object\") : e.ct(t + \" \" + r);\n  }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */\nfunction fr(t, e, n) {\n  if ((\n  // If required, replace the FieldPath Compat class with with the firestore-exp\n  // FieldPath.\n  e = getModularInstance(e)) instanceof Un) return e._internalPath;\n  if (\"string\" == typeof e) return wr(t, e);\n  throw mr(\"Field path arguments must be of type string or \", t, /* hasConverter= */!1, /* path= */void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */\nvar dr = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */\nfunction wr(t, e, n) {\n  if (e.search(dr) >= 0) throw mr(\"Invalid field path (\".concat(e, \"). Paths must not contain '~', '*', '/', '[', or ']'\"), t, /* hasConverter= */!1, /* path= */void 0, n);\n  try {\n    return _construct(Un, _toConsumableArray(e.split(\".\")))._internalPath;\n  } catch (r) {\n    throw mr(\"Invalid field path (\".concat(e, \"). Paths must not be empty, begin with '.', end with '.', or contain '..'\"), t, /* hasConverter= */!1, /* path= */void 0, n);\n  }\n}\nfunction mr(t, e, n, r, s) {\n  var i = r && !r.isEmpty(),\n    o = void 0 !== s;\n  var u = \"Function \".concat(e, \"() called with invalid data\");\n  n && (u += \" (via `toFirestore()`)\"), u += \". \";\n  var c = \"\";\n  return (i || o) && (c += \" (found\", i && (c += \" in field \".concat(r)), o && (c += \" in document \".concat(s)), c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */\nfunction pr(t, e) {\n  return t.some(function (t) {\n    return t.isEqual(e);\n  });\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */\nvar yr = /*#__PURE__*/function () {\n  // Note: This class is stripped down version of the DocumentSnapshot in\n  // the legacy SDK. The changes are:\n  // - No support for SnapshotMetadata.\n  // - No support for SnapshotOptions.\n  /** @hideconstructor protected */\n  function yr(t, e, n, r, s) {\n    _classCallCheck(this, yr);\n    this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, this._converter = s;\n  }\n  /** Property of the `DocumentSnapshot` that provides the document's ID. */\n  _createClass(yr, [{\n    key: \"id\",\n    get: function get() {\n      return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */\n  }, {\n    key: \"ref\",\n    get: function get() {\n      return new Fn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */\n  }, {\n    key: \"data\",\n    value: function data() {\n      if (this._document) {\n        if (this._converter) {\n          // We only want to use the converter and create a new DocumentSnapshot\n          // if a converter has been provided.\n          var t = new gr(this._firestore, this._userDataWriter, this._key, this._document, /* converter= */null);\n          return this._converter.fromFirestore(t);\n        }\n        return this._userDataWriter.convertValue(this._document.data.value);\n      }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      if (this._document) {\n        var e = this._document.data.field(br(\"DocumentSnapshot.get\", t));\n        if (null !== e) return this._userDataWriter.convertValue(e);\n      }\n    }\n  }]);\n  return yr;\n}();\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */\nvar gr = /*#__PURE__*/function (_yr) {\n  _inherits(gr, _yr);\n  var _super30 = _createSuper(gr);\n  function gr() {\n    _classCallCheck(this, gr);\n    return _super30.apply(this, arguments);\n  }\n  _createClass(gr, [{\n    key: \"data\",\n    value:\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    function data() {\n      return _get(_getPrototypeOf(gr.prototype), \"data\", this).call(this);\n    }\n  }]);\n  return gr;\n}(yr);\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */\nvar _r = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function _r(t, e) {\n    _classCallCheck(this, _r);\n    this._docs = e, this.query = t;\n  }\n  /** An array of all the documents in the `QuerySnapshot`. */\n  _createClass(_r, [{\n    key: \"docs\",\n    get: function get() {\n      return _toConsumableArray(this._docs);\n    }\n    /** The number of documents in the `QuerySnapshot`. */\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */\n  }, {\n    key: \"empty\",\n    get: function get() {\n      return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */\n  }, {\n    key: \"forEach\",\n    value: function forEach(t, e) {\n      this._docs.forEach(t, e);\n    }\n  }]);\n  return _r;\n}();\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */\nfunction vr(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof yr && e instanceof yr ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof _r && e instanceof _r && Mn(t.query, e.query) && Tt(t.docs, e.docs, vr);\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */\nfunction br(t, e) {\n  return \"string\" == typeof e ? wr(t, e) : e instanceof Un ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nvar Er = /*#__PURE__*/_createClass(function Er() {\n  _classCallCheck(this, Er);\n});\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * (endBefore:1)}, {@link (endAt:1)}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link (query:1)} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nvar Ar = /*#__PURE__*/function (_Er) {\n  _inherits(Ar, _Er);\n  var _super31 = _createSuper(Ar);\n  function Ar() {\n    _classCallCheck(this, Ar);\n    return _super31.apply(this, arguments);\n  }\n  return _createClass(Ar);\n}(Er);\nfunction Ir(t, e) {\n  var r = [];\n  for (var _len8 = arguments.length, n = new Array(_len8 > 2 ? _len8 - 2 : 0), _key8 = 2; _key8 < _len8; _key8++) {\n    n[_key8 - 2] = arguments[_key8];\n  }\n  e instanceof Er && r.push(e), r = r.concat(n), function (t) {\n    var e = t.filter(function (t) {\n        return t instanceof Pr;\n      }).length,\n      n = t.filter(function (t) {\n        return t instanceof Tr;\n      }).length;\n    if (e > 1 || e > 0 && n > 0) throw new U(P, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  /**\n  * Converts Firestore's internal types to the JavaScript types that we expose\n  * to the user.\n  *\n  * @internal\n  */(r);\n  var _iterator11 = _createForOfIteratorHelper(r),\n    _step11;\n  try {\n    for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n      var _e16 = _step11.value;\n      t = _e16._apply(t);\n    }\n  } catch (err) {\n    _iterator11.e(err);\n  } finally {\n    _iterator11.f();\n  }\n  return t;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link (query:1)} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */\nvar Tr = /*#__PURE__*/function (_Ar) {\n  _inherits(Tr, _Ar);\n  var _super32 = _createSuper(Tr);\n  /**\n   * @internal\n   */\n  function Tr(t, e, n) {\n    var _this32;\n    _classCallCheck(this, Tr);\n    _this32 = _super32.call(this), _this32._field = t, _this32._op = e, _this32._value = n, /** The type of this query constraint */\n    _this32.type = \"where\";\n    return _this32;\n  }\n  _createClass(Tr, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = this._parse(t);\n      return zr(t._query, e), new xn(t.firestore, t.converter, $e(t._query, e));\n    }\n  }, {\n    key: \"_parse\",\n    value: function _parse(t) {\n      var e = Zn(t.firestore),\n        n = function (t, e, n, r, s, i, o) {\n          var u;\n          if (s.isKeyField()) {\n            if (\"array-contains\" /* Operator.ARRAY_CONTAINS */ === i || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === i) throw new U(P, \"Invalid Query. You can't perform '\".concat(i, \"' queries on documentId().\"));\n            if (\"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i) {\n              Br(o, i);\n              var _e17 = [];\n              var _iterator12 = _createForOfIteratorHelper(o),\n                _step12;\n              try {\n                for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                  var _n12 = _step12.value;\n                  _e17.push(jr(r, t, _n12));\n                }\n              } catch (err) {\n                _iterator12.e(err);\n              } finally {\n                _iterator12.f();\n              }\n              u = {\n                arrayValue: {\n                  values: _e17\n                }\n              };\n            } else u = jr(r, t, o);\n          } else \"in\" /* Operator.IN */ !== i && \"not-in\" /* Operator.NOT_IN */ !== i && \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ !== i || Br(o, i), u = ur(n, e, o, /* allowArrays= */\"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i);\n          return Xt.create(s, i, u);\n        }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n      return n;\n    }\n  }], [{\n    key: \"_create\",\n    value: function _create(t, e, n) {\n      return new Tr(t, e, n);\n    }\n  }]);\n  return Tr;\n}(Ar);\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */\nfunction Rr(t, e, n) {\n  var r = e,\n    s = br(\"where\", t);\n  return Tr._create(s, r, n);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n */\nvar Pr = /*#__PURE__*/function (_Er2) {\n  _inherits(Pr, _Er2);\n  var _super33 = _createSuper(Pr);\n  /**\n   * @internal\n   */\n  function Pr( /** The type of this query constraint */\n  t, e) {\n    var _this33;\n    _classCallCheck(this, Pr);\n    _this33 = _super33.call(this), _this33.type = t, _this33._queryConstraints = e;\n    return _this33;\n  }\n  _createClass(Pr, [{\n    key: \"_parse\",\n    value: function _parse(t) {\n      var e = this._queryConstraints.map(function (e) {\n        return e._parse(t);\n      }).filter(function (t) {\n        return t.getFilters().length > 0;\n      });\n      return 1 === e.length ? e[0] : te.create(e, this._getOperator());\n    }\n  }, {\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = this._parse(t);\n      return 0 === e.getFilters().length ? t : (function (t, e) {\n        var n = t;\n        var r = e.getFlattenedFilters();\n        var _iterator13 = _createForOfIteratorHelper(r),\n          _step13;\n        try {\n          for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n            var _t23 = _step13.value;\n            zr(n, _t23), n = $e(n, _t23);\n          }\n        } catch (err) {\n          _iterator13.e(err);\n        } finally {\n          _iterator13.f();\n        }\n      }\n      // Checks if any of the provided filter operators are included in the given list of filters and\n      // returns the first one that is, or null if none are.\n      (t._query, e), new xn(t.firestore, t.converter, $e(t._query, e)));\n    }\n  }, {\n    key: \"_getQueryConstraints\",\n    value: function _getQueryConstraints() {\n      return this._queryConstraints;\n    }\n  }, {\n    key: \"_getOperator\",\n    value: function _getOperator() {\n      return \"and\" === this.type ? \"and\" /* CompositeOperator.AND */ : \"or\" /* CompositeOperator.OR */;\n    }\n  }], [{\n    key: \"_create\",\n    value: function _create(t, e) {\n      return new Pr(t, e);\n    }\n  }]);\n  return Pr;\n}(Er);\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a disjunction of\n * the given filter constraints. A disjunction filter includes a document if it\n * satisfies any of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a disjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */\nfunction Vr() {\n  for (var _len9 = arguments.length, t = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n    t[_key9] = arguments[_key9];\n  }\n  // Only support QueryFilterConstraints\n  return t.forEach(function (t) {\n    return Wr(\"or\", t);\n  }), Pr._create(\"or\" /* CompositeOperator.OR */, t);\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a conjunction of\n * the given filter constraints. A conjunction filter includes a document if it\n * satisfies all of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a conjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */\nfunction $r() {\n  for (var _len10 = arguments.length, t = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n    t[_key10] = arguments[_key10];\n  }\n  // Only support QueryFilterConstraints\n  return t.forEach(function (t) {\n    return Wr(\"and\", t);\n  }), Pr._create(\"and\" /* CompositeOperator.AND */, t);\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */\nvar Dr = /*#__PURE__*/function (_Ar2) {\n  _inherits(Dr, _Ar2);\n  var _super34 = _createSuper(Dr);\n  /**\n   * @internal\n   */\n  function Dr(t, e) {\n    var _this34;\n    _classCallCheck(this, Dr);\n    _this34 = _super34.call(this), _this34._field = t, _this34._direction = e, /** The type of this query constraint */\n    _this34.type = \"orderBy\";\n    return _this34;\n  }\n  _createClass(Dr, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = function (t, e, n) {\n        if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n        if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n        var r = new he(e, n);\n        return function (t, e) {\n          if (null === Ie(t)) {\n            // This is the first order by. It must match any inequality.\n            var _n13 = Te(t);\n            null !== _n13 && Qr(t, _n13, e.field);\n          }\n        }(t, r), r;\n      }\n      /**\n      * Create a `Bound` from a query and a document.\n      *\n      * Note that the `Bound` will always include the key of the document\n      * and so only the provided document will compare equal to the returned\n      * position.\n      *\n      * Will throw if the document does not contain all fields of the order by\n      * of the query or if any of the fields in the order by are an uncommitted\n      * server timestamp.\n      */(t._query, this._field, this._direction);\n      return new xn(t.firestore, t.converter, function (t, e) {\n        // TODO(dimond): validate that orderBy does not list the same key twice.\n        var n = t.explicitOrderBy.concat([e]);\n        return new Ae(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n      }(t._query, e));\n    }\n  }], [{\n    key: \"_create\",\n    value: function _create(t, e) {\n      return new Dr(t, e);\n    }\n  }]);\n  return Dr;\n}(Ar);\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */\nfunction Nr(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n  var n = e,\n    r = br(\"orderBy\", t);\n  return Dr._create(r, n);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */\nvar Fr = /*#__PURE__*/function (_Ar3) {\n  _inherits(Fr, _Ar3);\n  var _super35 = _createSuper(Fr);\n  /**\n   * @internal\n   */\n  function Fr( /** The type of this query constraint */\n  t, e, n) {\n    var _this35;\n    _classCallCheck(this, Fr);\n    _this35 = _super35.call(this), _this35.type = t, _this35._limit = e, _this35._limitType = n;\n    return _this35;\n  }\n  _createClass(Fr, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      return new xn(t.firestore, t.converter, function (t, e, n) {\n        return new Ae(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n      }(t._query, this._limit, this._limitType));\n    }\n  }], [{\n    key: \"_create\",\n    value: function _create(t, e, n) {\n      return new Fr(t, e, n);\n    }\n  }]);\n  return Fr;\n}(Ar);\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */\nfunction xr(t) {\n  return at(\"limit\", t), Fr._create(\"limit\", t, \"F\" /* LimitType.First */);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */\nfunction Sr(t) {\n  return at(\"limitToLast\", t), Fr._create(\"limitToLast\", t, \"L\" /* LimitType.Last */);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link (query:1)} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */\nvar qr = /*#__PURE__*/function (_Ar4) {\n  _inherits(qr, _Ar4);\n  var _super36 = _createSuper(qr);\n  /**\n   * @internal\n   */\n  function qr( /** The type of this query constraint */\n  t, e, n) {\n    var _this36;\n    _classCallCheck(this, qr);\n    _this36 = _super36.call(this), _this36.type = t, _this36._docOrFields = e, _this36._inclusive = n;\n    return _this36;\n  }\n  _createClass(qr, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = Ur(t, this.type, this._docOrFields, this._inclusive);\n      return new xn(t.firestore, t.converter, function (t, e) {\n        return new Ae(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n      }(t._query, e));\n    }\n  }], [{\n    key: \"_create\",\n    value: function _create(t, e, n) {\n      return new qr(t, e, n);\n    }\n  }]);\n  return qr;\n}(Ar);\nfunction Or() {\n  for (var _len11 = arguments.length, t = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n    t[_key11] = arguments[_key11];\n  }\n  return qr._create(\"startAt\", t, /*inclusive=*/!0);\n}\nfunction kr() {\n  for (var _len12 = arguments.length, t = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n    t[_key12] = arguments[_key12];\n  }\n  return qr._create(\"startAfter\", t, /*inclusive=*/!1);\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */\nvar Cr = /*#__PURE__*/function (_Ar5) {\n  _inherits(Cr, _Ar5);\n  var _super37 = _createSuper(Cr);\n  /**\n   * @internal\n   */\n  function Cr( /** The type of this query constraint */\n  t, e, n) {\n    var _this37;\n    _classCallCheck(this, Cr);\n    _this37 = _super37.call(this), _this37.type = t, _this37._docOrFields = e, _this37._inclusive = n;\n    return _this37;\n  }\n  _createClass(Cr, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = Ur(t, this.type, this._docOrFields, this._inclusive);\n      return new xn(t.firestore, t.converter, function (t, e) {\n        return new Ae(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n      }(t._query, e));\n    }\n  }], [{\n    key: \"_create\",\n    value: function _create(t, e, n) {\n      return new Cr(t, e, n);\n    }\n  }]);\n  return Cr;\n}(Ar);\nfunction Mr() {\n  for (var _len13 = arguments.length, t = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n    t[_key13] = arguments[_key13];\n  }\n  return Cr._create(\"endBefore\", t, /*inclusive=*/!1);\n}\nfunction Lr() {\n  for (var _len14 = arguments.length, t = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n    t[_key14] = arguments[_key14];\n  }\n  return Cr._create(\"endAt\", t, /*inclusive=*/!0);\n}\n\n/** Helper function to create a bound from a document or fields */\nfunction Ur(t, e, n, r) {\n  if (n[0] = getModularInstance(n[0]), n[0] instanceof yr) return function (t, e, n, r, s) {\n    if (!r) throw new U($, \"Can't use a DocumentSnapshot that doesn't exist for \".concat(n, \"().\"));\n    var i = [];\n    // Because people expect to continue/end a query at the exact document\n    // provided, we need to use the implicit sort order rather than the explicit\n    // sort order, because it's guaranteed to contain the document key. That way\n    // the position becomes unambiguous and the query continues/ends exactly at\n    // the provided document. Without the key (by using the explicit sort\n    // orders), multiple documents could match the position, yielding duplicate\n    // results.\n    var _iterator14 = _createForOfIteratorHelper(Pe(t)),\n      _step14;\n    try {\n      for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n        var _n14 = _step14.value;\n        if (_n14.field.isKeyField()) i.push(zt(e, r.key));else {\n          var _t24 = r.data.field(_n14.field);\n          if (qt(_t24)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + _n14.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n          if (null === _t24) {\n            var _t25 = _n14.field.canonicalString();\n            throw new U(P, \"Invalid query. You are trying to start or end a query using a document for which the field '\".concat(_t25, \"' (used as the orderBy) does not exist.\"));\n          }\n          i.push(_t24);\n        }\n      }\n    } catch (err) {\n      _iterator14.e(err);\n    } finally {\n      _iterator14.f();\n    }\n    return new Ht(i, s);\n  }\n  /**\n  * Converts a list of field values to a `Bound` for the given query.\n  */(t._query, t.firestore._databaseId, e, n[0]._document, r);\n  {\n    var s = Zn(t.firestore);\n    return function (t, e, n, r, s, i) {\n      // Use explicit order by's because it has to match the query the user made\n      var o = t.explicitOrderBy;\n      if (s.length > o.length) throw new U(P, \"Too many arguments provided to \".concat(r, \"(). The number of arguments must be less than or equal to the number of orderBy() clauses\"));\n      var u = [];\n      for (var _i3 = 0; _i3 < s.length; _i3++) {\n        var c = s[_i3];\n        if (o[_i3].field.isKeyField()) {\n          if (\"string\" != typeof c) throw new U(P, \"Invalid query. Expected a string for document ID in \".concat(r, \"(), but got a \").concat(typeof c));\n          if (!Re(t) && -1 !== c.indexOf(\"/\")) throw new U(P, \"Invalid query. When querying a collection and ordering by documentId(), the value passed to \".concat(r, \"() must be a plain document ID, but '\").concat(c, \"' contains a slash.\"));\n          var _n15 = t.path.child(tt.fromString(c));\n          if (!rt.isDocumentKey(_n15)) throw new U(P, \"Invalid query. When querying a collection group and ordering by documentId(), the value passed to \".concat(r, \"() must result in a valid document path, but '\").concat(_n15, \"' is not because it contains an odd number of segments.\"));\n          var _s3 = new rt(_n15);\n          u.push(zt(e, _s3));\n        } else {\n          var _t26 = ur(n, r, c);\n          u.push(_t26);\n        }\n      }\n      return new Ht(u, i);\n    }\n    /**\n    * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n    * appropriate errors if the value is anything other than a `DocumentReference`\n    * or `string`, or if the string is malformed.\n    */(t._query, t.firestore._databaseId, s, e, n, r);\n  }\n}\nfunction jr(t, e, n) {\n  if (\"string\" == typeof (n = getModularInstance(n))) {\n    if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n    if (!Re(e) && -1 !== n.indexOf(\"/\")) throw new U(P, \"Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '\".concat(n, \"' contains a '/' character.\"));\n    var r = e.path.child(tt.fromString(n));\n    if (!rt.isDocumentKey(r)) throw new U(P, \"Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '\".concat(r, \"' is not because it has an odd number of segments (\").concat(r.length, \").\"));\n    return zt(t, new rt(r));\n  }\n  if (n instanceof Fn) return zt(t, n._key);\n  throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: \".concat(ut(n), \".\"));\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */\nfunction Br(t, e) {\n  if (!Array.isArray(t) || 0 === t.length) throw new U(P, \"Invalid Query. A non-empty array is required for '\".concat(e.toString(), \"' filters.\"));\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * This is not a comprehensive check, and this function should be removed in the\n * long term. Validations should occur in the Firestore backend.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one inequality per query.\n * 2. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n */\nfunction zr(t, e) {\n  if (e.isInequality()) {\n    var _n16 = Te(t),\n      r = e.field;\n    if (null !== _n16 && !_n16.isEqual(r)) throw new U(P, \"Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '\".concat(_n16.toString(), \"' and '\").concat(r.toString(), \"'\"));\n    var s = Ie(t);\n    null !== s && Qr(t, r, s);\n  }\n  var n = function (t, e) {\n    var _iterator15 = _createForOfIteratorHelper(t),\n      _step15;\n    try {\n      for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n        var _n17 = _step15.value;\n        var _iterator16 = _createForOfIteratorHelper(_n17.getFlattenedFilters()),\n          _step16;\n        try {\n          for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n            var _t27 = _step16.value;\n            if (e.indexOf(_t27.op) >= 0) return _t27.op;\n          }\n        } catch (err) {\n          _iterator16.e(err);\n        } finally {\n          _iterator16.f();\n        }\n      }\n    } catch (err) {\n      _iterator15.e(err);\n    } finally {\n      _iterator15.f();\n    }\n    return null;\n  }(t.filters, function (t) {\n    switch (t) {\n      case \"!=\" /* Operator.NOT_EQUAL */:\n        return [\"!=\" /* Operator.NOT_EQUAL */, \"not-in\" /* Operator.NOT_IN */];\n\n      case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */:\n      case \"in\" /* Operator.IN */:\n        return [\"not-in\" /* Operator.NOT_IN */];\n\n      case \"not-in\" /* Operator.NOT_IN */:\n        return [\"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */, \"in\" /* Operator.IN */, \"not-in\" /* Operator.NOT_IN */, \"!=\" /* Operator.NOT_EQUAL */];\n\n      default:\n        return [];\n    }\n  }(e.op));\n  if (null !== n)\n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(P, \"Invalid query. You cannot use more than one '\".concat(e.op.toString(), \"' filter.\")) : new U(P, \"Invalid query. You cannot use '\".concat(e.op.toString(), \"' filters with '\").concat(n.toString(), \"' filters.\"));\n}\nfunction Qr(t, e, n) {\n  if (!n.isEqual(e)) throw new U(P, \"Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '\".concat(e.toString(), \"' and so you must also use '\").concat(e.toString(), \"' as your first argument to orderBy(), but your first orderBy() is on field '\").concat(n.toString(), \"' instead.\"));\n}\nfunction Wr(t, e) {\n  if (!(e instanceof Tr || e instanceof Pr)) throw new U(P, \"Function \".concat(t, \"() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.\"));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction Gr(t, e, n) {\n  var r;\n  // Cast to `any` in order to satisfy the union type constraint on\n  // toFirestore().\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, r;\n}\nvar Kr = /*#__PURE__*/function (_ref7) {\n  _inherits(Kr, _ref7);\n  var _super38 = _createSuper(Kr);\n  function Kr(t) {\n    var _this38;\n    _classCallCheck(this, Kr);\n    _this38 = _super38.call(this), _this38.firestore = t;\n    return _this38;\n  }\n  _createClass(Kr, [{\n    key: \"convertBytes\",\n    value: function convertBytes(t) {\n      return new Ln(t);\n    }\n  }, {\n    key: \"convertReference\",\n    value: function convertReference(t) {\n      var e = this.convertDocumentKey(t, this.firestore._databaseId);\n      return new Fn(this.firestore, /* converter= */null, e);\n    }\n  }]);\n  return Kr;\n}( /*#__PURE__*/function () {\n  function _class4() {\n    _classCallCheck(this, _class4);\n  }\n  _createClass(_class4, [{\n    key: \"convertValue\",\n    value: function convertValue(t) {\n      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"none\";\n      switch (Mt(t)) {\n        case 0 /* TypeOrder.NullValue */:\n          return null;\n        case 1 /* TypeOrder.BooleanValue */:\n          return t.booleanValue;\n        case 2 /* TypeOrder.NumberValue */:\n          return Ft(t.integerValue || t.doubleValue);\n        case 3 /* TypeOrder.TimestampValue */:\n          return this.convertTimestamp(t.timestampValue);\n        case 4 /* TypeOrder.ServerTimestampValue */:\n          return this.convertServerTimestamp(t, e);\n        case 5 /* TypeOrder.StringValue */:\n          return t.stringValue;\n        case 6 /* TypeOrder.BlobValue */:\n          return this.convertBytes(xt(t.bytesValue));\n        case 7 /* TypeOrder.RefValue */:\n          return this.convertReference(t.referenceValue);\n        case 8 /* TypeOrder.GeoPointValue */:\n          return this.convertGeoPoint(t.geoPointValue);\n        case 9 /* TypeOrder.ArrayValue */:\n          return this.convertArray(t.arrayValue, e);\n        case 10 /* TypeOrder.ObjectValue */:\n          return this.convertObject(t.mapValue, e);\n        default:\n          throw b();\n      }\n    }\n  }, {\n    key: \"convertObject\",\n    value: function convertObject(t, e) {\n      var _this39 = this;\n      var n = {};\n      return Pt(t.fields, function (t, r) {\n        n[t] = _this39.convertValue(r, e);\n      }), n;\n    }\n  }, {\n    key: \"convertGeoPoint\",\n    value: function convertGeoPoint(t) {\n      return new zn(Ft(t.latitude), Ft(t.longitude));\n    }\n  }, {\n    key: \"convertArray\",\n    value: function convertArray(t, e) {\n      var _this40 = this;\n      return (t.values || []).map(function (t) {\n        return _this40.convertValue(t, e);\n      });\n    }\n  }, {\n    key: \"convertServerTimestamp\",\n    value: function convertServerTimestamp(t, e) {\n      switch (e) {\n        case \"previous\":\n          var n = Ot(t);\n          return null == n ? null : this.convertValue(n, e);\n        case \"estimate\":\n          return this.convertTimestamp(kt(t));\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"convertTimestamp\",\n    value: function convertTimestamp(t) {\n      var e = Nt(t);\n      return new St(e.seconds, e.nanos);\n    }\n  }, {\n    key: \"convertDocumentKey\",\n    value: function convertDocumentKey(t, e) {\n      var n = tt.fromString(t);\n      E(wn(n));\n      var r = new J(n.get(1), n.get(3)),\n        s = new rt(n.popFirst(5));\n      return r.isEqual(e) ||\n      // TODO(b/64130202): Somehow support foreign references.\n      g(\"Document \".concat(s, \" contains a document reference within a different database (\").concat(r.projectId, \"/\").concat(r.database, \") which is not supported. It will be treated as a reference in the current database (\").concat(e.projectId, \"/\").concat(e.database, \") instead.\")), s;\n    }\n  }]);\n  return _class4;\n}());\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */\nfunction Yr(t) {\n  var e = An((t = ct(t, Fn)).firestore),\n    n = new Kr(t.firestore);\n  return _n(e, [t._key]).then(function (e) {\n    E(1 === e.length);\n    var r = e[0];\n    return new yr(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n  });\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */\nfunction Hr(t) {\n  !function (t) {\n    if (\"L\" /* LimitType.Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n  }((t = ct(t, xn))._query);\n  var e = An(t.firestore),\n    n = new Kr(t.firestore);\n  return vn(e, t._query).then(function (e) {\n    var r = e.map(function (e) {\n      return new gr(t.firestore, n, e.key, e, t.converter);\n    });\n    return \"L\" /* LimitType.Last */ === t._query.limitType &&\n    // Limit to last queries reverse the orderBy constraint that was\n    // specified by the user. As such, we need to reverse the order of the\n    // results to return the documents in the expected order.\n    r.reverse(), new _r(t, r);\n  });\n}\nfunction Zr(t, e, n) {\n  var r = Gr((t = ct(t, Fn)).converter, e, n),\n    s = Jn(Zn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n  return gn(An(t.firestore), [s.toMutation(t._key, Ce.none())]);\n}\nfunction Jr(t, e, n) {\n  var s = Zn((t = ct(t, Fn)).firestore);\n  // For Compat types, we have to \"extract\" the underlying types before\n  // performing validation.\n  var i;\n  for (var _len15 = arguments.length, r = new Array(_len15 > 3 ? _len15 - 3 : 0), _key15 = 3; _key15 < _len15; _key15++) {\n    r[_key15 - 3] = arguments[_key15];\n  }\n  i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof Un ? or(s, \"updateDoc\", t._key, e, n, r) : ir(s, \"updateDoc\", t._key, e);\n  return gn(An(t.firestore), [i.toMutation(t._key, Ce.exists(!0))]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */\nfunction Xr(t) {\n  return gn(An((t = ct(t, Fn)).firestore), [new je(t._key, Ce.none())]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */\nfunction ts(t, e) {\n  var n = kn(t = ct(t, Sn)),\n    r = Gr(t.converter, e),\n    s = Jn(Zn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n  return gn(An(t.firestore), [s.toMutation(n._key, Ce.exists(!1))]).then(function () {\n    return n;\n  });\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */\nfunction es(t) {\n  return ns(t, {\n    count: is()\n  });\n}\n\n/**\n * Calculates the specified aggregations over the documents in the result\n * set of the given query, without actually downloading the documents.\n *\n * Using this function to perform aggregations is efficient because only the\n * final aggregation values, not the documents' data, is downloaded. This\n * function can even perform aggregations of the documents if the result set\n * would be prohibitively large to download entirely (e.g. thousands of documents).\n *\n * @param query The query whose result set to aggregate over.\n * @param aggregateSpec An `AggregateSpec` object that specifies the aggregates\n * to perform over the result set. The AggregateSpec specifies aliases for each\n * aggregate, which can be used to retrieve the aggregate result.\n * @example\n * ```typescript\n * const aggregateSnapshot = await getAggregate(query, {\n *   countOfDocs: count(),\n *   totalHours: sum('hours'),\n *   averageScore: average('score')\n * });\n *\n * const countOfDocs: number = aggregateSnapshot.data().countOfDocs;\n * const totalHours: number = aggregateSnapshot.data().totalHours;\n * const averageScore: number | null = aggregateSnapshot.data().averageScore;\n * ```\n * @internal TODO (sum/avg) remove when public\n */\nfunction ns(t, e) {\n  var n = ct(t.firestore, Tn),\n    r = An(n),\n    s = function (t, e) {\n      var n = [];\n      for (var _r6 in t) Object.prototype.hasOwnProperty.call(t, _r6) && n.push(e(t[_r6], _r6, t));\n      return n;\n    }(e, function (t, e) {\n      return new bt(new vt(e), t._aggregateType, t._internalFieldPath);\n    });\n  // Run the aggregation and convert the results\n  return bn(r, t._query, s).then(function (e) {\n    return function (t, e, n) {\n      var r = new Kr(t);\n      return new Nn(e, r, n);\n    }\n    /**\n    * Create an AggregateField object that can be used to compute the sum of\n    * a specified field over a range of documents in the result set of a query.\n    * @param field Specifies the field to sum across the result set.\n    * @internal TODO (sum/avg) remove when public\n    */(n, t, e);\n  });\n}\nfunction rs(t) {\n  return new Dn(\"sum\", fr(\"sum\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the average of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to average across the result set.\n * @internal TODO (sum/avg) remove when public\n */\nfunction ss(t) {\n  return new Dn(\"avg\", fr(\"average\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the count of\n * documents in the result set of a query.\n * @internal TODO (sum/avg) remove when public\n */\nfunction is() {\n  return new Dn(\"count\");\n}\n\n/**\n * Compares two 'AggregateField` instances for equality.\n *\n * @param left Compare this AggregateField to the `right`.\n * @param right Compare this AggregateField to the `left`.\n * @internal TODO (sum/avg) remove when public\n */\nfunction os(t, e) {\n  var n, r;\n  return t instanceof Dn && e instanceof Dn && t._aggregateType === e._aggregateType && (null === (n = t._internalFieldPath) || void 0 === n ? void 0 : n.canonicalString()) === (null === (r = e._internalFieldPath) || void 0 === r ? void 0 : r.canonicalString());\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */\nfunction us(t, e) {\n  return Mn(t.query, e.query) && deepEqual(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */\nfunction cs() {\n  return new Xn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */\nfunction as() {\n  return new er(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */\nfunction hs() {\n  for (var _len16 = arguments.length, t = new Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {\n    t[_key16] = arguments[_key16];\n  }\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new nr(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\nfunction ls() {\n  for (var _len17 = arguments.length, t = new Array(_len17), _key17 = 0; _key17 < _len17; _key17++) {\n    t[_key17] = arguments[_key17];\n  }\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new rr(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\nfunction fs(t) {\n  return new sr(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */\nvar ds = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function ds(t, e) {\n    _classCallCheck(this, ds);\n    this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, this._dataReader = Zn(t);\n  }\n  _createClass(ds, [{\n    key: \"set\",\n    value: function set(t, e, n) {\n      this._verifyNotCommitted();\n      var r = ws(t, this._firestore),\n        s = Gr(r.converter, e, n),\n        i = Jn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n      return this._mutations.push(i.toMutation(r._key, Ce.none())), this;\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, e, n) {\n      this._verifyNotCommitted();\n      var s = ws(t, this._firestore);\n      // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n      var i;\n      for (var _len18 = arguments.length, r = new Array(_len18 > 3 ? _len18 - 3 : 0), _key18 = 3; _key18 < _len18; _key18++) {\n        r[_key18 - 3] = arguments[_key18];\n      }\n      return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof Un ? or(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : ir(this._dataReader, \"WriteBatch.update\", s._key, e), this._mutations.push(i.toMutation(s._key, Ce.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      this._verifyNotCommitted();\n      var e = ws(t, this._firestore);\n      return this._mutations = this._mutations.concat(new je(e._key, Ce.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */\n  }, {\n    key: \"commit\",\n    value: function commit() {\n      return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n  }, {\n    key: \"_verifyNotCommitted\",\n    value: function _verifyNotCommitted() {\n      if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n  }]);\n  return ds;\n}();\nfunction ws(t, e) {\n  if ((t = getModularInstance(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n  return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */\nfunction ms(t) {\n  var e = An(t = ct(t, Tn));\n  return new ds(t, function (t) {\n    return gn(e, t);\n  });\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */\nvar ps = /*#__PURE__*/function () {\n  function ps(t) {\n    _classCallCheck(this, ps);\n    this.datastore = t,\n    // The version of each document that was read during this transaction.\n    this.readVersions = new Map(), this.mutations = [], this.committed = !1,\n    /**\n     * A deferred usage error that occurred previously in this transaction that\n     * will cause the transaction to fail once it actually commits.\n     */\n    this.lastWriteError = null,\n    /**\n     * Set of documents that have been written in the transaction.\n     *\n     * When there's more than one write to the same key in a transaction, any\n     * writes after the first are handled differently.\n     */\n    this.writtenDocs = new Set();\n  }\n  _createClass(ps, [{\n    key: \"lookup\",\n    value: function () {\n      var _lookup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(t) {\n        var _this41 = this;\n        var e;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(this.ensureCommitNotCalled(), this.mutations.length > 0)) {\n                _context2.next = 2;\n                break;\n              }\n              throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n            case 2:\n              _context2.next = 4;\n              return _n(this.datastore, t);\n            case 4:\n              e = _context2.sent;\n              return _context2.abrupt(\"return\", (e.forEach(function (t) {\n                return _this41.recordVersion(t);\n              }), e));\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function lookup(_x14) {\n        return _lookup.apply(this, arguments);\n      }\n      return lookup;\n    }()\n  }, {\n    key: \"set\",\n    value: function set(t, e) {\n      this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, e) {\n      try {\n        this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n      } catch (t) {\n        this.lastWriteError = t;\n      }\n      this.writtenDocs.add(t.toString());\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      this.write(new je(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n  }, {\n    key: \"commit\",\n    value: function () {\n      var _commit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _this42 = this;\n        var t;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(this.ensureCommitNotCalled(), this.lastWriteError)) {\n                _context3.next = 2;\n                break;\n              }\n              throw this.lastWriteError;\n            case 2:\n              t = this.readVersions; // For each mutation, note that the doc was written.\n              this.mutations.forEach(function (e) {\n                t.delete(e.key.toString());\n              });\n              // For each document that was read but not written to, we want to perform\n              // a `verify` operation.\n              t.forEach(function (t, e) {\n                var n = rt.fromPath(e);\n                _this42.mutations.push(new Be(n, _this42.precondition(n)));\n              });\n              _context3.next = 7;\n              return gn(this.datastore, this.mutations);\n            case 7:\n              this.committed = !0;\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function commit() {\n        return _commit.apply(this, arguments);\n      }\n      return commit;\n    }()\n  }, {\n    key: \"recordVersion\",\n    value: function recordVersion(t) {\n      var e;\n      if (t.isFoundDocument()) e = t.version;else {\n        if (!t.isNoDocument()) throw b();\n        // Represent a deleted doc using SnapshotVersion.min().\n        e = fe.min();\n      }\n      var n = this.readVersions.get(t.key.toString());\n      if (n) {\n        if (!e.isEqual(n))\n          // This transaction will fail no matter what.\n          throw new U(q, \"Document version changed between two reads.\");\n      } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */\n  }, {\n    key: \"precondition\",\n    value: function precondition(t) {\n      var e = this.readVersions.get(t.toString());\n      return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(fe.min()) ? Ce.exists(!1) : Ce.updateTime(e) : Ce.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */\n  }, {\n    key: \"preconditionForUpdate\",\n    value: function preconditionForUpdate(t) {\n      var e = this.readVersions.get(t.toString());\n      // The first time a document is written, we want to take into account the\n      // read time and existence\n      if (!this.writtenDocs.has(t.toString()) && e) {\n        if (e.isEqual(fe.min()))\n          // The document doesn't exist, so fail the transaction.\n          // This has to be validated locally because you can't send a\n          // precondition that a document does not exist without changing the\n          // semantics of the backend write to be an insert. This is the reverse\n          // of what we want, since we want to assert that the document doesn't\n          // exist but then send the update and have it fail. Since we can't\n          // express that to the backend, we have to validate locally.\n          // Note: this can change once we can send separate verify writes in the\n          // transaction.\n          throw new U(P, \"Can't update a document that doesn't exist.\");\n        // Document exists, base precondition on document update time.\n        return Ce.updateTime(e);\n      }\n      // Document was not read, so we just use the preconditions for a blind\n      // update.\n      return Ce.exists(!0);\n    }\n  }, {\n    key: \"write\",\n    value: function write(t) {\n      this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n  }, {\n    key: \"ensureCommitNotCalled\",\n    value: function ensureCommitNotCalled() {}\n  }]);\n  return ps;\n}();\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ys = {\n  maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nvar gs = /*#__PURE__*/function () {\n  function gs(t, e, n, r, s) {\n    _classCallCheck(this, gs);\n    this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, this.deferred = s, this.wt = n.maxAttempts, this.yt = new pn(this.asyncQueue, \"transaction_retry\" /* TimerId.TransactionRetry */);\n  }\n  /** Runs the transaction and sets the result on deferred. */\n  _createClass(gs, [{\n    key: \"run\",\n    value: function run() {\n      this.wt -= 1, this.gt();\n    }\n  }, {\n    key: \"gt\",\n    value: function gt() {\n      var _this43 = this;\n      this.yt.Y( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var t, e;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              t = new ps(_this43.datastore), e = _this43._t(t);\n              e && e.then(function (e) {\n                _this43.asyncQueue.enqueueAndForget(function () {\n                  return t.commit().then(function () {\n                    _this43.deferred.resolve(e);\n                  }).catch(function (t) {\n                    _this43.vt(t);\n                  });\n                });\n              }).catch(function (t) {\n                _this43.vt(t);\n              });\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      })));\n    }\n  }, {\n    key: \"_t\",\n    value: function _t(t) {\n      try {\n        var e = this.updateFunction(t);\n        return !ft(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), null);\n      } catch (t) {\n        // Do not retry errors thrown by user provided updateFunction.\n        return this.deferred.reject(t), null;\n      }\n    }\n  }, {\n    key: \"vt\",\n    value: function vt(t) {\n      var _this44 = this;\n      this.wt > 0 && this.bt(t) ? (this.wt -= 1, this.asyncQueue.enqueueAndForget(function () {\n        return _this44.gt(), Promise.resolve();\n      })) : this.deferred.reject(t);\n    }\n  }, {\n    key: \"bt\",\n    value: function bt(t) {\n      if (\"FirebaseError\" === t.name) {\n        // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n        // non-matching document versions with ABORTED. These errors should be retried.\n        var e = t.code;\n        return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n        /**\n        * Determines whether an error code represents a permanent error when received\n        * in response to a non-write operation.\n        *\n        * See isPermanentWriteError for classifying write errors.\n        */\n        function (t) {\n          switch (t) {\n            default:\n              return b();\n            case T:\n            case _R:\n            case V:\n            case x:\n            case C:\n            case M:\n            // Unauthenticated means something went wrong with our token and we need\n            // to retry with new credentials which will happen automatically.\n            case F:\n              return !1;\n            case P:\n            case $:\n            case D:\n            case N:\n            case S:\n            // Aborted might be retried in some scenarios, but that is dependant on\n            // the context and should handled individually by the calling code.\n            // See https://cloud.google.com/apis/design/errors.\n            case q:\n            case O:\n            case k:\n            case L:\n              return !0;\n          }\n        }(e);\n      }\n      return !1;\n    }\n  }]);\n  return gs;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */\nfunction _s() {\n  // `document` is not always available, e.g. in ReactNative and WebWorkers.\n  // eslint-disable-next-line no-restricted-globals\n  return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */\nvar vs = /*#__PURE__*/function () {\n  function vs(t, e, n, r, s) {\n    _classCallCheck(this, vs);\n    this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, this.deferred = new j(), this.then = this.deferred.promise.then.bind(this.deferred.promise),\n    // It's normal for the deferred promise to be canceled (due to cancellation)\n    // and so we attach a dummy catch callback to avoid\n    // 'UnhandledPromiseRejectionWarning' log spam.\n    this.deferred.promise.catch(function (t) {});\n  }\n  /**\n   * Creates and returns a DelayedOperation that has been scheduled to be\n   * executed on the provided asyncQueue after the provided delayMs.\n   *\n   * @param asyncQueue - The queue to schedule the operation on.\n   * @param id - A Timer ID identifying the type of operation this is.\n   * @param delayMs - The delay (ms) before the operation should be scheduled.\n   * @param op - The operation to run.\n   * @param removalCallback - A callback to be called synchronously once the\n   *   operation is executed or canceled, notifying the AsyncQueue to remove it\n   *   from its delayedOperations list.\n   *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n   *   the DelayedOperation class public.\n   */\n  _createClass(vs, [{\n    key: \"start\",\n    value:\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */\n    function start(t) {\n      var _this45 = this;\n      this.timerHandle = setTimeout(function () {\n        return _this45.handleDelayElapsed();\n      }, t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */\n  }, {\n    key: \"skipDelay\",\n    value: function skipDelay() {\n      return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */\n  }, {\n    key: \"cancel\",\n    value: function cancel(t) {\n      null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(T, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n  }, {\n    key: \"handleDelayElapsed\",\n    value: function handleDelayElapsed() {\n      var _this46 = this;\n      this.asyncQueue.enqueueAndForget(function () {\n        return null !== _this46.timerHandle ? (_this46.clearTimeout(), _this46.op().then(function (t) {\n          return _this46.deferred.resolve(t);\n        })) : Promise.resolve();\n      });\n    }\n  }, {\n    key: \"clearTimeout\",\n    value: function (_clearTimeout) {\n      function clearTimeout() {\n        return _clearTimeout.apply(this, arguments);\n      }\n      clearTimeout.toString = function () {\n        return _clearTimeout.toString();\n      };\n      return clearTimeout;\n    }(function () {\n      null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), this.timerHandle = null);\n    })\n  }], [{\n    key: \"createAndSchedule\",\n    value: function createAndSchedule(t, e, n, r, s) {\n      var i = Date.now() + n,\n        o = new vs(t, e, i, r, s);\n      return o.start(n), o;\n    }\n  }]);\n  return vs;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar bs = /*#__PURE__*/function () {\n  function bs() {\n    var _this47 = this;\n    _classCallCheck(this, bs);\n    // The last promise in the queue.\n    this.Et = Promise.resolve(),\n    // A list of retryable operations. Retryable operations are run in order and\n    // retried with backoff.\n    this.At = [],\n    // Is this AsyncQueue being shut down? Once it is set to true, it will not\n    // be changed again.\n    this.It = !1,\n    // Operations scheduled to be queued in the future. Operations are\n    // automatically removed after they are run or canceled.\n    this.Tt = [],\n    // visible for testing\n    this.Rt = null,\n    // Flag set while there's an outstanding AsyncQueue operation, used for\n    // assertion sanity-checks.\n    this.Pt = !1,\n    // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n    this.Vt = !1,\n    // List of TimerIds to fast-forward delays for.\n    this.$t = [],\n    // Backoff timer used to schedule retries for retryable operations\n    this.yt = new pn(this, \"async_queue_retry\" /* TimerId.AsyncQueueRetry */),\n    // Visibility handler that triggers an immediate retry of all retryable\n    // operations. Meant to speed up recovery when we regain file system access\n    // after page comes into foreground.\n    this.Dt = function () {\n      var t = _s();\n      t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), _this47.yt.Z();\n    };\n    var t = _s();\n    t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Dt);\n  }\n  _createClass(bs, [{\n    key: \"isShuttingDown\",\n    get: function get() {\n      return this.It;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */\n  }, {\n    key: \"enqueueAndForget\",\n    value: function enqueueAndForget(t) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.enqueue(t);\n    }\n  }, {\n    key: \"enqueueAndForgetEvenWhileRestricted\",\n    value: function enqueueAndForgetEvenWhileRestricted(t) {\n      this.Nt(),\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.Ft(t);\n    }\n  }, {\n    key: \"enterRestrictedMode\",\n    value: function enterRestrictedMode(t) {\n      if (!this.It) {\n        this.It = !0, this.Vt = t || !1;\n        var e = _s();\n        e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Dt);\n      }\n    }\n  }, {\n    key: \"enqueue\",\n    value: function enqueue(t) {\n      var _this48 = this;\n      if (this.Nt(), this.It)\n        // Return a Promise which never resolves.\n        return new Promise(function () {});\n      // Create a deferred Promise that we can return to the callee. This\n      // allows us to return a \"hanging Promise\" only to the callee and still\n      // advance the queue even when the operation is not run.\n      var e = new j();\n      return this.Ft(function () {\n        return _this48.It && _this48.Vt ? Promise.resolve() : (t().then(e.resolve, e.reject), e.promise);\n      }).then(function () {\n        return e.promise;\n      });\n    }\n  }, {\n    key: \"enqueueRetryable\",\n    value: function enqueueRetryable(t) {\n      var _this49 = this;\n      this.enqueueAndForget(function () {\n        return _this49.At.push(t), _this49.xt();\n      });\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */\n  }, {\n    key: \"xt\",\n    value: function () {\n      var _xt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _this50 = this;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(0 !== this.At.length)) {\n                _context5.next = 14;\n                break;\n              }\n              _context5.prev = 1;\n              _context5.next = 4;\n              return this.At[0]();\n            case 4:\n              this.At.shift();\n              this.yt.reset();\n              _context5.next = 13;\n              break;\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5[\"catch\"](1);\n              if (\n              /**\n              * @license\n              * Copyright 2017 Google LLC\n              *\n              * Licensed under the Apache License, Version 2.0 (the \"License\");\n              * you may not use this file except in compliance with the License.\n              * You may obtain a copy of the License at\n              *\n              *   http://www.apache.org/licenses/LICENSE-2.0\n              *\n              * Unless required by applicable law or agreed to in writing, software\n              * distributed under the License is distributed on an \"AS IS\" BASIS,\n              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n              * See the License for the specific language governing permissions and\n              * limitations under the License.\n              */\n              /** Verifies whether `e` is an IndexedDbTransactionError. */\n              function (t) {\n                // Use name equality, as instanceof checks on errors don't work with errors\n                // that wrap other errors.\n                return \"IndexedDbTransactionError\" === t.name;\n              }\n              /**\n              * @license\n              * Copyright 2020 Google LLC\n              *\n              * Licensed under the Apache License, Version 2.0 (the \"License\");\n              * you may not use this file except in compliance with the License.\n              * You may obtain a copy of the License at\n              *\n              *   http://www.apache.org/licenses/LICENSE-2.0\n              *\n              * Unless required by applicable law or agreed to in writing, software\n              * distributed under the License is distributed on an \"AS IS\" BASIS,\n              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n              * See the License for the specific language governing permissions and\n              * limitations under the License.\n              */(_context5.t0)) {\n                _context5.next = 12;\n                break;\n              }\n              throw _context5.t0;\n            case 12:\n              // Failure will be handled by AsyncQueue\n              y(\"AsyncQueue\", \"Operation failed with retryable error: \" + _context5.t0);\n            case 13:\n              this.At.length > 0 &&\n              // If there are additional operations, we re-schedule `retryNextOp()`.\n              // This is necessary to run retryable operations that failed during\n              // their initial attempt since we don't know whether they are already\n              // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n              // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n              // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n              // call scheduled here.\n              // Since `backoffAndRun()` cancels an existing backoff and schedules a\n              // new backoff on every call, there is only ever a single additional\n              // operation in the queue.\n              this.yt.Y(function () {\n                return _this50.xt();\n              });\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[1, 8]]);\n      }));\n      function xt() {\n        return _xt.apply(this, arguments);\n      }\n      return xt;\n    }()\n  }, {\n    key: \"Ft\",\n    value: function Ft(t) {\n      var _this51 = this;\n      var e = this.Et.then(function () {\n        return _this51.Pt = !0, t().catch(function (t) {\n          _this51.Rt = t, _this51.Pt = !1;\n          var e =\n          /**\n          * Chrome includes Error.message in Error.stack. Other browsers do not.\n          * This returns expected output of message + stack when available.\n          * @param error - Error or FirestoreError\n          */\n          function (t) {\n            var e = t.message || \"\";\n            t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n            return e;\n          }\n          /**\n          * @license\n          * Copyright 2020 Google LLC\n          *\n          * Licensed under the Apache License, Version 2.0 (the \"License\");\n          * you may not use this file except in compliance with the License.\n          * You may obtain a copy of the License at\n          *\n          *   http://www.apache.org/licenses/LICENSE-2.0\n          *\n          * Unless required by applicable law or agreed to in writing, software\n          * distributed under the License is distributed on an \"AS IS\" BASIS,\n          * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n          * See the License for the specific language governing permissions and\n          * limitations under the License.\n          */\n          // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n          // legacy SDK.\n          /**\n          * A reference to a transaction.\n          *\n          * The `Transaction` object passed to a transaction's `updateFunction` provides\n          * the methods to read and write data within the transaction context. See\n          * {@link runTransaction}.\n          */(t);\n          // Re-throw the error so that this.tail becomes a rejected Promise and\n          // all further attempts to chain (via .then) will just short-circuit\n          // and return the rejected Promise.\n          throw g(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        }).then(function (t) {\n          return _this51.Pt = !1, t;\n        });\n      });\n      return this.Et = e, e;\n    }\n  }, {\n    key: \"enqueueAfterDelay\",\n    value: function enqueueAfterDelay(t, e, n) {\n      var _this52 = this;\n      this.Nt(),\n      // Fast-forward delays for timerIds that have been overriden.\n      this.$t.indexOf(t) > -1 && (e = 0);\n      var r = vs.createAndSchedule(this, t, e, n, function (t) {\n        return _this52.St(t);\n      });\n      return this.Tt.push(r), r;\n    }\n  }, {\n    key: \"Nt\",\n    value: function Nt() {\n      this.Rt && b();\n    }\n  }, {\n    key: \"verifyOperationInProgress\",\n    value: function verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */\n  }, {\n    key: \"qt\",\n    value: function () {\n      var _qt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var t;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              t = this.Et;\n              _context6.next = 3;\n              return t;\n            case 3:\n              if (t !== this.Et) {\n                _context6.next = 0;\n                break;\n              }\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function qt() {\n        return _qt.apply(this, arguments);\n      }\n      return qt;\n    }()\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */\n  }, {\n    key: \"Ot\",\n    value: function Ot(t) {\n      var _iterator17 = _createForOfIteratorHelper(this.Tt),\n        _step17;\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          var e = _step17.value;\n          if (e.timerId === t) return !0;\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n      return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */\n  }, {\n    key: \"kt\",\n    value: function kt(t) {\n      var _this53 = this;\n      // Note that draining may generate more delayed ops, so we do that first.\n      return this.qt().then(function () {\n        // Run ops in the same order they'd run if they ran naturally.\n        _this53.Tt.sort(function (t, e) {\n          return t.targetTimeMs - e.targetTimeMs;\n        });\n        var _iterator18 = _createForOfIteratorHelper(_this53.Tt),\n          _step18;\n        try {\n          for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n            var e = _step18.value;\n            if (e.skipDelay(), \"all\" /* TimerId.All */ !== t && e.timerId === t) break;\n          }\n        } catch (err) {\n          _iterator18.e(err);\n        } finally {\n          _iterator18.f();\n        }\n        return _this53.qt();\n      });\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */\n  }, {\n    key: \"Ct\",\n    value: function Ct(t) {\n      this.$t.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */\n  }, {\n    key: \"St\",\n    value: function St(t) {\n      // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n      var e = this.Tt.indexOf(t);\n      this.Tt.splice(e, 1);\n    }\n  }]);\n  return bs;\n}();\nvar Es = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function Es(t, e) {\n    _classCallCheck(this, Es);\n    this._firestore = t, this._transaction = e, this._dataReader = Zn(t);\n  }\n  /**\n   * Reads the document referenced by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be read.\n   * @returns A `DocumentSnapshot` with the read data.\n   */\n  _createClass(Es, [{\n    key: \"get\",\n    value: function get(t) {\n      var _this54 = this;\n      var e = ws(t, this._firestore),\n        n = new Kr(this._firestore);\n      return this._transaction.lookup([e._key]).then(function (t) {\n        if (!t || 1 !== t.length) return b();\n        var r = t[0];\n        if (r.isFoundDocument()) return new yr(_this54._firestore, n, r.key, r, e.converter);\n        if (r.isNoDocument()) return new yr(_this54._firestore, n, e._key, null, e.converter);\n        throw b();\n      });\n    }\n  }, {\n    key: \"set\",\n    value: function set(t, e, n) {\n      var r = ws(t, this._firestore),\n        s = Gr(r.converter, e, n),\n        i = Jn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n      return this._transaction.set(r._key, i), this;\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, e, n) {\n      var s = ws(t, this._firestore);\n      // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n      var i;\n      for (var _len19 = arguments.length, r = new Array(_len19 > 3 ? _len19 - 3 : 0), _key19 = 3; _key19 < _len19; _key19++) {\n        r[_key19 - 3] = arguments[_key19];\n      }\n      return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof Un ? or(this._dataReader, \"Transaction.update\", s._key, e, n, r) : ir(this._dataReader, \"Transaction.update\", s._key, e), this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      var e = ws(t, this._firestore);\n      return this._transaction.delete(e._key), this;\n    }\n  }]);\n  return Es;\n}();\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */\nfunction As(t, e, n) {\n  var r = An(t = ct(t, Tn)),\n    s = Object.assign(Object.assign({}, ys), n);\n  !function (t) {\n    if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n  }(s);\n  var i = new j();\n  return new gs(new bs(), r, s, function (n) {\n    return e(new Es(t, n));\n  }, i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */\n!function (t) {\n  w = t;\n}(\"\".concat(SDK_VERSION, \"_lite\")), _registerComponent(new Component(\"firestore/lite\", function (t, _ref9) {\n  var e = _ref9.instanceIdentifier,\n    n = _ref9.options;\n  var r = t.getProvider(\"app\").getImmediate(),\n    s = new Tn(new W(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function (t, e) {\n      if (!Object.prototype.hasOwnProperty.apply(t.options, [\"projectId\"])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n      return new J(t.options.projectId, e);\n    }\n    /**\n    * @license\n    * Copyright 2017 Google LLC\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *   http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */(r, e), r);\n  return n && s._setSettings(n), s;\n}, \"PUBLIC\").setMultipleInstances(!0)),\n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nregisterVersion(\"firestore-lite\", \"3.10.0\", \"\"), registerVersion(\"firestore-lite\", \"3.10.0\", \"esm2017\");\nexport { Dn as AggregateField, Nn as AggregateQuerySnapshot, Ln as Bytes, Sn as CollectionReference, Fn as DocumentReference, yr as DocumentSnapshot, Un as FieldPath, Bn as FieldValue, Tn as Firestore, U as FirestoreError, zn as GeoPoint, xn as Query, Pr as QueryCompositeFilterConstraint, Ar as QueryConstraint, gr as QueryDocumentSnapshot, Cr as QueryEndAtConstraint, Tr as QueryFieldFilterConstraint, Fr as QueryLimitConstraint, Dr as QueryOrderByConstraint, _r as QuerySnapshot, qr as QueryStartAtConstraint, St as Timestamp, Es as Transaction, ds as WriteBatch, ts as addDoc, os as aggregateFieldEqual, us as aggregateQuerySnapshotEqual, $r as and, ls as arrayRemove, hs as arrayUnion, ss as average, qn as collection, On as collectionGroup, Vn as connectFirestoreEmulator, is as count, Xr as deleteDoc, cs as deleteField, kn as doc, jn as documentId, Lr as endAt, Mr as endBefore, ns as getAggregate, es as getCount, Yr as getDoc, Hr as getDocs, Pn as getFirestore, fs as increment, Rn as initializeFirestore, xr as limit, Sr as limitToLast, Vr as or, Nr as orderBy, Ir as query, Mn as queryEqual, Cn as refEqual, As as runTransaction, as as serverTimestamp, Zr as setDoc, p as setLogLevel, vr as snapshotEqual, kr as startAfter, Or as startAt, rs as sum, $n as terminate, Jr as updateDoc, Rr as where, ms as writeBatch };","map":{"version":3,"names":["d","t","_classCallCheck","uid","_createClass","key","value","isAuthenticated","toKey","isEqual","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","w","m","Logger","p","setLogLevel","y","logLevel","LogLevel","DEBUG","_len","arguments","length","e","Array","_key","n","map","v","debug","apply","concat","_toConsumableArray","g","ERROR","_len2","_key2","error","_","WARN","_len3","_key3","warn","JSON","stringify","b","undefined","Error","E","A","I","T","R","P","V","$","D","N","F","x","S","q","O","k","C","M","L","U","_FirebaseError","_inherits","_super","_createSuper","_this","call","code","message","toString","name","FirebaseError","j","_this2","promise","Promise","resolve","reject","B","user","type","headers","Map","set","z","getToken","invalidateToken","start","enqueueRetryable","shutdown","Q","token","changeListener","_this3","W","_this4","auth","onInit","_this5","then","accessToken","getUid","G","i","o","u","h","get","K","Y","H","_this6","l","appCheck","Z","r","s","databaseId","appId","persistenceKey","host","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","J","projectId","database","empty","X","segments","offset","len","comparator","child","slice","limit","forEach","push","construct","popFirst","popLast","firstSegment","lastSegment","isEmpty","isPrefixOf","isImmediateParentOf","toArray","Math","min","tt","_X","_super2","canonicalString","join","fromString","_len4","_key4","_i","_t2","indexOf","split","filter","emptyPath","et","nt","_X2","_super3","replace","isValidIdentifier","isKeyField","test","keyField","fromServerFormat","rt","path","hasCollectionId","getCollectionGroup","getCollectionPath","fromPath","fromName","isDocumentKey","fromSegments","st","it","ot","ut","substring","constructor","ct","_delegate","at","ht","lt","round","random","ft","dt","wt","BatchGetDocuments","Commit","RunQuery","RunAggregationQuery","mt","pt","yt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","gt","_ref","_super4","_this7","_T","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_e4","_t3","_e5","wrap","_callee$","_context","prev","next","method","body","sent","t0","status","statusText","ok","json","isArray","abrupt","stop","_x","_x2","_x3","_x4","_class","databaseInfo","_t","vt","alias","bt","fieldPath","Et","self","crypto","msCrypto","Uint8Array","getRandomValues","floor","At","charAt","It","Tt","every","Rt","Object","prototype","hasOwnProperty","Pt","Vt","_Error","_super5","_this8","_wrapNativeSuper","$t","_Symbol$iterator","binaryString","_this9","charCodeAt","done","toBase64","btoa","toUint8Array","approximateByteSize","compareTo","fromBase64String","atob","DOMException","fromUint8Array","String","fromCharCode","Symbol","iterator","EMPTY_BYTE_STRING","Dt","RegExp","Nt","exec","substr","Number","Date","seconds","getTime","nanos","Ft","xt","St","nanoseconds","toDate","toMillis","_compareTo","toJSON","valueOf","padStart","now","fromMillis","fromDate","qt","mapValue","fields","__type__","stringValue","Ot","__previous_value__","kt","__local_write_time__","timestampValue","Ct","Mt","Lt","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","values","Ut","find","jt","Bt","keys","sort","zt","Qt","Wt","Gt","Kt","Yt","assign","Ht","position","inclusive","Zt","Jt","Xt","_Jt","_super6","_this10","field","op","matches","data","matchesComparison","isInequality","getFlattenedFilters","getFilters","getFirstInequalityField","create","createKeyFieldInFilter","ne","oe","ue","ce","ae","re","se","te","_Jt2","_super7","_this11","filters","reduce","_iterator","_createForOfIteratorHelper","_step","err","f","ee","_Xt","_super8","_this12","_Xt2","_super9","_this13","ie","some","_Xt3","_super10","_this14","_Xt4","_super11","_Xt5","_super12","_Xt6","_super13","nullValue","_Xt7","_super14","_this15","he","dir","le","fe","timestamp","toMicroseconds","toTimestamp","fromTimestamp","max","de","root","me","EMPTY","insert","copy","BLACK","remove","left","right","size","minKey","maxKey","inorderTraversal","reverseTraversal","getIterator","we","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","isReverse","nodeStack","getNext","pop","hasNext","peek","color","RED","fixUp","removeMin","isRed","moveRedLeft","rotateRight","moveRedRight","rotateLeft","colorFlip","checkMaxDepth","check","pow","_class2","pe","has","first","last","forEachInRange","forEachWhile","firstAfterOrEqual","ye","add","_delete","unionWith","iter","ge","_iterator2","_step2","_iterator3","_step3","covers","_iterator4","_step4","_e","getFieldsMap","setAll","_this16","applyChanges","_iterator5","_step5","clone","ve","documentType","version","readTime","createTime","documentState","convertToFoundDocument","convertToNoDocument","convertToUnknownDocument","setHasCommittedMutations","setHasLocalMutations","setReadTime","hasLocalMutations","hasCommittedMutations","isValidDocument","isFoundDocument","isNoDocument","isUnknownDocument","mutableCopy","newInvalidDocument","newFoundDocument","newNoDocument","newUnknownDocument","be","collectionGroup","orderBy","startAt","endAt","Ee","Ae","explicitOrderBy","limitType","Ie","Te","_iterator6","_step6","Re","Pe","_iterator7","_step7","Ve","_iterator8","_step8","$e","De","Ne","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","useProto3Json","Fe","xe","_Fe","_super15","Se","_Fe2","_super16","_this17","elements","qe","_Fe3","_super17","_this18","Oe","_Fe4","_super18","_this19","serializer","ke","transform","Ce","updateTime","exists","none","Me","Le","_Me","_super19","_this20","precondition","fieldTransforms","getFieldMask","Ue","_Me2","_super20","_this21","fieldMask","je","_Me3","_super21","_this22","Be","_Me4","_super22","_this23","ze","asc","desc","Qe","in","We","and","or","Ge","Ke","toISOString","Ye","He","Ze","Je","Xe","tn","wn","en","nn","rn","sn","found","missing","on","update","delete","updateMask","dn","verify","updateTransforms","setToServerValue","appendMissingElements","removeAllFromArray","increment","isNone","currentDocument","un","structuredQuery","parent","from","collectionId","allDescendants","fn","where","ln","direction","cn","before","an","hn","unaryFilter","fieldFilter","compositeFilter","fieldPaths","mn","pn","timerId","reset","_this24","cancel","enqueueAfterDelay","skipDelay","yn","_ref2","_super23","_this25","authCredentials","appCheckCredentials","connection","_this26","all","_ref3","_ref4","_slicedToArray","catch","_this27","_ref5","_ref6","terminate","_class3","gn","_x5","_x6","_gn","_callee7","_callee7$","_context7","writes","_n","_x7","_x8","_n7","_callee8","_callee8$","_context8","documents","vn","_x9","_x10","_vn","_callee9","_callee9$","_context9","document","bn","_x11","_x12","_x13","_bn","_callee10","c","_callee10$","_context10","count","avg","sum","structuredAggregationQuery","aggregations","result","aggregateFields","En","An","_terminated","fetch","bind","_databaseId","app","options","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","_authCredentials","_appCheckCredentials","In","credentials","ignoreUndefinedProperties","cache","localCache","cacheSizeBytes","Tn","_app","_settings","_settingsFrozen","_terminateTask","_setSettings","sessionIndex","iamToken","authTokenFactory","client","_getSettings","_terminate","settings","Rn","_getProvider","isInitialized","initialize","instanceIdentifier","Pn","getApp","getImmediate","identifier","_initialized","getDefaultEmulatorHostnameAndPort","Vn","mockUserToken","createMockUserToken","sub","user_id","$n","_removeServiceInstance","Dn","_aggregateType","_internalFieldPath","Nn","_userDataWriter","_data","query","convertValue","Fn","converter","firestore","Sn","withConverter","xn","_query","_xn","_super24","_this28","_path","qn","_len5","_key5","getModularInstance","On","kn","_len6","_key6","Cn","Mn","Ln","_byteString","Un","_len7","_key7","_internalPath","jn","Bn","_methodName","zn","isFinite","_lat","_long","Qn","Wn","toMutation","Gn","Kn","Yn","mr","methodName","contains","Hn","Zn","Jn","merge","mergeFields","lr","ar","a","_iterator9","_step9","fr","pr","Xn","_Bn","_super25","_toFieldTransform","tr","er","_Bn2","_super26","nr","_Bn3","_super27","_this29","cr","rr","_Bn4","_super28","_this30","sr","_Bn5","_super29","_this31","ir","wr","ur","hr","_iterator10","_step10","getPrototypeOf","dr","search","_construct","yr","_firestore","_document","_converter","gr","fromFirestore","br","_yr","_super30","_get","_getPrototypeOf","_r","_docs","docs","vr","Er","Ar","_Er","_super31","Ir","_len8","_key8","Pr","Tr","_iterator11","_step11","_apply","_Ar","_super32","_this32","_field","_op","_value","_parse","zr","Br","_iterator12","_step12","jr","_create","Rr","_Er2","_super33","_this33","_queryConstraints","_getOperator","_iterator13","_step13","_getQueryConstraints","Vr","_len9","_key9","Wr","$r","_len10","_key10","Dr","_Ar2","_super34","_this34","_direction","Qr","Nr","Fr","_Ar3","_super35","_this35","_limit","_limitType","xr","Sr","qr","_Ar4","_super36","_this36","_docOrFields","_inclusive","Ur","Or","_len11","_key11","kr","_len12","_key12","Cr","_Ar5","_super37","_this37","Mr","_len13","_key13","Lr","_len14","_key14","_iterator14","_step14","_iterator15","_step15","_iterator16","_step16","Gr","toFirestore","Kr","_ref7","_super38","_this38","convertBytes","convertReference","convertDocumentKey","_class4","convertTimestamp","convertServerTimestamp","convertGeoPoint","convertArray","convertObject","_this39","_this40","Yr","Hr","reverse","Zr","Jr","_len15","_key15","Xr","ts","es","ns","is","rs","ss","os","us","deepEqual","cs","as","hs","_len16","_key16","ls","_len17","_key17","fs","ds","_commitHandler","_mutations","_committed","_dataReader","_verifyNotCommitted","ws","_len18","_key18","commit","ms","ps","datastore","readVersions","mutations","committed","lastWriteError","writtenDocs","Set","_lookup","_callee2","_this41","_callee2$","_context2","ensureCommitNotCalled","recordVersion","lookup","_x14","write","preconditionForUpdate","_commit","_callee3","_this42","_callee3$","_context3","ys","maxAttempts","gs","asyncQueue","updateFunction","deferred","run","_this43","_callee4","_callee4$","_context4","enqueueAndForget","_this44","_s","vs","targetTimeMs","removalCallback","_this45","timerHandle","setTimeout","handleDelayElapsed","clearTimeout","_this46","_clearTimeout","createAndSchedule","bs","_this47","visibilityState","addEventListener","enqueue","enqueueAndForgetEvenWhileRestricted","enterRestrictedMode","removeEventListener","_this48","_this49","_xt","_callee5","_this50","_callee5$","_context5","shift","_this51","stack","includes","_this52","verifyOperationInProgress","_qt","_callee6","_callee6$","_context6","_iterator17","_step17","_this53","_iterator18","_step18","splice","Es","_transaction","_this54","_len19","_key19","As","SDK_VERSION","_registerComponent","Component","_ref9","getProvider","setMultipleInstances","registerVersion"],"sources":["/home/gabriel_teles/ProjetosGit/jornadadev/node_modules/@firebase/firestore/dist/lite/index.browser.esm2017.js"],"sourcesContent":["import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, getDefaultEmulatorHostnameAndPort as a, createMockUserToken as h, getModularInstance as l, deepEqual as f } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass d {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ d.UNAUTHENTICATED = new d(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), \nd.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet w = \"9.19.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst m = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function p(t) {\n    m.setLogLevel(t);\n}\n\nfunction y(t, ...e) {\n    if (m.logLevel <= u.DEBUG) {\n        const n = e.map(v);\n        m.debug(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\nfunction g(t, ...e) {\n    if (m.logLevel <= u.ERROR) {\n        const n = e.map(v);\n        m.error(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function _(t, ...e) {\n    if (m.logLevel <= u.WARN) {\n        const n = e.map(v);\n        m.warn(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function v(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function b(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw g(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function E(t, e) {\n    t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function A(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const I = \"ok\", T = \"cancelled\", R = \"unknown\", P = \"invalid-argument\", V = \"deadline-exceeded\", $ = \"not-found\", D = \"already-exists\", N = \"permission-denied\", F = \"unauthenticated\", x = \"resource-exhausted\", S = \"failed-precondition\", q = \"aborted\", O = \"out-of-range\", k = \"unimplemented\", C = \"internal\", M = \"unavailable\", L = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class B {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class z {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(d.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class Q {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class W {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (E(\"string\" == typeof t.accessToken), \n        new B(t.accessToken, new d(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, e, n) {\n        this.t = t, this.i = e, this.o = n, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, \n        this.u = new Map;\n    }\n    /**\n     * Gets an authorization token, using a provided factory function, or return\n     * null.\n     */    h() {\n        return this.o ? this.o() : null;\n    }\n    get headers() {\n        this.u.set(\"X-Goog-AuthUser\", this.t);\n        // Use array notation to prevent minification\n        const t = this.h();\n        return t && this.u.set(\"Authorization\", t), this.i && this.u.set(\"X-Goog-Iam-Authorization-Token\", this.i), \n        this.u;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class K {\n    constructor(t, e, n) {\n        this.t = t, this.i = e, this.o = n;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(d.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass Y {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class H {\n    constructor(t) {\n        this.l = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (E(\"string\" == typeof t.token), \n        new Y(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass Z {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass J {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new J(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof J && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass X {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === X.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof X ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class tt extends X {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class nt extends X {\n    construct(t, e, n) {\n        return new nt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return et.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new nt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n        return new nt(e);\n    }\n    static emptyPath() {\n        return new nt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class rt {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new rt(tt.fromString(t));\n    }\n    static fromName(t) {\n        return new rt(tt.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new rt(tt.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === tt.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return tt.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new rt(new tt(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function st(t, e, n) {\n    if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n    if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function ot(t) {\n    if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : b();\n}\n\nfunction ct(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = ut(t);\n            throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction at(t, e) {\n    if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The value returned from the most recent invocation of\n * `generateUniqueDebugId()`, or null if it has never been invoked.\n */ let ht = null;\n\n/**\n * Generates and returns an initial value for `lastUniqueDebugId`.\n *\n * The returned value is randomly selected from a range of integers that are\n * represented as 8 hexadecimal digits. This means that (within reason) any\n * numbers generated by incrementing the returned number by 1 will also be\n * represented by 8 hexadecimal digits. This leads to all \"IDs\" having the same\n * length when converted to a hexadecimal string, making reading logs containing\n * these IDs easier to follow. And since the return value is randomly selected\n * it will help to differentiate between logs from different executions.\n */\n/**\n * Generates and returns a unique ID as a hexadecimal string.\n *\n * The returned ID is intended to be used in debug logging messages to help\n * correlate log messages that may be spatially separated in the logs, but\n * logically related. For example, a network connection could include the same\n * \"debug ID\" string in all of its log messages to help trace a specific\n * connection over time.\n *\n * @return the 10-character generated ID (e.g. \"0xa1b2c3d4\").\n */\nfunction lt() {\n    return null === ht ? ht = 268435456 + Math.round(2147483648 * Math.random()) : ht++, \n    \"0x\" + ht.toString(16);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ft(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function dt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst wt = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\",\n    RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar mt, pt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction yt(t) {\n    if (void 0 === t) return g(\"RPC_ERROR\", \"HTTP error has no status\"), R;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return I;\n\n      case 400:\n        // Bad Request\n        return S;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return F;\n\n      case 403:\n        // Forbidden\n        return N;\n\n      case 404:\n        // Not Found\n        return $;\n\n      case 409:\n        // Conflict\n        return q;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return O;\n\n      case 429:\n        // Too Many Requests\n        return x;\n\n      case 499:\n        // Client Closed Request\n        return T;\n\n      case 500:\n        // Internal Server Error\n        return R;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return k;\n\n      case 503:\n        // Service Unavailable\n        return M;\n\n      case 504:\n        // Gateway Timeout\n        return V;\n\n      default:\n        return t >= 200 && t < 300 ? I : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (pt = mt || (mt = {}))[pt.OK = 0] = \"OK\", pt[pt.CANCELLED = 1] = \"CANCELLED\", \npt[pt.UNKNOWN = 2] = \"UNKNOWN\", pt[pt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \npt[pt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", pt[pt.NOT_FOUND = 5] = \"NOT_FOUND\", \npt[pt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", pt[pt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \npt[pt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", pt[pt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \npt[pt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", pt[pt.ABORTED = 10] = \"ABORTED\", \npt[pt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", pt[pt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \npt[pt.INTERNAL = 13] = \"INTERNAL\", pt[pt.UNAVAILABLE = 14] = \"UNAVAILABLE\", pt[pt.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass gt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.m = e + \"://\" + t.host, this.p = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    get g() {\n        // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n        // where to run the query, and expect the `request` to NOT specify the \"path\".\n        return !1;\n    }\n    v(t, e, n, r, s) {\n        const i = lt(), o = this.A(t, e);\n        y(\"RestConnection\", `Sending RPC '${t}' ${i}:`, o, n);\n        const u = {};\n        return this.I(u, r, s), this.T(t, o, u, n).then((e => (y(\"RestConnection\", `Received RPC '${t}' ${i}: `, e), \n        e)), (e => {\n            throw _(\"RestConnection\", `RPC '${t}' ${i} failed with error: `, e, \"url: \", o, \"request:\", n), \n            e;\n        }));\n    }\n    R(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.v(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    I(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    A(t, e) {\n        const n = wt[t];\n        return `${this.m}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.P = e;\n    }\n    V(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async T(t, e, n, r) {\n        var s;\n        const i = JSON.stringify(r);\n        let o;\n        try {\n            o = await this.P(e, {\n                method: \"POST\",\n                headers: n,\n                body: i\n            });\n        } catch (t) {\n            const e = t;\n            throw new U(yt(e.status), \"Request failed with error: \" + e.statusText);\n        }\n        if (!o.ok) {\n            let t = await o.json();\n            Array.isArray(t) && (t = t[0]);\n            const e = null === (s = null == t ? void 0 : t.error) || void 0 === s ? void 0 : s.message;\n            throw new U(yt(o.status), `Request failed with error: ${null != e ? e : o.statusText}`);\n        }\n        return o.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst _t = /^[_a-zA-Z][_a-zA-Z0-9]*(?:\\.[_a-zA-Z][_a-zA-Z0-9]*)*$/;\n\n/**\n * An alias for aggregation results.\n * @internal\n */ class vt {\n    /**\n     * @internal\n     * @param alias Un-escaped alias representation\n     */\n    constructor(t) {\n        this.alias = t;\n    }\n    /**\n     * Returns true if the string could be used as an alias.\n     */    static $(t) {\n        return _t.test(t);\n    }\n    /**\n     * Return an escaped and quoted string representation of the alias.\n     */    canonicalString() {\n        let t = this.alias.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\");\n        return vt.$(t) || (t = \"`\" + t + \"`\"), t;\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Concrete implementation of the Aggregate type.\n */ class bt {\n    constructor(t, e, n) {\n        this.alias = t, this.D = e, this.fieldPath = n;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */ function Et(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class At {\n    static N() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = Et(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction It(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function Tt(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Rt(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Pt(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An error encountered while decoding base64 string.\n */\nclass Vt extends Error {\n    constructor() {\n        super(...arguments), this.name = \"Base64DecodeError\";\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass $t {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = function(t) {\n            try {\n                return atob(t);\n            } catch (t) {\n                // Check that `DOMException` is defined before using it to avoid\n                // \"ReferenceError: Property 'DOMException' doesn't exist\" in react-native.\n                // (https://github.com/firebase/firebase-js-sdk/issues/7115)\n                throw \"undefined\" != typeof DOMException && t instanceof DOMException ? new Vt(\"Invalid base64 string: \" + t) : t;\n            }\n        }\n        /** Converts a binary string to a Base64 encoded string. */ (t);\n        return new $t(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new $t(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return It(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\n$t.EMPTY_BYTE_STRING = new $t(\"\");\n\nconst Dt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function Nt(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (E(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = Dt.exec(t);\n        if (E(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: Ft(t.seconds),\n        nanos: Ft(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function Ft(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function xt(t) {\n    return \"string\" == typeof t ? $t.fromBase64String(t) : $t.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass St {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return St.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return St.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new St(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? It(this.nanoseconds, t.nanoseconds) : It(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function qt(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function Ot(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return qt(e) ? Ot(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function kt(t) {\n    const e = Nt(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new St(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ct = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction Mt(t) {\n    return \"nullValue\" in t ? 0 /* TypeOrder.NullValue */ : \"booleanValue\" in t ? 1 /* TypeOrder.BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* TypeOrder.NumberValue */ : \"timestampValue\" in t ? 3 /* TypeOrder.TimestampValue */ : \"stringValue\" in t ? 5 /* TypeOrder.StringValue */ : \"bytesValue\" in t ? 6 /* TypeOrder.BlobValue */ : \"referenceValue\" in t ? 7 /* TypeOrder.RefValue */ : \"geoPointValue\" in t ? 8 /* TypeOrder.GeoPointValue */ : \"arrayValue\" in t ? 9 /* TypeOrder.ArrayValue */ : \"mapValue\" in t ? qt(t) ? 4 /* TypeOrder.ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ (t) ? 9007199254740991 /* TypeOrder.MaxValue */ : 10 /* TypeOrder.ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function Lt(t, e) {\n    if (t === e) return !0;\n    const n = Mt(t);\n    if (n !== Mt(e)) return !1;\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return !0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return kt(t).isEqual(kt(e));\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = Nt(t.timestampValue), r = Nt(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* TypeOrder.StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            return xt(t.bytesValue).isEqual(xt(e.bytesValue));\n        }(t, e);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            return Ft(t.geoPointValue.latitude) === Ft(e.geoPointValue.latitude) && Ft(t.geoPointValue.longitude) === Ft(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return Ft(t.integerValue) === Ft(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = Ft(t.doubleValue), r = Ft(e.doubleValue);\n                return n === r ? dt(n) === dt(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return Tt(t.arrayValue.values || [], e.arrayValue.values || [], Lt);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (Rt(n) !== Rt(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !Lt(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return b();\n    }\n}\n\nfunction Ut(t, e) {\n    return void 0 !== (t.values || []).find((t => Lt(t, e)));\n}\n\nfunction jt(t, e) {\n    if (t === e) return 0;\n    const n = Mt(t), r = Mt(e);\n    if (n !== r) return It(n, r);\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return 0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return It(t.booleanValue, e.booleanValue);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            const n = Ft(t.integerValue || t.doubleValue), r = Ft(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return Bt(t.timestampValue, e.timestampValue);\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return Bt(kt(t), kt(e));\n\n      case 5 /* TypeOrder.StringValue */ :\n        return It(t.stringValue, e.stringValue);\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            const n = xt(t), r = xt(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = It(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return It(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            const n = It(Ft(t.latitude), Ft(e.latitude));\n            if (0 !== n) return n;\n            return It(Ft(t.longitude), Ft(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = jt(n[t], r[t]);\n                if (e) return e;\n            }\n            return It(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            if (t === Ct && e === Ct) return 0;\n            if (t === Ct) return 1;\n            if (e === Ct) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = It(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = jt(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return It(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw b();\n    }\n}\n\nfunction Bt(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return It(t, e);\n    const n = Nt(t), r = Nt(e), s = It(n.seconds, r.seconds);\n    return 0 !== s ? s : It(n.nanos, r.nanos);\n}\n\nfunction zt(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Qt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Wt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Gt(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function Kt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Yt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Pt(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Yt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Yt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Ht {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\nfunction Zt(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!Lt(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Jt {}\n\nclass Xt extends Jt {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* Operator.IN */ === e || \"not-in\" /* Operator.NOT_IN */ === e ? this.createKeyFieldInFilter(t, e, n) : new ne(t, e, n) : \"array-contains\" /* Operator.ARRAY_CONTAINS */ === e ? new oe(t, n) : \"in\" /* Operator.IN */ === e ? new ue(t, n) : \"not-in\" /* Operator.NOT_IN */ === e ? new ce(t, n) : \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === e ? new ae(t, n) : new Xt(t, e, n);\n    }\n    static createKeyFieldInFilter(t, e, n) {\n        return \"in\" /* Operator.IN */ === e ? new re(t, n) : new se(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* Operator.NOT_EQUAL */ === this.op ? null !== e && this.matchesComparison(jt(e, this.value)) : null !== e && Mt(this.value) === Mt(e) && this.matchesComparison(jt(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    matchesComparison(t) {\n        switch (this.op) {\n          case \"<\" /* Operator.LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* Operator.EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* Operator.GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return b();\n        }\n    }\n    isInequality() {\n        return [ \"<\" /* Operator.LESS_THAN */ , \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ , \">\" /* Operator.GREATER_THAN */ , \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ , \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n    getFlattenedFilters() {\n        return [ this ];\n    }\n    getFilters() {\n        return [ this ];\n    }\n    getFirstInequalityField() {\n        return this.isInequality() ? this.field : null;\n    }\n}\n\nclass te extends Jt {\n    constructor(t, e) {\n        super(), this.filters = t, this.op = e, this.F = null;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e) {\n        return new te(t, e);\n    }\n    matches(t) {\n        return \"and\" /* CompositeOperator.AND */ === this.op ? void 0 === this.filters.find((e => !e.matches(t))) : void 0 !== this.filters.find((e => e.matches(t)));\n    }\n    getFlattenedFilters() {\n        return null !== this.F || (this.F = this.filters.reduce(((t, e) => t.concat(e.getFlattenedFilters())), [])), \n        this.F;\n    }\n    // Returns a mutable copy of `this.filters`\n    getFilters() {\n        return Object.assign([], this.filters);\n    }\n    getFirstInequalityField() {\n        const t = this.S((t => t.isInequality()));\n        return null !== t ? t.field : null;\n    }\n    // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n    // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n    // predicate.\n    S(t) {\n        for (const e of this.getFlattenedFilters()) if (t(e)) return e;\n        return null;\n    }\n}\n\nfunction ee(t, e) {\n    return t instanceof Xt ? function(t, e) {\n        return e instanceof Xt && t.op === e.op && t.field.isEqual(e.field) && Lt(t.value, e.value);\n    }(t, e) : t instanceof te ? function(t, e) {\n        if (e instanceof te && t.op === e.op && t.filters.length === e.filters.length) {\n            return t.filters.reduce(((t, n, r) => t && ee(n, e.filters[r])), !0);\n        }\n        return !1;\n    }\n    /** Filter that matches on key fields (i.e. '__name__'). */ (t, e) : void b();\n}\n\nclass ne extends Xt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = rt.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = rt.comparator(t.key, this.key);\n        return this.matchesComparison(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class re extends Xt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e), this.keys = ie(\"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class se extends Xt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e), this.keys = ie(\"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction ie(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => rt.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class oe extends Xt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* Operator.ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Qt(e) && Ut(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class ue extends Xt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && Ut(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class ce extends Xt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        if (Ut(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !Ut(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class ae extends Xt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Qt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => Ut(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class he {\n    constructor(t, e = \"asc\" /* Direction.ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction le(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class fe {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new fe(t);\n    }\n    static min() {\n        return new fe(new St(0, 0));\n    }\n    static max() {\n        return new fe(new St(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass de {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || me.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new de(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, me.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new de(this.comparator, this.root.remove(t, this.comparator).copy(null, null, me.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new we(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new we(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new we(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new we(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass we {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass me {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : me.RED, this.left = null != r ? r : me.EMPTY, \n        this.right = null != s ? s : me.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new me(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return me.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return me.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, me.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, me.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw b();\n        if (this.right.isRed()) throw b();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw b();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nme.EMPTY = null, me.RED = !0, me.BLACK = !1;\n\n// end LLRBEmptyNode\nme.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw b();\n    }\n    get value() {\n        throw b();\n    }\n    get color() {\n        throw b();\n    }\n    get left() {\n        throw b();\n    }\n    get right() {\n        throw b();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new me(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass pe {\n    constructor(t) {\n        this.comparator = t, this.data = new de(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new ye(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new ye(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof pe)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new pe(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass ye {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class ge {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(nt.comparator);\n    }\n    static empty() {\n        return new ge([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new pe(nt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new ge(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return Tt(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class _e {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new _e({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !Kt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Yt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = nt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Yt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        Kt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return Lt(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            Kt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Pt(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new _e(Yt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class ve {\n    constructor(t, e, n, r, s, i, o) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.createTime = s, \n        this.data = i, this.documentState = o;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new ve(t, 0 /* DocumentType.INVALID */ , \n        /* version */ fe.min(), \n        /* readTime */ fe.min(), \n        /* createTime */ fe.min(), _e.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n, r) {\n        return new ve(t, 1 /* DocumentType.FOUND_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ fe.min(), \n        /* createTime */ n, r, 0 /* DocumentState.SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new ve(t, 2 /* DocumentType.NO_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ fe.min(), \n        /* createTime */ fe.min(), _e.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new ve(t, 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ fe.min(), \n        /* createTime */ fe.min(), _e.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        // If a document is switching state from being an invalid or deleted\n        // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n        // update from Watch or due to applying a local set mutation on top\n        // of a deleted document, our best guess about its createTime would be the\n        // version at which the document transitioned to a FOUND_DOCUMENT.\n        return !this.createTime.isEqual(fe.min()) || 2 /* DocumentType.NO_DOCUMENT */ !== this.documentType && 0 /* DocumentType.INVALID */ !== this.documentType || (this.createTime = t), \n        this.version = t, this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* DocumentType.NO_DOCUMENT */ , \n        this.data = _e.empty(), this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        this.data = _e.empty(), this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , \n        this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ , this.version = fe.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* DocumentType.INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* DocumentType.FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* DocumentType.NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* DocumentType.UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof ve && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new ve(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {createTime: ${this.createTime}}), {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass be {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.q = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function Ee(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new be(t, e, n, r, s, i, o);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nclass Ae {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* LimitType.First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.O = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.k = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function Ie(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction Te(t) {\n    for (const e of t.filters) {\n        const t = e.getFirstInequalityField();\n        if (null !== t) return t;\n    }\n    return null;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction Re(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function Pe(t) {\n    const e = A(t);\n    if (null === e.O) {\n        e.O = [];\n        const t = Te(e), n = Ie(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.O.push(new he(t)), e.O.push(new he(nt.keyField(), \"asc\" /* Direction.ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.O.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* Direction.ASCENDING */;\n                e.O.push(new he(nt.keyField(), t));\n            }\n        }\n    }\n    return e.O;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function Ve(t) {\n    const e = A(t);\n    if (!e.k) if (\"F\" /* LimitType.First */ === e.limitType) e.k = Ee(e.path, e.collectionGroup, Pe(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of Pe(e)) {\n            const e = \"desc\" /* Direction.DESCENDING */ === n.dir ? \"asc\" /* Direction.ASCENDING */ : \"desc\" /* Direction.DESCENDING */;\n            t.push(new he(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new Ht(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new Ht(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.k = Ee(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.k;\n}\n\nfunction $e(t, e) {\n    e.getFirstInequalityField(), Te(t);\n    const n = t.filters.concat([ e ]);\n    return new Ae(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\n\nfunction De(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!le(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let n = 0; n < t.filters.length; n++) if (!ee(t.filters[n], e.filters[n])) return !1;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!Zt(t.startAt, e.startAt) && Zt(t.endAt, e.endAt);\n    }(Ve(t), Ve(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction Ne(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !dt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.useProto3Json) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: dt(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class Fe {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class xe extends Fe {}\n\n/** Transforms an array value via a union operation. */ class Se extends Fe {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class qe extends Fe {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class Oe extends Fe {\n    constructor(t, e) {\n        super(), this.serializer = t, this.C = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class ke {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Ce {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Ce;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Ce(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Ce(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class Me {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Le extends Me {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* MutationType.Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class Ue extends Me {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* MutationType.Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class je extends Me {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* MutationType.Delete */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class Be extends Me {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* MutationType.Verify */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const ze = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Qe = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})(), We = (() => {\n    const t = {\n        and: \"AND\",\n        or: \"OR\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Ge {\n    constructor(t, e) {\n        this.databaseId = t, this.useProto3Json = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction Ke(t, e) {\n    if (t.useProto3Json) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Ye(t, e) {\n    return t.useProto3Json ? e.toBase64() : e.toUint8Array();\n}\n\nfunction He(t, e) {\n    return Ke(t, e.toTimestamp());\n}\n\nfunction Ze(t) {\n    return E(!!t), fe.fromTimestamp(function(t) {\n        const e = Nt(t);\n        return new St(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction Je(t, e) {\n    return function(t) {\n        return new tt([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Xe(t, e) {\n    return Je(t.databaseId, e.path);\n}\n\nfunction tn(t, e) {\n    const n = function(t) {\n        const e = tt.fromString(t);\n        return E(wn(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction en(t, e) {\n    return Je(t.databaseId, e);\n}\n\nfunction nn(t) {\n    return new tt([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction rn(t, e, n) {\n    return {\n        name: Xe(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction sn(t, e) {\n    return \"found\" in e ? function(t, e) {\n        E(!!e.found), e.found.name, e.found.updateTime;\n        const n = tn(t, e.found.name), r = Ze(e.found.updateTime), s = e.found.createTime ? Ze(e.found.createTime) : fe.min(), i = new _e({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return ve.newFoundDocument(n, r, s, i);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        E(!!e.missing), E(!!e.readTime);\n        const n = tn(t, e.missing), r = Ze(e.readTime);\n        return ve.newNoDocument(n, r);\n    }(t, e) : b();\n}\n\nfunction on(t, e) {\n    let n;\n    if (e instanceof Le) n = {\n        update: rn(t, e.key, e.value)\n    }; else if (e instanceof je) n = {\n        delete: Xe(t, e.key)\n    }; else if (e instanceof Ue) n = {\n        update: rn(t, e.key, e.data),\n        updateMask: dn(e.fieldMask)\n    }; else {\n        if (!(e instanceof Be)) return b();\n        n = {\n            verify: Xe(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof xe) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Se) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof qe) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Oe) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.C\n        };\n        throw b();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: He(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : b();\n    }(t, e.precondition)), n;\n}\n\nfunction un(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = en(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = en(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        return fn(te.create(t, \"and\" /* CompositeOperator.AND */));\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: ln(t.field),\n                direction: cn(t.dir)\n            };\n        }\n        // visible for testing\n        (t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.useProto3Json || ft(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction cn(t) {\n    return ze[t];\n}\n\n// visible for testing\nfunction an(t) {\n    return Qe[t];\n}\n\nfunction hn(t) {\n    return We[t];\n}\n\nfunction ln(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction fn(t) {\n    return t instanceof Xt ? function(t) {\n        if (\"==\" /* Operator.EQUAL */ === t.op) {\n            if (Gt(t.value)) return {\n                unaryFilter: {\n                    field: ln(t.field),\n                    op: \"IS_NAN\"\n                }\n            };\n            if (Wt(t.value)) return {\n                unaryFilter: {\n                    field: ln(t.field),\n                    op: \"IS_NULL\"\n                }\n            };\n        } else if (\"!=\" /* Operator.NOT_EQUAL */ === t.op) {\n            if (Gt(t.value)) return {\n                unaryFilter: {\n                    field: ln(t.field),\n                    op: \"IS_NOT_NAN\"\n                }\n            };\n            if (Wt(t.value)) return {\n                unaryFilter: {\n                    field: ln(t.field),\n                    op: \"IS_NOT_NULL\"\n                }\n            };\n        }\n        return {\n            fieldFilter: {\n                field: ln(t.field),\n                op: an(t.op),\n                value: t.value\n            }\n        };\n    }(t) : t instanceof te ? function(t) {\n        const e = t.getFilters().map((t => fn(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: hn(t.op),\n                filters: e\n            }\n        };\n    }(t) : b();\n}\n\nfunction dn(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction wn(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function mn(t) {\n    return new Ge(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass pn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.M = t, this.timerId = e, this.L = n, this.U = r, this.j = s, this.B = 0, this.W = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.G = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.B = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    K() {\n        this.B = this.j;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    Y(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.B + this.H()), n = Math.max(0, Date.now() - this.G), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.B} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.W = this.M.enqueueAfterDelay(this.timerId, r, (() => (this.G = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.B *= this.U, this.B < this.L && (this.B = this.L), this.B > this.j && (this.B = this.j);\n    }\n    Z() {\n        null !== this.W && (this.W.skipDelay(), this.W = null);\n    }\n    cancel() {\n        null !== this.W && (this.W.cancel(), this.W = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    H() {\n        return (Math.random() - .5) * this.B;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass yn extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, \n        this.serializer = r, this.J = !1;\n    }\n    X() {\n        if (this.J) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    v(t, e, n) {\n        return this.X(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.connection.v(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    R(t, e, n, r) {\n        return this.X(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.connection.R(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    terminate() {\n        this.J = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function gn(t, e) {\n    const n = A(t), r = nn(n.serializer) + \"/documents\", s = {\n        writes: e.map((t => on(n.serializer, t)))\n    };\n    await n.v(\"Commit\", r, s);\n}\n\nasync function _n(t, e) {\n    const n = A(t), r = nn(n.serializer) + \"/documents\", s = {\n        documents: e.map((t => Xe(n.serializer, t)))\n    }, i = await n.R(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = sn(n.serializer, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        E(!!e), u.push(e);\n    })), u;\n}\n\nasync function vn(t, e) {\n    const n = A(t), r = un(n.serializer, Ve(e));\n    return (await n.R(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = tn(t, e.name), s = Ze(e.updateTime), i = e.createTime ? Ze(e.createTime) : fe.min(), o = new _e({\n            mapValue: {\n                fields: e.fields\n            }\n        }), u = ve.newFoundDocument(r, s, i, o);\n        return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n    }(n.serializer, t.document, void 0)));\n}\n\nasync function bn(t, e, n) {\n    const r = A(t), s = function(t, e, n) {\n        const r = un(t, e), s = [];\n        return n.forEach((t => {\n            \"count\" === t.D ? s.push({\n                alias: t.alias.canonicalString(),\n                count: {}\n            }) : \"avg\" === t.D ? s.push({\n                alias: t.alias.canonicalString(),\n                avg: {\n                    field: ln(t.fieldPath)\n                }\n            }) : \"sum\" === t.D && s.push({\n                alias: t.alias.canonicalString(),\n                sum: {\n                    field: ln(t.fieldPath)\n                }\n            });\n        })), {\n            structuredAggregationQuery: {\n                aggregations: s,\n                structuredQuery: r.structuredQuery\n            },\n            parent: r.parent\n        };\n    }(r.serializer, Ve(e), n), i = s.parent;\n    r.connection.g || delete s.parent;\n    const o = (await r.R(\"RunAggregationQuery\", i, s, /*expectedResponseCount=*/ 1)).filter((t => !!t.result));\n    // Omit RunAggregationQueryResponse that only contain readTimes.\n        return E(1 === o.length), (u = o[0]).result, u.result.aggregateFields, new _e({\n        mapValue: {\n            fields: null === (c = u.result) || void 0 === c ? void 0 : c.aggregateFields\n        }\n    });\n    var u, c;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const En = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction An(t) {\n    if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n    if (!En.has(t)) {\n        y(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new gt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new Z(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = mn(t._databaseId), u = function(t, e, n, r) {\n            return new yn(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        En.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return En.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass In {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        this.cache = t.localCache, void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */ class Tn {\n    /** @hideconstructor */\n    constructor(t, e, n, r) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, \n        this._app = r, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new In({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new In(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new z;\n            switch (t.type) {\n              case \"firstParty\":\n                return new K(t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = En.get(t);\n            e && (y(\"ComponentProvider\", \"Removing Datastore\"), En.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction Rn(t, e, n) {\n    n || (n = \"(default)\");\n    const r = _getProvider(t, \"firestore/lite\");\n    if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n    return r.initialize({\n        options: e,\n        instanceIdentifier: n\n    });\n}\n\nfunction Pn(e, n) {\n    const r = \"object\" == typeof e ? e : t(), s = \"string\" == typeof e ? e : n || \"(default)\", i = _getProvider(r, \"firestore/lite\").getImmediate({\n        identifier: s\n    });\n    if (!i._initialized) {\n        const t = a(\"firestore\");\n        t && Vn(i, ...t);\n    }\n    return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function Vn(t, e, n, r = {}) {\n    var s;\n    const i = (t = ct(t, Tn))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && _(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = h(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new d(i);\n        }\n        t._authCredentials = new Q(new B(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function $n(t) {\n    return t = ct(t, Tn), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass Dn {\n    /**\n     * Create a new AggregateField<T>\n     * @param _aggregateType Specifies the type of aggregation operation to perform.\n     * @param _internalFieldPath Optionally specifies the field that is aggregated.\n     * @internal\n     */\n    constructor(\n    // TODO (sum/avg) make aggregateType public when the feature is supported\n    t = \"count\", e) {\n        this._aggregateType = t, this._internalFieldPath = e, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateField\";\n    }\n}\n\n/**\n * The results of executing an aggregation query.\n */ class Nn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        this._userDataWriter = e, this._data = n, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateQuerySnapshot\", this.query = t;\n    }\n    /**\n     * Returns the results of the aggregations performed over the underlying\n     * query.\n     *\n     * The keys of the returned object will be the same as those of the\n     * `AggregateSpec` object specified to the aggregation method, and the values\n     * will be the corresponding aggregation result.\n     *\n     * @returns The results of the aggregations performed over the underlying\n     * query.\n     */    data() {\n        return this._userDataWriter.convertValue(this._data.value);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class Fn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new Sn(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new Fn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class xn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new xn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link (query:1)}).\n */ class Sn extends xn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new Ae(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new Fn(this.firestore, \n        /* converter= */ null, new rt(t));\n    }\n    withConverter(t) {\n        return new Sn(this.firestore, t, this._path);\n    }\n}\n\nfunction qn(t, e, ...n) {\n    if (t = l(t), st(\"collection\", \"path\", e), t instanceof Tn) {\n        const r = tt.fromString(e, ...n);\n        return ot(r), new Sn(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof Fn || t instanceof Sn)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return ot(r), new Sn(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function On(t, e) {\n    if (t = ct(t, Tn), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new xn(t, \n    /* converter= */ null, function(t) {\n        return new Ae(tt.emptyPath(), t);\n    }(e));\n}\n\nfunction kn(t, e, ...n) {\n    if (t = l(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = At.N()), st(\"doc\", \"path\", e), t instanceof Tn) {\n        const r = tt.fromString(e, ...n);\n        return it(r), new Fn(t, \n        /* converter= */ null, new rt(r));\n    }\n    {\n        if (!(t instanceof Fn || t instanceof Sn)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return it(r), new Fn(t.firestore, t instanceof Sn ? t.converter : null, new rt(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Cn(t, e) {\n    return t = l(t), e = l(e), (t instanceof Fn || t instanceof Sn) && (e instanceof Fn || e instanceof Sn) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Mn(t, e) {\n    return t = l(t), e = l(e), t instanceof xn && e instanceof xn && (t.firestore === e.firestore && De(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class Ln {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new Ln($t.fromBase64String(t));\n        } catch (t) {\n            throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new Ln($t.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class Un {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new nt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function jn() {\n    return new Un(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class Bn {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class zn {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return It(this._lat, t._lat) || It(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Qn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Wn {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new Ue(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Le(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class Gn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new Ue(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Kn(t) {\n    switch (t) {\n      case 0 /* UserDataSource.Set */ :\n // fall through\n              case 2 /* UserDataSource.MergeSet */ :\n // fall through\n              case 1 /* UserDataSource.Update */ :\n        return !0;\n\n      case 3 /* UserDataSource.Argument */ :\n      case 4 /* UserDataSource.ArrayArgument */ :\n        return !1;\n\n      default:\n        throw b();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class Yn {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.serializer = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.tt(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get et() {\n        return this.settings.et;\n    }\n    /** Returns a new context with the specified settings overwritten. */    nt(t) {\n        return new Yn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.serializer, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    rt(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.nt({\n            path: n,\n            st: !1\n        });\n        return r.it(t), r;\n    }\n    ot(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.nt({\n            path: n,\n            st: !1\n        });\n        return r.tt(), r;\n    }\n    ut(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.nt({\n            path: void 0,\n            st: !0\n        });\n    }\n    ct(t) {\n        return mr(t, this.settings.methodName, this.settings.at || !1, this.path, this.settings.ht);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    tt() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.it(this.path.get(t));\n    }\n    it(t) {\n        if (0 === t.length) throw this.ct(\"Document fields must not be empty\");\n        if (Kn(this.et) && Qn.test(t)) throw this.ct('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class Hn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.serializer = n || mn(t);\n    }\n    /** Creates a new top-level parse context. */    lt(t, e, n, r = !1) {\n        return new Yn({\n            et: t,\n            methodName: e,\n            ht: n,\n            path: nt.emptyPath(),\n            st: !1,\n            at: r\n        }, this.databaseId, this.serializer, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Zn(t) {\n    const e = t._freezeSettings(), n = mn(t._databaseId);\n    return new Hn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Jn(t, e, n, r, s, i = {}) {\n    const o = t.lt(i.merge || i.mergeFields ? 2 /* UserDataSource.MergeSet */ : 0 /* UserDataSource.Set */ , e, n, s);\n    lr(\"Data must be an object, but it was:\", o, r);\n    const u = ar(r, o);\n    let c, a;\n    if (i.merge) c = new ge(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = fr(e, r, n);\n            if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            pr(t, s) || t.push(s);\n        }\n        c = new ge(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Wn(new _e(u), c, a);\n}\n\nclass Xn extends Bn {\n    _toFieldTransform(t) {\n        if (2 /* UserDataSource.MergeSet */ !== t.et) throw 1 /* UserDataSource.Update */ === t.et ? t.ct(`${this._methodName}() can only appear at the top level of your update data`) : t.ct(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Xn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function tr(t, e, n) {\n    return new Yn({\n        et: 3 /* UserDataSource.Argument */ ,\n        ht: e.settings.ht,\n        methodName: t._methodName,\n        st: n\n    }, e.databaseId, e.serializer, e.ignoreUndefinedProperties);\n}\n\nclass er extends Bn {\n    _toFieldTransform(t) {\n        return new ke(t.path, new xe);\n    }\n    isEqual(t) {\n        return t instanceof er;\n    }\n}\n\nclass nr extends Bn {\n    constructor(t, e) {\n        super(t), this.ft = e;\n    }\n    _toFieldTransform(t) {\n        const e = tr(this, t, \n        /*array=*/ !0), n = this.ft.map((t => cr(t, e))), r = new Se(n);\n        return new ke(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass rr extends Bn {\n    constructor(t, e) {\n        super(t), this.ft = e;\n    }\n    _toFieldTransform(t) {\n        const e = tr(this, t, \n        /*array=*/ !0), n = this.ft.map((t => cr(t, e))), r = new qe(n);\n        return new ke(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass sr extends Bn {\n    constructor(t, e) {\n        super(t), this.dt = e;\n    }\n    _toFieldTransform(t) {\n        const e = new Oe(t.serializer, Ne(t.serializer, this.dt));\n        return new ke(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function ir(t, e, n, r) {\n    const s = t.lt(1 /* UserDataSource.Update */ , e, n);\n    lr(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = _e.empty();\n    Pt(r, ((t, r) => {\n        const u = wr(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = l(r);\n        const c = s.ot(u);\n        if (r instanceof Xn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = cr(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new ge(i);\n    return new Gn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function or(t, e, n, r, s, i) {\n    const o = t.lt(1 /* UserDataSource.Update */ , e, n), u = [ fr(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(fr(e, i[t])), c.push(i[t + 1]);\n    const a = [], h = _e.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!pr(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = l(n);\n        const r = o.ot(e);\n        if (n instanceof Xn) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = cr(n, r);\n            null != t && (a.push(e), h.set(e, t));\n        }\n    }\n    const f = new ge(a);\n    return new Gn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function ur(t, e, n, r = !1) {\n    return cr(n, t.lt(r ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function cr(t, e) {\n    if (hr(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = l(t))) return lr(\"Unsupported field value:\", e, t), ar(t, e);\n    if (t instanceof Bn) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Kn(e.et)) throw e.ct(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.ct(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.st && 4 /* UserDataSource.ArrayArgument */ !== e.et) throw e.ct(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = cr(s, e.ut(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = l(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return Ne(e.serializer, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = St.fromDate(t);\n            return {\n                timestampValue: Ke(e.serializer, n)\n            };\n        }\n        if (t instanceof St) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new St(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: Ke(e.serializer, n)\n            };\n        }\n        if (t instanceof zn) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof Ln) return {\n            bytesValue: Ye(e.serializer, t._byteString)\n        };\n        if (t instanceof Fn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.ct(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: Je(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.ct(`Unsupported field value: ${ut(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction ar(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }(t) ? Pt(t, ((t, r) => {\n        const s = cr(r, e.rt(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction hr(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof St || t instanceof zn || t instanceof Ln || t instanceof Fn || t instanceof Bn);\n}\n\nfunction lr(t, e, n) {\n    if (!hr(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = ut(n);\n        throw \"an object\" === r ? e.ct(t + \" a custom object\") : e.ct(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function fr(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = l(e)) instanceof Un) return e._internalPath;\n    if (\"string\" == typeof e) return wr(t, e);\n    throw mr(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const dr = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function wr(t, e, n) {\n    if (e.search(dr) >= 0) throw mr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new Un(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw mr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction mr(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function pr(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class yr {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new Fn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new gr(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(br(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class gr extends yr {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class _r {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function vr(t, e) {\n    return t = l(t), e = l(e), t instanceof yr && e instanceof yr ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof _r && e instanceof _r && (Mn(t.query, e.query) && Tt(t.docs, e.docs, vr));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function br(t, e) {\n    return \"string\" == typeof e ? wr(t, e) : e instanceof Un ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nclass Er {}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * (endBefore:1)}, {@link (endAt:1)}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link (query:1)} to create a new query instance that\n * also contains this `QueryConstraint`.\n */ class Ar extends Er {}\n\nfunction Ir(t, e, ...n) {\n    let r = [];\n    e instanceof Er && r.push(e), r = r.concat(n), function(t) {\n        const e = t.filter((t => t instanceof Pr)).length, n = t.filter((t => t instanceof Tr)).length;\n        if (e > 1 || e > 0 && n > 0) throw new U(P, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */ (r);\n    for (const e of r) t = e._apply(t);\n    return t;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link (query:1)} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */ class Tr extends Ar {\n    /**\n     * @internal\n     */\n    constructor(t, e, n) {\n        super(), this._field = t, this._op = e, this._value = n, \n        /** The type of this query constraint */\n        this.type = \"where\";\n    }\n    static _create(t, e, n) {\n        return new Tr(t, e, n);\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return zr(t._query, e), new xn(t.firestore, t.converter, $e(t._query, e));\n    }\n    _parse(t) {\n        const e = Zn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* Operator.ARRAY_CONTAINS */ === i || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i) {\n                    Br(o, i);\n                    const e = [];\n                    for (const n of o) e.push(jr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = jr(r, t, o);\n            } else \"in\" /* Operator.IN */ !== i && \"not-in\" /* Operator.NOT_IN */ !== i && \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ !== i || Br(o, i), \n            u = ur(n, e, o, \n            /* allowArrays= */ \"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i);\n            return Xt.create(s, i, u);\n        }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n        return n;\n    }\n}\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */ function Rr(t, e, n) {\n    const r = e, s = br(\"where\", t);\n    return Tr._create(s, r, n);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n */ class Pr extends Er {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e) {\n        super(), this.type = t, this._queryConstraints = e;\n    }\n    static _create(t, e) {\n        return new Pr(t, e);\n    }\n    _parse(t) {\n        const e = this._queryConstraints.map((e => e._parse(t))).filter((t => t.getFilters().length > 0));\n        return 1 === e.length ? e[0] : te.create(e, this._getOperator());\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return 0 === e.getFilters().length ? t : (function(t, e) {\n            let n = t;\n            const r = e.getFlattenedFilters();\n            for (const t of r) zr(n, t), n = $e(n, t);\n        }\n        // Checks if any of the provided filter operators are included in the given list of filters and\n        // returns the first one that is, or null if none are.\n        (t._query, e), new xn(t.firestore, t.converter, $e(t._query, e)));\n    }\n    _getQueryConstraints() {\n        return this._queryConstraints;\n    }\n    _getOperator() {\n        return \"and\" === this.type ? \"and\" /* CompositeOperator.AND */ : \"or\" /* CompositeOperator.OR */;\n    }\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a disjunction of\n * the given filter constraints. A disjunction filter includes a document if it\n * satisfies any of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a disjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */ function Vr(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => Wr(\"or\", t))), Pr._create(\"or\" /* CompositeOperator.OR */ , t);\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a conjunction of\n * the given filter constraints. A conjunction filter includes a document if it\n * satisfies all of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a conjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */ function $r(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => Wr(\"and\", t))), Pr._create(\"and\" /* CompositeOperator.AND */ , t);\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */ class Dr extends Ar {\n    /**\n     * @internal\n     */\n    constructor(t, e) {\n        super(), this._field = t, this._direction = e, \n        /** The type of this query constraint */\n        this.type = \"orderBy\";\n    }\n    static _create(t, e) {\n        return new Dr(t, e);\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new he(e, n);\n            return function(t, e) {\n                if (null === Ie(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = Te(t);\n                    null !== n && Qr(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._field, this._direction);\n        return new xn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new Ae(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */ function Nr(t, e = \"asc\") {\n    const n = e, r = br(\"orderBy\", t);\n    return Dr._create(r, n);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */ class Fr extends Ar {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._limit = e, this._limitType = n;\n    }\n    static _create(t, e, n) {\n        return new Fr(t, e, n);\n    }\n    _apply(t) {\n        return new xn(t.firestore, t.converter, function(t, e, n) {\n            return new Ae(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this._limit, this._limitType));\n    }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function xr(t) {\n    return at(\"limit\", t), Fr._create(\"limit\", t, \"F\" /* LimitType.First */);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function Sr(t) {\n    return at(\"limitToLast\", t), Fr._create(\"limitToLast\", t, \"L\" /* LimitType.Last */);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link (query:1)} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */ class qr extends Ar {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new qr(t, e, n);\n    }\n    _apply(t) {\n        const e = Ur(t, this.type, this._docOrFields, this._inclusive);\n        return new xn(t.firestore, t.converter, function(t, e) {\n            return new Ae(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction Or(...t) {\n    return qr._create(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction kr(...t) {\n    return qr._create(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */ class Cr extends Ar {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new Cr(t, e, n);\n    }\n    _apply(t) {\n        const e = Ur(t, this.type, this._docOrFields, this._inclusive);\n        return new xn(t.firestore, t.converter, function(t, e) {\n            return new Ae(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction Mr(...t) {\n    return Cr._create(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction Lr(...t) {\n    return Cr._create(\"endAt\", t, \n    /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function Ur(t, e, n, r) {\n    if (n[0] = l(n[0]), n[0] instanceof yr) return function(t, e, n, r, s) {\n        if (!r) throw new U($, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of Pe(t)) if (n.field.isKeyField()) i.push(zt(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if (qt(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new Ht(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Zn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!Re(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(tt.fromString(c));\n                    if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new rt(n);\n                    u.push(zt(e, s));\n                } else {\n                    const t = ur(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new Ht(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction jr(t, e, n) {\n    if (\"string\" == typeof (n = l(n))) {\n        if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!Re(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(tt.fromString(n));\n        if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return zt(t, new rt(r));\n    }\n    if (n instanceof Fn) return zt(t, n._key);\n    throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function Br(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * This is not a comprehensive check, and this function should be removed in the\n * long term. Validations should occur in the Firestore backend.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one inequality per query.\n * 2. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n */ function zr(t, e) {\n    if (e.isInequality()) {\n        const n = Te(t), r = e.field;\n        if (null !== n && !n.isEqual(r)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${r.toString()}'`);\n        const s = Ie(t);\n        null !== s && Qr(t, r, s);\n    }\n    const n = function(t, e) {\n        for (const n of t) for (const t of n.getFlattenedFilters()) if (e.indexOf(t.op) >= 0) return t.op;\n        return null;\n    }(t.filters, function(t) {\n        switch (t) {\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return [ \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ :\n          case \"in\" /* Operator.IN */ :\n            return [ \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"not-in\" /* Operator.NOT_IN */ :\n            return [ \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ , \"!=\" /* Operator.NOT_EQUAL */ ];\n\n          default:\n            return [];\n        }\n    }(e.op));\n    if (null !== n) \n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n}\n\nfunction Qr(t, e, n) {\n    if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\nfunction Wr(t, e) {\n    if (!(e instanceof Tr || e instanceof Pr)) throw new U(P, `Function ${t}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction Gr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass Kr extends class {\n    convertValue(t, e = \"none\") {\n        switch (Mt(t)) {\n          case 0 /* TypeOrder.NullValue */ :\n            return null;\n\n          case 1 /* TypeOrder.BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* TypeOrder.NumberValue */ :\n            return Ft(t.integerValue || t.doubleValue);\n\n          case 3 /* TypeOrder.TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* TypeOrder.ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* TypeOrder.StringValue */ :\n            return t.stringValue;\n\n          case 6 /* TypeOrder.BlobValue */ :\n            return this.convertBytes(xt(t.bytesValue));\n\n          case 7 /* TypeOrder.RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* TypeOrder.GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* TypeOrder.ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* TypeOrder.ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw b();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Pt(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new zn(Ft(t.latitude), Ft(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = Ot(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(kt(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = Nt(t);\n        return new St(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = tt.fromString(t);\n        E(wn(n));\n        const r = new J(n.get(1), n.get(3)), s = new rt(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        g(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new Ln(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new Fn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function Yr(t) {\n    const e = An((t = ct(t, Fn)).firestore), n = new Kr(t.firestore);\n    return _n(e, [ t._key ]).then((e => {\n        E(1 === e.length);\n        const r = e[0];\n        return new yr(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function Hr(t) {\n    !function(t) {\n        if (\"L\" /* LimitType.Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ct(t, xn))._query);\n    const e = An(t.firestore), n = new Kr(t.firestore);\n    return vn(e, t._query).then((e => {\n        const r = e.map((e => new gr(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* LimitType.Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new _r(t, r);\n    }));\n}\n\nfunction Zr(t, e, n) {\n    const r = Gr((t = ct(t, Fn)).converter, e, n), s = Jn(Zn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return gn(An(t.firestore), [ s.toMutation(t._key, Ce.none()) ]);\n}\n\nfunction Jr(t, e, n, ...r) {\n    const s = Zn((t = ct(t, Fn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = l(e)) || e instanceof Un ? or(s, \"updateDoc\", t._key, e, n, r) : ir(s, \"updateDoc\", t._key, e);\n    return gn(An(t.firestore), [ i.toMutation(t._key, Ce.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Xr(t) {\n    return gn(An((t = ct(t, Fn)).firestore), [ new je(t._key, Ce.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function ts(t, e) {\n    const n = kn(t = ct(t, Sn)), r = Gr(t.converter, e), s = Jn(Zn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return gn(An(t.firestore), [ s.toMutation(n._key, Ce.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */ function es(t) {\n    return ns(t, {\n        count: is()\n    });\n}\n\n/**\n * Calculates the specified aggregations over the documents in the result\n * set of the given query, without actually downloading the documents.\n *\n * Using this function to perform aggregations is efficient because only the\n * final aggregation values, not the documents' data, is downloaded. This\n * function can even perform aggregations of the documents if the result set\n * would be prohibitively large to download entirely (e.g. thousands of documents).\n *\n * @param query The query whose result set to aggregate over.\n * @param aggregateSpec An `AggregateSpec` object that specifies the aggregates\n * to perform over the result set. The AggregateSpec specifies aliases for each\n * aggregate, which can be used to retrieve the aggregate result.\n * @example\n * ```typescript\n * const aggregateSnapshot = await getAggregate(query, {\n *   countOfDocs: count(),\n *   totalHours: sum('hours'),\n *   averageScore: average('score')\n * });\n *\n * const countOfDocs: number = aggregateSnapshot.data().countOfDocs;\n * const totalHours: number = aggregateSnapshot.data().totalHours;\n * const averageScore: number | null = aggregateSnapshot.data().averageScore;\n * ```\n * @internal TODO (sum/avg) remove when public\n */ function ns(t, e) {\n    const n = ct(t.firestore, Tn), r = An(n), s = function(t, e) {\n        const n = [];\n        for (const r in t) Object.prototype.hasOwnProperty.call(t, r) && n.push(e(t[r], r, t));\n        return n;\n    }(e, ((t, e) => new bt(new vt(e), t._aggregateType, t._internalFieldPath)));\n    // Run the aggregation and convert the results\n    return bn(r, t._query, s).then((e => function(t, e, n) {\n        const r = new Kr(t);\n        return new Nn(e, r, n);\n    }\n    /**\n * Create an AggregateField object that can be used to compute the sum of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to sum across the result set.\n * @internal TODO (sum/avg) remove when public\n */ (n, t, e)));\n}\n\nfunction rs(t) {\n    return new Dn(\"sum\", fr(\"sum\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the average of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to average across the result set.\n * @internal TODO (sum/avg) remove when public\n */ function ss(t) {\n    return new Dn(\"avg\", fr(\"average\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the count of\n * documents in the result set of a query.\n * @internal TODO (sum/avg) remove when public\n */ function is() {\n    return new Dn(\"count\");\n}\n\n/**\n * Compares two 'AggregateField` instances for equality.\n *\n * @param left Compare this AggregateField to the `right`.\n * @param right Compare this AggregateField to the `left`.\n * @internal TODO (sum/avg) remove when public\n */ function os(t, e) {\n    var n, r;\n    return t instanceof Dn && e instanceof Dn && t._aggregateType === e._aggregateType && (null === (n = t._internalFieldPath) || void 0 === n ? void 0 : n.canonicalString()) === (null === (r = e._internalFieldPath) || void 0 === r ? void 0 : r.canonicalString());\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */ function us(t, e) {\n    return Mn(t.query, e.query) && f(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function cs() {\n    return new Xn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function as() {\n    return new er(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function hs(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new nr(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function ls(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new rr(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function fs(t) {\n    return new sr(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class ds {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Zn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = ws(t, this._firestore), s = Gr(r.converter, e, n), i = Jn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, Ce.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = ws(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof Un ? or(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : ir(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, Ce.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = ws(t, this._firestore);\n        return this._mutations = this._mutations.concat(new je(e._key, Ce.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction ws(t, e) {\n    if ((t = l(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function ms(t) {\n    const e = An(t = ct(t, Tn));\n    return new ds(t, (t => gn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class ps {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await _n(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new je(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = rt.fromPath(e);\n            this.mutations.push(new Be(n, this.precondition(n)));\n        })), await gn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw b();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = fe.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new U(q, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(fe.min()) ? Ce.exists(!1) : Ce.updateTime(e) : Ce.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(fe.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(P, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Ce.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Ce.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const ys = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass gs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this.wt = n.maxAttempts, this.yt = new pn(this.asyncQueue, \"transaction_retry\" /* TimerId.TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.wt -= 1, this.gt();\n    }\n    gt() {\n        this.yt.Y((async () => {\n            const t = new ps(this.datastore), e = this._t(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.vt(t);\n                }))));\n            })).catch((t => {\n                this.vt(t);\n            }));\n        }));\n    }\n    _t(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ft(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    vt(t) {\n        this.wt > 0 && this.bt(t) ? (this.wt -= 1, this.asyncQueue.enqueueAndForget((() => (this.gt(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    bt(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return b();\n\n                  case T:\n                  case R:\n                  case V:\n                  case x:\n                  case C:\n                  case M:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case F:\n                    return !1;\n\n                  case P:\n                  case $:\n                  case D:\n                  case N:\n                  case S:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case q:\n                  case O:\n                  case k:\n                  case L:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function _s() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class vs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new j, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new vs(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(T, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class bs {\n    constructor() {\n        // The last promise in the queue.\n        this.Et = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.At = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.It = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.Tt = [], \n        // visible for testing\n        this.Rt = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.Pt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.Vt = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.$t = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.yt = new pn(this, \"async_queue_retry\" /* TimerId.AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Dt = () => {\n            const t = _s();\n            t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.yt.Z();\n        };\n        const t = _s();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Dt);\n    }\n    get isShuttingDown() {\n        return this.It;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Nt(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.Ft(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.It) {\n            this.It = !0, this.Vt = t || !1;\n            const e = _s();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Dt);\n        }\n    }\n    enqueue(t) {\n        if (this.Nt(), this.It) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new j;\n        return this.Ft((() => this.It && this.Vt ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.At.push(t), this.xt())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async xt() {\n        if (0 !== this.At.length) {\n            try {\n                await this.At[0](), this.At.shift(), this.yt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.At.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.yt.Y((() => this.xt()));\n        }\n    }\n    Ft(t) {\n        const e = this.Et.then((() => (this.Pt = !0, t().catch((t => {\n            this.Rt = t, this.Pt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw g(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.Pt = !1, t))))));\n        return this.Et = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.Nt(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.$t.indexOf(t) > -1 && (e = 0);\n        const r = vs.createAndSchedule(this, t, e, n, (t => this.St(t)));\n        return this.Tt.push(r), r;\n    }\n    Nt() {\n        this.Rt && b();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async qt() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.Et, await t;\n        } while (t !== this.Et);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    Ot(t) {\n        for (const e of this.Tt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    kt(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.qt().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.Tt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.Tt) if (e.skipDelay(), \"all\" /* TimerId.All */ !== t && e.timerId === t) break;\n            return this.qt();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Ct(t) {\n        this.$t.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    St(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.Tt.indexOf(t);\n        this.Tt.splice(e, 1);\n    }\n}\n\nclass Es {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Zn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = ws(t, this._firestore), n = new Kr(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return b();\n            const r = t[0];\n            if (r.isFoundDocument()) return new yr(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new yr(this._firestore, n, e._key, null, e.converter);\n            throw b();\n        }));\n    }\n    set(t, e, n) {\n        const r = ws(t, this._firestore), s = Gr(r.converter, e, n), i = Jn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = ws(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof Un ? or(this._dataReader, \"Transaction.update\", s._key, e, n, r) : ir(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = ws(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function As(t, e, n) {\n    const r = An(t = ct(t, Tn)), s = Object.assign(Object.assign({}, ys), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new j;\n    return new gs(new bs, r, s, (n => e(new Es(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    w = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {instanceIdentifier: e, options: n}) => {\n    const r = t.getProvider(\"app\").getImmediate(), s = new Tn(new W(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function(t, e) {\n        if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n        return new J(t.options.projectId, e);\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (r, e), r);\n    return n && s._setSettings(n), s;\n}), \"PUBLIC\").setMultipleInstances(!0)), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.10.0\", \"\"), r(\"firestore-lite\", \"3.10.0\", \"__BUILD_TARGET__\");\n\nexport { Dn as AggregateField, Nn as AggregateQuerySnapshot, Ln as Bytes, Sn as CollectionReference, Fn as DocumentReference, yr as DocumentSnapshot, Un as FieldPath, Bn as FieldValue, Tn as Firestore, U as FirestoreError, zn as GeoPoint, xn as Query, Pr as QueryCompositeFilterConstraint, Ar as QueryConstraint, gr as QueryDocumentSnapshot, Cr as QueryEndAtConstraint, Tr as QueryFieldFilterConstraint, Fr as QueryLimitConstraint, Dr as QueryOrderByConstraint, _r as QuerySnapshot, qr as QueryStartAtConstraint, St as Timestamp, Es as Transaction, ds as WriteBatch, ts as addDoc, os as aggregateFieldEqual, us as aggregateQuerySnapshotEqual, $r as and, ls as arrayRemove, hs as arrayUnion, ss as average, qn as collection, On as collectionGroup, Vn as connectFirestoreEmulator, is as count, Xr as deleteDoc, cs as deleteField, kn as doc, jn as documentId, Lr as endAt, Mr as endBefore, ns as getAggregate, es as getCount, Yr as getDoc, Hr as getDocs, Pn as getFirestore, fs as increment, Rn as initializeFirestore, xr as limit, Sr as limitToLast, Vr as or, Nr as orderBy, Ir as query, Mn as queryEqual, Cn as refEqual, As as runTransaction, as as serverTimestamp, Zr as setDoc, p as setLogLevel, vr as snapshotEqual, kr as startAfter, Or as startAt, rs as sum, $n as terminate, Jr as updateDoc, Rr as where, ms as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}